<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[弟子规讲课稿讨论]]></title>
    <url>%2Fdizigui.html</url>
    <content type="text"><![CDATA[Please Enter Token Here Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>传统文化</category>
      </categories>
      <tags>
        <tag>弟子规</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git Push 免输账户密码]]></title>
    <url>%2Fgit-credential.html</url>
    <content type="text"><![CDATA[123456git config --global credential.helper storegit push# type your username and password# Next time you don't have to type]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Node.js 构建RESTful API]]></title>
    <url>%2Fnodejs.html</url>
    <content type="text"><![CDATA[Introduction Install Node.js Run Node.js Node Module System NPM [toc] Introduction What is Node.js? Running Environemnt for Javascript outside browsers, often used for create backend services - API. Node is ideal for building highly-scalable, data-insentive and real-time apps. Easy to develop Can be used for prototyping and agile development Can be used in industry for large projects like Uber, Paypal, Netflix and Walmart. Friendly for javascript programmers Big community to support, libs I have alreay install node yarn Where is Node from? extract the javascript engine from Chrome called v8 integrate the v8 with additional modules Asynchronous in Node.js Synchronous by default in ASP.net Asynchronous by default in nodejs 异步机制：使用Event Queue,频繁检查，执行任务 What is Node.js used for? Node is ideal for I/O Intensive Applications. Node is not ideal for CPU Intensive Applications like video encoding and image processing applications. Install Node.js 1234# 也可以下载mac安装包brew install node# 查看版本node --version Run Node.js 1234567cd workspacemkdir newAppcd newAppcode . # use VS code# create js file and runnode app.js # for example Code Example 12345678hello = () =&gt; &#123; console.log('hello world')&#125;hello(); // vscode execute through node automaticallyconsole.log(window) // error// no window in node, that's for browser. Node Module System Global object object that we can access everywhere, there is an object called global. 1234567global.console.log(1);global.setTimeout();global.clearTimeout();global.setInterval();global.clearInterval(); But in browser, the global obejct is the window object. 1234567window.console.log(1);window.setTimeout();window.clearTimeout();window.setInterval();window.clearInterval(); And we can just simplify it in whichever env. 1234567console.log(1);setTimeout();clearTimeout();setInterval();clearInterval(); But if you design your own obejct, it doesn’t belongs to global obejct. node different global and local 12var message = "hello";console.log(global.message);// undefinded error However it belongs to window if you use the browser rather than node. window literally eat all food all things belong to window. 12var message = 'hello';console.log(window.message); Insights: Why we need to use Module? Node is better. Browser is worse. Two js run in browser, with two variables or methods of the same name, the later one will override the previous one. Therefore, we use module to localize variables to avoid collapse. 在浏览器中，所有变量和方法都属于window 在Node中，如非特别定义，所有变量和方法都属于自己所在的文件，而不属于global Module Import and Export Module like private in Java Export module.exports.log = log 1234567891011121314151617// ./logger.jsvar url = "http://www.example.com/login";log = (m) =&gt; &#123; console.log(m)&#125;// export the log function as log.`module.exports.log = log;// export single function module.exports = log;// Ormoduel.exports = &#123; log: log, url: url&#125; Import const {log, url} = require('./logger') 123456789101112// Way Oneconst logger = require('./logger') // const is better// execute the log methodlogger.log();// Way Two - better, more lightweightconst &#123;log, url&#125; = require('./logger')// If it is a single function// module.exports = log;const log = require('./logger');log("hello") './logger' vs 'logger' './logger': Current Ddirectory 'logger': Built in Current Directory in node_modules Node Wrapper 12345678(function (exports, require, module, __filename, __dirname) &#123; // file code console.log(exports); console.log(require); console.log(module); console.log(__filename); console.log(__dirname);&#125; Node Modules API Docs File System HTTP 12345678910const http = require('http');const server = http.createServer();// action after connection eventserver.on('connection',(s =&gt; console.log("new connection."))); // very low level// port 3003server.listen(3003);console.log('Listening on port 3000...'); 12345678910111213141516171819202122const http = require('http');const server = http.createServer( (req,res) =&gt; &#123; if (req.url === '/')&#123; res.write("hello world"); res.end(); &#125; if (req.url === '/api') &#123; res.write(JSON.stringify(&#123; "1":2 &#125;)); res.end(); &#125; &#125;);// port 3003server.listen(3003);console.log('Listening on port 3003...'); OS Path Process Query Strings Stream NPM Create NPM Project Switch Version of npm 1sudo npm i -g npm@5.5.1 Create package.json file 123npm init# default settingsnpm init --yes Install Node Package package is installed in node_modules 1234npm install underscore# shorternpm i underscore# you don't have to add --save anyore A better way yarn 12yarn add underscoreyarn remove underscore install all package in package.json 123yarn# ornpm i Git Ignore Packages to Push 123456789git inittouch .gitignore## inside .gitignorenode_modules/git add .git commit -m "..."git push Underscore.js 12var _ = require('underscore');console.log(_.contains([1,2,3],2)) Semantic Versioning 4.13.6 (Patch) 6: bugs fixing version (Minor) 13: new features version without breaking exsiting API (Main) 4: new features version with breaking existing application exact version : 4.13.6 stable Major and Minor: ~4.13.6 stable Major: ^4.13.6 Inspect installed versions 12345yarn listyarn list --depth=0# 效果是不一样的npm listnpm list --depth=0 View Packages 12npm view mongoosenpm view mongoose dependencies Update outdated packages 123456789npm outdated# this will only update minor and patch updatenpm update# update for major updatesudo npm i -g npm-check-updatesncu -u # to upgrade the json fileyarn # execute the update Install Packages only for Dev 1npm i jshint --save-dev Uninstall Packages 123npm un mongoose# oryarn remove mongoose Global Packages Global: can be used under any folders Local: can only be used withon on folder 12345678# update the npm to the latest versionsudo npm i -g npm# to see all outdated global packagesnpm -g outdated# uninstall global packagesnpm un -g npm NPM Registry Publish Your Own Package to NPM Registry 12345# prepare the projectmkdir lion-libcd lion-lib/npm init --yestouch index.js 12// index.jsmodule.exports.url = "asdadsad" 12345678# register for registrynpm adduser# loginnpm login# make sure your package name is unique in the pacakge.json file and the push to the registrynpm publish Updating your Published Packages 1234567# first you have to update the versio numbernpm version majornpm version minornpn version patch# then publish to the registrynpm publish RESTful Service REST Definition REST: Representational State Transfer It’s a convention for building these HTTP serivces. HTTP Protocol Http://vidly.com/api/customers/1 Http: Protocol vidly.com: Domain api: Path customers: Resource 1: Resource Unique Identifier HTTP Methods GET: retrive resources POST: upload resources PUT: update global resources PATCH: update local resources DELETE: delete resources 12345GET /api/customersGET /api/customers/1PUT /api/customers/1DELETE /api/customers/1POST /api/customers Node Monitor Reload the Node Automatically when changes apply. 123sudo npm i -g nodemon# instead of node app.jsnodemon app.js 在配置vscode code runner为nodemon之后，nodemon失效 shell中nodemon app.js, nodemon不会失效. 推荐使用shell的方式 Express framework Get to know express 1234# inspect it in shellnpm view express# get the official website# http://expressjs.com/ Install Express 1yarn add express Hello World 123456789101112// Import express and initialize an appvar express = require('express');var app = express();var port = process.env.PORT || 3000;// Set routesapp.get('/',(req, res) =&gt; &#123; res.send("Hello World")&#125;);// start listenapp.listen(port); Basic Routes 1app.METHOD(URL,CALLBACK_FUNC) Req Method Method Description req.get() 获取header中某属性的值 req.is() 判别Content-Type Req Properties Property Description req.body 键值对数据 req.cookies 获取cookies req.hostname 获取域名 req.ip 获取ip req.method 获取方法 req.originalUrl 完整url req.baseUrl 路由插入的路径 req.path 细节路径 req.params 存储参数化数据 req.protocol http/https req.query 获取url中?间所夹参数 Res Method Method Description res.download() 提示将要下载文件。 res.end() 结束响应进程。 res.json() 发送 JSON 响应。 res.jsonp() 在 JSONP 的支持下发送 JSON 响应。 res.redirect() 重定向请求。 res.render() 呈现视图模板。 res.send() 发送各种类型的响应。 res.sendFile 以八位元流形式发送文件。 res.sendStatus() 设置响应状态码并以响应主体形式发送其字符串表示。 Middleware Routes 统一请求中间件：适合做User Authentication 12345678910111213141516// Import express and initialize an appvar express = require('express');var app = express();var port = process.env.PORT || 3000;// Set routesapp.all('/', (req,res,next) =&gt; &#123; console.log('authentication'); next();&#125;);app.get('/',(req, res) =&gt; &#123; res.send("How are you?")&#125;);// start listenapp.listen(port); 单一路径多个回调 1234567891011121314// configure expressvar express = require('express');var app = express();var port = process.env.PORT || 3000;// routesapp.route("/").get((req,res)=&gt; &#123; res.send("get test");&#125;).post((req,res)=&gt; &#123; res.send("post test");&#125;)// listenapp.listen(port); express.Router Use the express.Router class to create modular, mountable route handlers. A Router instance is a complete middleware and routing system; for this reason, it is often referred to as a “mini-app”. Router Method Method Description router.all() 匹配所有http请求，无中间件 router.get() 匹配GET请求 router.param() 匹配特定参数 router.route() 单一路径匹配多个回调 router.use() 匹配所有http请求, 添加中间件 12345678910111213141516171819202122232425262728293031// bird.js// Import express and initialize an appvar express = require('express');var app = express();var router = express.Router(); var port = process.env.PORT || 3000;// middlewarerouter.use((req,res,next) =&gt; &#123; console.log("authentication"); next();&#125;)router.get("/",(req,res) =&gt; &#123; res.send("main page.")&#125;)router.post("/",(req,res) =&gt; &#123; res.send("main post.")&#125;)router.get("/about", (req,res)=&gt;&#123; res.send("about page.")&#125;)// mount the middleware(router);app.use('/',router);// start listenapp.listen(port);module.exports.router = router; route.use’s callback is a middleware 12345// main.jsvar &#123;router&#125; = require('./birds');// birds is also a middlewareapp.use('/birds', birds);app.listen(3000); Parameter Route 123456789101112131415161718192021222324252627282930313233// Import express and initialize an appvar express = require('express');var app = express();var router = express.Router();var port = process.env.PORT || 3000;// middlewarerouter.use((req, res, next) =&gt; &#123; console.log('authentication'); next();&#125;);router.get('/', (req, res) =&gt; &#123; res.send('Main Page.');&#125;);//实际上 ： 充当了一个通配作用，通配规则如何，请看验证参数router.get('/:id', (req, res) =&gt; &#123; res.send('id namespace.');&#125;);router.post('/', (req, res) =&gt; &#123; res.send('main post.');&#125;);router.get('/about', (req, res) =&gt; &#123; res.send('about page.');&#125;);// mount the middleware(router);app.use('/', router);// start listenapp.listen(port); Parameter Check 有時候我們會需要針對傳入的路由參數來進行篩選或驗證，例如檢查使用者所輸入的字串是否是合法的名稱，這時候就可以使用 .param() 這個專門用來處理參數的 middleware： 12345678910111213141516171819202122232425262728293031323334353637383940414243// Import express and initialize an appvar express = require('express');var app = express();var router = express.Router();var port = process.env.PORT || 3000;// middlewarerouter.use((req, res, next) =&gt; &#123; console.log('authentication'); next();&#125;);router.get('/', (req, res) =&gt; &#123; res.send('Main Page.');&#125;);// 位于路由之前，充当另外一个middlewarerouter.param('id', (req, res, next, id) =&gt; &#123; // validation logi here console.log('valid id'); // send back request req.id = id; next();&#125;);router.get('/:id/:name', (req, res) =&gt; &#123; res.send(req.params); // res.send(req.params.name);&#125;);router.post('/', (req, res) =&gt; &#123; res.send('main post.');&#125;);router.get('/about', (req, res) =&gt; &#123; res.send('about page.');&#125;);// mount the middleware(router);app.use('/', router);// start listenapp.listen(port); Express Request]]></content>
      <categories>
        <category>Web Development</category>
      </categories>
      <tags>
        <tag>Frontend</tag>
        <tag>Nodejs</tag>
        <tag>Restful API</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[后端工程师技术图谱]]></title>
    <url>%2Fbackendallinone.html</url>
    <content type="text"><![CDATA[数据结构 常用算法 并发 操作系统 设计模式 运维 &amp; 统计 &amp; 技术支持 中间件 网络 数据库 搜索引擎 … 数据结构 队列 集合 链表、数组 字典、关联数组 栈 树 二叉树 完全二叉树 平衡二叉树 二叉查找树（BST） 红黑树 B-，B+，B*树 LSM 树 BitSet 常用算法 排序、查找算法 选择排序 冒泡排序 插入排序 快速排序 归并排序 希尔排序 堆排序 计数排序 桶排序 基数排序 二分查找 Java 中的排序工具 布隆过滤器 字符串比较 KPM 算法 深度优先、广度优先 贪心算法 回溯算法 剪枝算法 动态规划 朴素贝叶斯 推荐算法 最小生成树算法 最短路径算法 并发 多线程 线程安全 一致性、事务 事务 ACID 特性 事务的隔离级别 锁 Java中的锁和同步类 公平锁 &amp; 非公平锁 悲观锁 &amp; 乐观锁 &amp; CAS ABA 问题 CopyOnWrite容器 RingBuffer 可重入锁 &amp; 不可重入锁 互斥锁 &amp; 共享锁 死锁 操作系统 计算机原理 进程 线程 协程 Linux 设计模式 设计模式的六大原则 23种常见设计模式 应用场景 单例模式 责任链模式 MVC IOC AOP UML 微服务思想 康威定律 运维 &amp; 统计 &amp; 技术支持 常规监控 APM 统计分析 持续集成(CI/CD) Jenkins 环境分离 自动化运维 Ansible puppet chef 测试 TDD 理论 单元测试 压力测试 全链路压测 A/B Test 虚拟化 KVM Xen OpenVZ 容器技术 Docker 云技术 OpenStack DevOps 文档管理 中间件 Web Server Nginx OpenResty Apache Httpd Tomcat 架构原理 调优方案 Jetty 缓存 本地缓存 客户端缓存 Memcached Redis 架构 回收策略 Tair 消息队列 消息总线 消息的顺序 RabbitMQ RocketMQ ActiveMQ Kafka Redis 消息推送 ZeroMQ 定时调度 单机定时调度 分布式定时调度 RPC Dubbo Thrift gRPC 数据库中间件 Sharding Jdbc 日志系统 日志搜集 配置中心 API 网关 网络 协议 OSI 七层协议 TCP/IP HTTP HTTP2.0 HTTPS 网络模型 Epoll NIO kqueue 连接和短连接 框架 零拷贝（Zero-copy） 序列化(二进制协议) Hessian Protobuf 数据库 基础理论 数据库设计的三大范式 MySQL 原理 InnoDB 优化 索引 聚集索引, 非聚集索引 复合索引 自适应哈希索引(AHI) explain NoSQL MongoDB Hbase 搜索引擎 搜索引擎原理 Lucene Elasticsearch Solr sphinx 性能 性能优化方法论 容量评估 CDN 网络 连接池 性能调优 流式计算 Storm Flink Kafka Stream 应用场景 Hadoop HDFS MapReduce Yarn Spark 安全 web 安全 XSS CSRF SQL 注入 Hash Dos 脚本注入 漏洞扫描工具 验证码 DDoS 防范 用户隐私信息保护 加密解密 对称加密 哈希算法 非对称加密 服务器安全 数据安全 数据备份 网络隔离 内外网分离 登录跳板机 授权 RBAC OAuth2.0 常用开源框架 开源协议 日志框架 Log4j、Log4j2 Logback ORM 网络框架 Web 框架 Spring 家族 工具框架 分布式设计 扩展性设计 稳定性 &amp; 高可用 硬件负载均衡 软件负载均衡 限流 应用层容灾 跨机房容灾 容灾演练流程 平滑启动 数据库扩展 读写分离模式 分片模式 服务治理 服务注册与发现 服务路由控制 分布式一致 CAP 与 BASE 理论 分布式锁 分布式一致性算法 PAXOS Zab Raft Gossip 两阶段提交、多阶段提交 幂等 分布式一致方案 分布式 Leader 节点选举 TCC(Try/Confirm/Cancel) 柔性事务 分布式文件系统 唯一ID 生成 全局唯一ID 一致性Hash算法 设计思想 &amp; 开发模式 DDD(Domain-driven Design - 领域驱动设计) 命令查询职责分离(CQRS) 贫血，充血模型 Actor 模式 响应式编程 DODAF2.0 Serverless 项目管理 架构评审 重构 代码规范 RUP 看板管理 SCRUM 极限编程 敏捷开发 结对编程 通用业务术语 技术趋势 架构师素质 团队管理 招聘 资讯 行业资讯 公众号列表 博客 团队博客 个人博客 综合门户、社区 问答、讨论类社区 行业数据分析 专项网站 其他类 推荐参考书 在线电子书 纸质书 开发方面 架构方面 技术管理方面 基础理论 工具方面 大数据方面 技术资源 开源资源 手册、文档、教程 在线课堂 会议、活动 常用APP 找工作 工具 代码托管 文件服务 综合云服务商]]></content>
      <categories>
        <category>Career</category>
      </categories>
      <tags>
        <tag>Programmer</tag>
        <tag>Backend</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为什么在中国，规定白衣不能阅戒?]]></title>
    <url>%2Fjielv.html</url>
    <content type="text"><![CDATA[为什么在中国，规定白衣不能阅戒？ 1. 小乘戒是在印度指定，传到中国环境发生巨大变化，使得中国的佛弟子们很难做到所有戒规，怕世人以此来攻击僧侣，诋毁佛教。 2. 大乘果位的菩萨利用各种善巧方便，普度众生，白衣阅戒，易使得世人诽谤、诋毁果位菩萨，造下口业。 为什么在中国，规定白衣不能阅戒？ 1. 小乘戒是在印度指定，传到中国环境发生巨大变化，使得中国的佛弟子们很难做到所有戒规，怕世人以此来攻击僧侣，诋毁佛教。 2. 大乘果位的菩萨利用各种善巧方便，普度众生，白衣阅戒，易使得世人诽谤、诋毁果位菩萨，造下口业。]]></content>
      <categories>
        <category>Buddhism</category>
      </categories>
      <tags>
        <tag>易度门</tag>
        <tag>杨宁</tag>
        <tag>佛学笔记</tag>
        <tag>学习佛法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[佛法在印度的分期弘扬以及三乘教学]]></title>
    <url>%2Ffofafenqi.html</url>
    <content type="text"><![CDATA[一。小乘佛教时期 1. 原始佛教时期 2. 部派佛教时期 二。 大乘佛教时期 三。 密教时期 四。 小乘、大乘、密乘 五。 教外别传 [TOC] 一。小乘佛教时期 佛法在印度传播 重点： 出离红尘，持戒，修四禅八定，寂灭定 见地： 知苦及苦的根源，离情去欲 1. 原始佛教时期 佛初转法轮 - 涅槃，约100年左右 教授重点：小乘佛法 弟子果味：有弟子证得阿罗汉果 2. 部派佛教时期 涅槃后400年 教授重点：小乘教理 弟子果位：已证阿罗汉果的弟子从阿罗汉转向菩萨乘 二。 大乘佛教时期 在印度传播 重点：六度（布施，持戒，忍辱，精进，禅定，般若）；入世行菩萨道，自度度人，圆满功德。 见地：色空不二，心无挂碍。 修证：中观、唯识，证十地菩萨果位 佛涅槃后的第二个500年 教授重点：大乘佛法 弟子果位：有弟子证得菩萨果味 三。 密教时期 印度佛法传播转入密乘 重点：身口意清净，与诸佛相应，得到果位上师和佛菩萨的灌顶。 主张：以欲制欲，以贪治贪，最后实证“这世界一切法与实相不相违背”，即身成佛。 佛涅槃后的第三个500年 教授重点：密法 弟子果位：菩萨乘和金刚乘果味皆有人证得 四。 小乘、大乘、密乘 《法华经》：声闻乘，缘觉乘，菩萨乘 现在：声闻缘觉为小乘，菩萨为大乘，大乘又分显密两宗。两宗在戒律和修证法门上都有很大不同，但是都以大乘见地为指导思想。 三乘：小乘，大乘，密乘 五。 教外别传 小乘，大乘，密乘都是此地修学。称为渐修。 教外别传，以心印心。称为顿悟。 佛嘱托迦叶尊者将以心印心在印度传下去，在二十八祖菩提达摩之时，传至中国，从而形成了禅宗！ 如果我们把成佛比喻成从有生死的此岸到解脱生死的彼岸,那佛法就像一艘从此岸到彼岸的船或航海的灯塔。我们要驾着这艘船，在航灯的照耀下，越过心灵的情天欲海，破除在三界中的种种执着，分别，而后登上成佛的变。那时，此岸彼岸、这艘船以及灯塔对于我们来说也如梦如幻，可以全部放下不要了。此时，我们领悟的就是教外别传的心法。]]></content>
      <categories>
        <category>Buddhism</category>
      </categories>
      <tags>
        <tag>易度门</tag>
        <tag>杨宁</tag>
        <tag>佛学笔记</tag>
        <tag>学习佛法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Simple Notes]]></title>
    <url>%2Fdailynotes.html</url>
    <content type="text"><![CDATA[Please Enter Token Here Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>DayNotes</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Github上传大文件]]></title>
    <url>%2Fgitlfs.html</url>
    <content type="text"><![CDATA[Install git lfs 12345# mac上安装brew install git-lfs# 验证是否安装git lfs install Git init 必须在git repo中使用git lfs 12git init# git add -A Track file 在push大文件前，要手动track这些文件 123git lfs track "bigfile.suffix"git lfs track "*.zip"git lfs track "repo/" Commit &amp; Push track之后正常git commit push就可以，会自动上传 12git commit -m "commit comment"git push 后记 期待可以不用track，全自动的git lfs.]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>git lfs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Next Generation JavaScript]]></title>
    <url>%2Fes6.html</url>
    <content type="text"><![CDATA[Variables 123var: 可以重复命名，全局作用域let: 可变，块级作用域，不能重复命名const: 不可变 Functions 123function myFunc() &#123;&#125;// ES6const myFunc = (parameters) =&gt; &#123;&#125; Modules 1234567891011121314// ./person.jsexport default person// ./utility.jsexport const clean = () =&gt; &#123;&#125;；export const baseData = 10;// ./app.jsimport person from './person.js'import prs from './person.js'// use &#123;&#125; to specifically import modules from js fileimport &#123;baseData&#125; from './utility.js'import &#123;clean&#125; from './utility.js' Class 12345678class Person &#123; constructor() &#123; this.name = 'James'; &#125; printMyName()&#123; console.log &#125;&#125; Inheritance 123456789101112131415161718192021222324252627class Human &#123; constructor()&#123; this.gender = 'male'; &#125; printGender()&#123; console.log(this.gender); &#125;&#125;class Person &#123; constructor()&#123; // must be declared explicitly super(); this.name = 'Max'; this.gender = 'female' &#125; printMyName()&#123; console.log(this.name); &#125;&#125;const person = new Person();person.printMyName();person.printGender(); ES6 Syntax 12345678class Person &#123; constructor() &#123; this.name = 'James'; &#125; printMyName()&#123; console.log &#125;&#125; Inheritance 子类构造器中必须出现super 因为子类未指定this作用域 12345678910111213141516171819class Human &#123; gender = 'male'; printGender = () =&gt; &#123; console.log(this.gender); &#125;&#125;class Person &#123; name = 'Max'; gender = 'female' printMyName = () =&gt; &#123; console.log(this.name); &#125;&#125;const person = new Person();person.printMyName();person.printGender(); Spread &amp; Rest 1234567891011121314151617181920212223242526272829// use ... to unwrap the old arrayconst newArray = [...oldArray,1,2]// use ... to unwrap the old objectconst newObject - &#123;...oldObject, newProp:5&#125;// use ... to wrap variable length of arguments into one arrayfunciton sortArgs(...args)&#123; return args.sort();&#125;// example:// spread function on arrayconst arr1 = [1,2];const arr2 = [...arr1,3];console.log(arr2);// spread function on objectconst obj1 = &#123;name:'James'&#125;;const obj2 = &#123;...obj1, age:28&#125;;console.log(obj2)// rest function in function argsconst filter = (...args) =&gt;&#123; // === check type and value return args.filter(el =&gt; el === 1);&#125;console.log(filter(1,2,3,1)) Destructuring 123456789// array destructuring[a,b] = ['Hello','Max'];console.log(a);console.log(b);// object destructuring&#123;name&#125; = &#123;name:'Max',age:28&#125;;console.log(name);console.log(age); //undefined; Primitive type and Reference type 1234567891011121314151617const person = &#123; name:'James'&#125;;const secondPerson = person; // reference typeconsole.log(secondPerson);const person = &#123; name: 'James'&#125;;const secondPerson = &#123; ...person, age = 29&#125;;console.log(secondPerson); Array Function 无作用域 Cannot be used as the constructor 1234const numbers = [1,2,3];const doubleNumArray = numbers.map(el =&gt; el*2);console.log(doubleNumArray); Promise 先调用后声明 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152// 基本结构new Promise((resolve,reject) =&gt; &#123; $.ajax( &#123; url:'...'. type:'post', success(res)&#123; resolve(res) &#125;, error(err)&#123; reject(err) &#125; &#125; )&#125; ).then((res)=&gt; console.log('success'),(err)=&gt; console.log("error"))// 链式操作var promiseFn1 = new Promise((resolve,reject) =&gt; &#123; $.ajax( &#123; url:"...", type:'post', success(res)&#123; resolve(res); &#125;, error(err)&#123; reject(err); &#125; )&#125; &#125;)var promiseFn2 = new Promise((resolve,reject) =&gt; &#123; $.ajax(&#123; url:"...", type:'get', success(res)&#123; resolve(res); &#125;, error(err)&#123; reject(err); &#125; &#125;) &#125;)// function -&gt; object orientedpromiseFn1.then(()=&gt; &#123; console.log("promise1 success") return promiseFn2 &#125;).then(()=&gt; console.log('promiseFn2 success!'))]]></content>
      <categories>
        <category>Web Development</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
        <tag>ES6</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML页面加载过程]]></title>
    <url>%2Fhtmlloading.html</url>
    <content type="text"><![CDATA[页面加载过程 url解析 -&gt; DNS查询 -&gt; 资源请求 -&gt; 浏览器解析 url结构 协议 + 域名 + 端口 + 路径 + 参数 + 哈希 DNS查询 浏览器 - DNS缓存+DNS服务器 dns-fetch: fetch the ip address for some dns and cache 资源请求 browser -&gt; Request Header + 参数 -&gt; 服务器 服务器 -&gt; status + response header + body -&gt; browser 浏览器解析 DOM + JS(优先) -&gt; 构建渲染树 -&gt; 布局 -&gt; 绘制]]></content>
      <categories>
        <category>Web Development</category>
      </categories>
      <tags>
        <tag>HTML</tag>
        <tag>Web Development</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux/Unix下查找大于100mb的文件]]></title>
    <url>%2Ffindbigfilelinux.html</url>
    <content type="text"><![CDATA[查找当前目录下大于100mb的所有文件 1find . -type f -size +100M 显示当前目录大小 1du -sh . 显示当前目录或者文件夹的所占磁盘空间 1du -sh * 显示前十个占用空间最大的目录 1du -s * | sort -nr | head]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[机器学习面试攻略(国内)]]></title>
    <url>%2Fmlinterview.html</url>
    <content type="text"><![CDATA[机器学习求职攻略(国内) AI岗位招聘流程 公司与岗位盘点 简历的书写和优化 项目与竞赛 机器学习面试考察点 面试题的真实模样 机器学习求职攻略(国内) 根本原则：投其所好 AI岗位招聘流程 秋招 8月到10月底结束战斗 春招 春节过后 跳槽 春节前后人员流动大，难度系数较低，需要相关背景和项目要求 7月底高校抢人 8月初内推筛选 8月底9月初正式校招 公司与岗位盘点 知名企业 腾讯,阿里，金服，滴滴，网易，百度，头条，美团，陆金所 京东，爱奇艺，宜人贷，360，优酷，土豆，快手，抖音，苏宁易购，小米 岗位职能 平台数据处理类：数据清洗，大样本和高维度数据，mapreduce 算法研究应用类：文本挖掘，推荐，排序，风控，图像识别，商业智能，传统行业应用（预测用户行为） 比较热门的：图像视频，计算机视觉，文本的岗位更多一些， 薪资水平 AI&gt;后端&gt;移动=前端 简历的书写和优化 简历： 个人信息，专业技能，项目经历，科研经历 专业技能: 算法(机器学习算法，深度学习算法)，特定方向技能，编程语言，数据分析处理工具库(python,spark) 项目经历：学校项目，数据科学比赛，实习经历 科研经历：论文，学术成就 原则：真实具体-项目背景，用了什么工具，达到什么效果（加评估)，如果优化和改进的？ 项目与竞赛 核心 项目选择和岗位匹配，体现数据技能，还能加点paper就好了 项目名称和背景 项目数据和特点 项目的流程和关键 项目的核心技术及优化手段 竞赛平台：Kaggle, 天池， DataCastle 读别人的成果 写自己的项目 比赛的选择：和岗位背景匹配的竞赛，体现相关技能和技术的比赛，有优异成绩的比赛 比赛的一般思路： 问题分析和抽象 数据分析和发现 数据与特征处理 建模以及优化（在模型还是在数据层面优化） 机器学习面试考察点 主要内容： 常用机器学习算法理解 数据结构算法题 项目实施与优化细节 业务认识与沟通 考察方面： 算法模型和理论基础扎实程度 工程实现能力和编码水平 业务理解和思考深度 沟通和表达能力 备战资源： 代码算法：快排，二分查找； 剑指offer；leetcode 机器学习 李航《统计学习方法》 周志华《机器学习》 Coursera Stanford《Machine Learning》 Coursera台湾大学《机器学习高级技法》 项目：算法，优缺点，数据，特征，优化等等 海量数据处理： Map_Reduce Hadoop spark 面试题的真实模样 统计 统计的基本知识 贝叶斯公式 排列组合题目 数学期望 统计概率题目 算法 对时间复杂度和空间复杂度有基本的认知 排序与二分查找 链表翻转 打印矩阵倒三角 二叉树中任意两个节点的最近公共祖先 上亿的query中周到频率最高的k个 机器学习 机器学习算法-核心 推到逻辑回归算法，loss function L1/L2正则化的区别 决策树如何完成回归 解释随机森林和GBDT 数据幅度缩放和归一化 是偶写SVM间隔对偶的推到 K-MEANS中k如何选取 优化算法 介绍一些bagging和boosting 过拟合和欠拟合发生的原因，如何缓解过拟合]]></content>
      <categories>
        <category>Career</category>
      </categories>
      <tags>
        <tag>Interview</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[My Resume (Markdown)]]></title>
    <url>%2Fmdresume.html</url>
    <content type="text"><![CDATA[Please Enter Token Here Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>Career</category>
      </categories>
      <tags>
        <tag>Interview</tag>
        <tag>Resume</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Admin Dashboard MRD]]></title>
    <url>%2Fadmindata.html</url>
    <content type="text"><![CDATA[Please Enter Token Here Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>Job</category>
      </categories>
      <tags>
        <tag>MRD</tag>
        <tag>Job</tag>
        <tag>Private</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Asynchronous Client - Axios]]></title>
    <url>%2Faxios.html</url>
    <content type="text"><![CDATA[Install Axios Import Axios Promise Async/await Axios API without async/await Request Config/Options Axios Response Object Axios Error Object Axios Instance HTTP client - Axios 1. Install Axios 123npm install ---save aixos# oryarn add axios 2. Import Axios 12345// react styleimport axios from "axios";// javascript styleconst axios = require(); 3. Promise 1234567const promise = new Promise((resolve,reject) =&gt; &#123; if (//异步操作成功) &#123; resolve(value); // resolve 是请求成功后的解决方案 &#125; else &#123; reject(value); // reject 是请求失败后的解决方案 &#125;&#125;) 4. async/await async: async ensures that the function returns a promise, and wraps non-promises in it. [强制返回 promise] 12345678910async function f() &#123; return Promise.resolve(1);&#125;f().then(alert); // 1/****** Automatically Wrap ********/async function f() &#123; return 1;&#125;f().then(alert); // 1 await: The keyword await makes JavaScript wait until that promise settles and returns its result.[卡后方到最近一级 block 间的代码] 123456// works only inside async functions, the following is wrongres = await axios(&#123; url: "https://api.github.com/users/KrunalLathiya", method: "get"&#125;);console.log(res); Wrap the await with async 1234567891011121314151617// run in the chrome consoleconst axios = require("axios");async function getData() &#123; console.log(1); res = await axios(&#123; // await only stuck code afterwards but within the same async block url: "https://api.github.com/users/KrunalLathiya", method: "get" &#125;); console.log(2);&#125;console.log(0);getData();console.log(3);// the result is 0 - 1 - 3 - 2 Conclusion: async: a wrapper of await which forces to return a promise. await to stuck code afterwards which needs a wrapper ( async ) They are twins. 5. Axios API without async/await API methods 1234567axios.get(); // get dataaxios.post(); // insert new dataaxios.put(); // replace oldaxios.delete(); // remove dataaxios.patch(); // send only changed dataaxios.options();axios.head(); Elegant usage 123456789101112131415161718const axios = require("axios");getGithubData = () =&gt; &#123; axios .get("https://api.github.com/users/KrunalLathiya", &#123; params: &#123; ID: 12345 &#125; &#125;) .then(res =&gt; &#123; console.log(res.data.login); &#125;) .catch(err =&gt; &#123; console.log(err); &#125;);&#125;;getGithubData(); 6. Request Config/Options Authorization (GET) 1234567891011121314const axios = require("axios");getGithubData = () =&gt; &#123; axios .get("https://appdividend.com", &#123; // params: &#123;&#125; .. headers: &#123; Authorization: "Bearer " + "" //the token is a variable which holds the token &#125; &#125;) .then(res =&gt; console.log(res)) .catch(err =&gt; console.log(err));&#125;;getGithubData(); Authorization (POST) 123456789101112131415161718192021const axios = require("axios");let data = &#123; email: "test@163.com"&#125;;let config = &#123; headers: &#123; "Content-Type": "application/x-www-form-urlencoded", Authorization: "Bearer " + "token" &#125;, responseType: "blob"&#125;;getGithubData = () =&gt; &#123; axios .post("http://appdivident.com", data, config) .then(res =&gt; console.log(res.data)) .catch(err =&gt; console.log(err));&#125;;getGithubData(); 7. Axios Response Object data: the payload returned from the server. By default, Axios expects JSON and will parse this back into a JavaScript object for you. status: the HTTP code returned from the server. statusText: the HTTP status message returned by the server. headers: all the headers sent back by the server. config: the original request configuration. request: the actual XMLHttpRequest object (when running in a browser). 8. Axios Error Object message: the error message text response: the response obejct (if received) as described in the previous section. request: the actual XMLHttpRequest object (when running in a browser). config: the original request configuration 9. Axios Instance 123456const axios = require("axios");request = axios.create(&#123; baseURL: "http://ec2-13-211-47-167.ap-southeast-2.compute.amazonaws.com:3000"&#125;);request.get("/articles").then(res =&gt; console.log(res.data));]]></content>
      <categories>
        <category>Web Development</category>
      </categories>
      <tags>
        <tag>Async</tag>
        <tag>Javascript</tag>
        <tag>React</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo Markdown]]></title>
    <url>%2Fmdtutorial.html</url>
    <content type="text"><![CDATA[Font’s Color and Size 字体Alignment 对齐方式Next Notes 便签Tab 选项卡Label 标签Button 按钮Video 视频PDF 电子书Images 图片Tables 表格Footnotes 脚注 Headings 标题 123456# heading level 1## heading level 2### heading level 3#### heading level 4##### heading level 5###### heading level 6 Paragraph 段落 1I really like using Markdown. Space 空格 I really like using Markdown. I think I’ll use it from now on. 1I really like using Markdown. &amp;nbsp; I think I&apos;ll use it from now on. Line Breaks 换行 I really like using Markdown. I think I’ll use it from now on. 12I really like using Markdown. &lt;/br&gt; I think I'll use it from now on. Emphasis 加粗 bold text 1**bold text** Italic 斜体 itabllic 1*italic* Bold and Italic 斜体加粗 important 1***important*** Strikethrough 删除线 The world is flat round. 1The world is ~~flat~~ round. Font’s Color and Size 字体 color=green size=3 1&lt;font color=green size=3&gt;color=green size=3 &lt;/font&gt; color=red size=3 1&lt;font color=red size=3&gt;color=red size=3&lt;/font&gt; Background Color 背景色 orange 12345&lt;!-- tr for row --&gt;&lt;!-- td for data --&gt;&lt;!-- th for header --&gt;&lt;!-- t --&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=orange&gt;orange&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; Generate HTML Table MDN HTML Table Alignment 对齐方式 center 诶嘿 1&lt;center&gt;诶嘿&lt;/center&gt; left 诶嘿 1&lt;p align="left"&gt;诶嘿&lt;/p&gt; right 诶嘿 1&lt;p align="right"&gt;诶嘿&lt;/p&gt; Next Notes 便签 Nostyle NoteWelcome to Hexo! 1234&#123;% note %&#125;### Nostyle NoteWelcome to [Hexo!](https://hexo.io)&#123;% endnote %&#125; Default NoteWelcome to Hexo! 1234&#123;% note default %&#125;### Default NoteWelcome to [Hexo!](https://hexo.io)&#123;% endnote %&#125; Primary NoteWelcome to Hexo! 1234&#123;% note primary %&#125;### Primary Note**Welcome** to [Hexo!](https://hexo.io)&#123;% endnote %&#125; Info NoteWelcome to Hexo! 1234&#123;% note info %&#125;### Info Note**Welcome** to [Hexo!](https://hexo.io)&#123;% endnote %&#125; Success NoteWelcome to Hexo! 1234&#123;% note success %&#125;### Success Note**Welcome** to [Hexo!](https://hexo.io)&#123;% endnote %&#125; Warning NoteWelcome to Hexo! 1234&#123;% note warning %&#125;### Warning Note**Welcome** to [Hexo!](https://hexo.io)&#123;% endnote %&#125; Danger NoteWelcome to Hexo! 1234&#123;% note danger %&#125;### Danger Note**Welcome** to [Hexo!](https://hexo.io)&#123;% endnote %&#125; No icon noteNote without icon: note info no-icon123code block in note tagcode block in note tagcode block in note tag 123456789&#123;% note info no-icon %&#125;### No icon noteNote **without** icon: `note info no-icon`&#123;% code %&#125;code block in note tagcode block in note tagcode block in note tag&#123;% endcode %&#125;&#123;% endnote %&#125; Codeblock Note123code block in note tagcode block in note tagcode block in note tag 12345678&#123;% note success %&#125;### Codeblock Note&#123;% code %&#125;code block in note tagcode block in note tagcode block in note tag&#123;% endcode %&#125;&#123;% endnote %&#125; Tab 选项卡 选项卡 1选项卡 2选项卡 3123 1234567891011121314152 表示一开始在第二个选项卡，非必须，若数值为 -1 则隐藏选项卡内容。&#123;% tabs 选项卡, 2 %&#125;&lt;!-- tab --&gt;**Tab 1** 1&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**Tab 2** 2&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**Tab 3** 3&lt;!-- endtab --&gt;&#123;% endtabs %&#125; Label 标签 default primary success info warning danger mark 123456&#123;% label default @default %&#125;&#123;% label primary @primary %&#125;&#123;% label success @success %&#125;&#123;% label info @info %&#125;&#123;% label warning @warning %&#125;&#123;% label danger @danger %&#125; &lt;mark&gt;mark&lt;/mark&gt; Button 按钮 text 1&#123;% btn #, text %&#125; Video 视频 12获取Youtube外链，粘贴即可&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/wIHj9bxf5BI" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt; PDF 电子书 1&#123;% pdf https://www.cs.cmu.edu/afs/cs.cmu.edu/user/gchen/www/download/java/LearnJava.pdf %&#125; superscript 上标 X2 subscript 下标 X2 Blockquotes 文字引用 Hello blockquotes 1&gt; Hellow Blockquotes Blockquotes with Multiple Paragraphs Line one Line Two Line Three 123&gt; Line one&gt; Line Two&gt; Line Three Nested Blockquotes Line One Nested Line 12&gt; Line One&gt;&gt; Nested Line Blockquotes with other elements The quarterly results look great! lone one line two 12345&gt; ###### The quarterly results look great!&gt;&gt; - lone one&gt; - line two&gt; Ordered Lists 有序列表 a b c 1231. a2. b3. c Nested Ordered Lists a a.a a.b b 12341. a 1. a.a 2. a.b2. b Unordered Lists 无序列表 a a.a a.b b 1234- a - a.a - a.b- b Paragraph in Lists a hello world b 123- a hello world- b Blockquotes in Lists a hello world b TODO LIST 任务列表 markdown [x] finished [ ] unfinished 12- [x] finished- [ ] unfinished hexo 已完成 未完成 1234&lt;ul&gt;&lt;li&gt;&lt;i class="fa fa-check-square"&gt;&lt;/i&gt; 已完成&lt;/li&gt;&lt;li&gt;&lt;i class="fa fa-square"&gt;&lt;/i&gt; 未完成&lt;/li&gt;&lt;/ul&gt; Code Blocks 代码块 12345&lt;html&gt;&lt;head&gt;&lt;title&gt; Test &lt;/title&gt;&lt;/head&gt;&lt;/html&gt; Code 代码 Code 1`Code` Images 图片 1![star](https://p4.ssl.cdn.btime.com/t01ef01c4bf446fc9b7.jpg?size=410x656) Escaping Character 转义 * Hello world 1\* Hello world Tables 表格 Syntax Description Header Title Paragraph Text 1234|Syntax|Description||-|-||Header|Title||Paragraph|Text| Table Alignment 表格对齐 Column A Column B Column C A1 B1 C1 A2 B2 C2 A3 B3 C3 12345|Column A | Column B | Column C||:-|-:|:-:|| A1 | B1 | C1|| A2 | B2 | C2|| A3 | B3 | C3| Horizontal Lines 水平线 1--- Links 链接 http://www.baidu.com Website 1[Website](https://www.google.com) Cancel Link 取消链接 http://www.baidu.com 1`http://www.baidu.com` Footnotes 脚注 simple footnote, [1] 12simple footnote, [^1][^1]: This is the first footnote. This is the first footnote. ↩︎]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Personal Development for Programmers]]></title>
    <url>%2Fcoderpath.html</url>
    <content type="text"><![CDATA[Programming Language: Java, Javascript Computer Network: HTTP, Security Web Framework: Web Development Design Pattern: From code to architecture Data Structures and Algorithms: efficient implementation Industry Project: practical experience]]></content>
      <tags>
        <tag>Programmer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Top CS University Courses]]></title>
    <url>%2Fcourse-recommendation.html</url>
    <content type="text"><![CDATA[Please Enter Token Here Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>Course</category>
      </categories>
      <tags>
        <tag>CMU好课推荐</tag>
      </tags>
  </entry>
</search>
