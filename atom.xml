<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雪中印</title>
  
  <subtitle>心底清静方为道 退步原来是向前</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://geekeast.github.io/"/>
  <updated>2019-11-27T02:53:48.000Z</updated>
  <id>https://geekeast.github.io/</id>
  
  <author>
    <name>James Tan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Cocurrency vs Parallelism</title>
    <link href="https://geekeast.github.io/simultaneousexe.html"/>
    <id>https://geekeast.github.io/simultaneousexe.html</id>
    <published>2019-11-27T02:53:48.000Z</published>
    <updated>2019-11-27T02:53:48.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="cocurrency-vs-parallelism"><a class="markdownIt-Anchor" href="#cocurrency-vs-parallelism"></a> Cocurrency vs Parallelism</h4><ul><li>Mutiple CPU cores: Parallelism with genuine simultaneous execution</li><li>Single CPU core: cocurrency with interleaving of process in time to give apperance of simultaneous execution.</li></ul><div style="text-align:center; margin:auto"><img src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/posts/2019-11-27-13-14-20.png"></div><a id="more"></a>---]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;cocurrency-vs-parallelism&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#cocurrency-vs-parallelism&quot;&gt;&lt;/a&gt; Cocurrency vs Parallelism&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Mutiple CPU cores: Parallelism with genuine simultaneous execution&lt;/li&gt;
&lt;li&gt;Single CPU core: cocurrency with interleaving of process in time to give apperance of simultaneous execution.&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;text-align:center; margin:auto&quot;&gt;&lt;img src=&quot;https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/posts/2019-11-27-13-14-20.png&quot;&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Computer Science" scheme="https://geekeast.github.io/categories/Computer-Science/"/>
    
    
      <category term="Computer System" scheme="https://geekeast.github.io/tags/Computer-System/"/>
    
      <category term="Cocurrency" scheme="https://geekeast.github.io/tags/Cocurrency/"/>
    
      <category term="Parallelism" scheme="https://geekeast.github.io/tags/Parallelism/"/>
    
  </entry>
  
  <entry>
    <title>Program vs Process vs Thread</title>
    <link href="https://geekeast.github.io/programprocessthread.html"/>
    <id>https://geekeast.github.io/programprocessthread.html</id>
    <published>2019-11-27T02:44:49.000Z</published>
    <updated>2019-11-27T02:44:49.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="program-process-thread"><a class="markdownIt-Anchor" href="#program-process-thread"></a> Program, Process, Thread</h3><ul><li>MacOS: Activity Monitor</li><li>Windows: Task Manager</li><li>Linux: Top</li></ul><h4 id="program"><a class="markdownIt-Anchor" href="#program"></a> Program</h4><blockquote><p>the code stored on your computer disk or non-volatile memory to fulfill a certain task. Including System Programs and Application Programs.</p></blockquote><ul><li>Program will be compiled or programmed to binary in memory before executing it.</li></ul><h4 id="process"><a class="markdownIt-Anchor" href="#process"></a> Process</h4><blockquote><p>An <code>instance</code> of program that has been loaded into <code>memory</code> along with all the <code>resources</code> needed to operate.</p></blockquote><ul><li>The <strong>Operating System</strong> handles the task manageing the resource needed to turn program into processes.</li><li>Resources includes:<ul><li><strong>register</strong>: some part of <strong>CPU</strong> to store <code>binary</code></li><li><strong>program counter</strong>: special <code>register</code> in <strong>CPU</strong> to do counter work</li><li><strong>stack</strong>: data structure to store <strong>local</strong> and <strong>small</strong> things in memory, managed <strong>automatically</strong>.</li><li><strong>heap</strong>: data structure to store <strong>global</strong> and <strong>big</strong> things in memory, managed <strong>manually</strong> or by <strong>Garbage Collection</strong>.</li></ul></li></ul><a id="more"></a><div style="text-align:center; margin:auto"><img src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/posts/2019-11-27-12-45-39.png" "></div>- Features:  - **One** program may be associated with **many** processes.  - **Independent** Memory Address Space.  - Inter-communication is **expensive**.  - **Robust**: One failed won't cause another to fail. <h4 id="thread"><a class="markdownIt-Anchor" href="#thread"></a> Thread</h4><blockquote><p>A unit of execution within a process. One process can have one up to many threads.</p></blockquote><ul><li>Features:<ul><li>Share the same <code>heap</code> in a process</li><li>Share the same <code>code</code> in a process</li><li>Has independent <code>registers</code></li><li>Has independent <code>stacks</code></li><li>Inter-communication is <strong>less expensive</strong></li><li><strong>Vulnerable</strong>: one fail can cause another to fail in the same process.</li></ul></li></ul><div style="text-align:center; margin:auto"><img src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/posts/2019-11-27-12-57-32.png"></div><h4 id="summary"><a class="markdownIt-Anchor" href="#summary"></a> Summary</h4><ul><li>The program starts out as a <code>text</code> file of programming <strong>code</strong>.</li><li>The program is <code>compiled</code> or <code>interpreted</code> into <strong>binary</strong> form.</li><li>The program is loaded into <code>memory</code>.</li><li>The program becomes <code>one</code> or <code>more</code> running <strong>processes</strong>.</li><li>Processes are <code>typically</code> <strong>independent</strong> of each other</li><li>While threads exists as the <code>subset</code> of a process</li><li>Threads can talk with each other more <code>easily</code> than processes can</li><li>Threads are <code>vulnerable</code> to problems caused by other threads in the same process.</li></ul><h2 id="div-styletext-aligncenter-marginautoimg-srchttpsgeekeaskblogpicss3-ap-southeast-2amazonawscomposts2019-11-27-13-10-13pngdiv"><a class="markdownIt-Anchor" href="#div-styletext-aligncenter-marginautoimg-srchttpsgeekeaskblogpicss3-ap-southeast-2amazonawscomposts2019-11-27-13-10-13pngdiv"></a> <div style="text-align:center; margin:auto"><img src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/posts/2019-11-27-13-10-13.png"></div></h2>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;program-process-thread&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#program-process-thread&quot;&gt;&lt;/a&gt; Program, Process, Thread&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;MacOS: Activity Monitor&lt;/li&gt;
&lt;li&gt;Windows: Task Manager&lt;/li&gt;
&lt;li&gt;Linux: Top&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;program&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#program&quot;&gt;&lt;/a&gt; Program&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;the code stored on your computer disk or non-volatile memory to fulfill a certain task. Including System Programs and Application Programs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Program will be compiled or programmed to binary in memory before executing it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;process&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#process&quot;&gt;&lt;/a&gt; Process&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;An &lt;code&gt;instance&lt;/code&gt; of program that has been loaded into &lt;code&gt;memory&lt;/code&gt; along with all the &lt;code&gt;resources&lt;/code&gt; needed to operate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;Operating System&lt;/strong&gt; handles the task manageing the resource needed to turn program into processes.&lt;/li&gt;
&lt;li&gt;Resources includes:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;register&lt;/strong&gt;: some part of &lt;strong&gt;CPU&lt;/strong&gt; to store &lt;code&gt;binary&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;program counter&lt;/strong&gt;: special &lt;code&gt;register&lt;/code&gt; in &lt;strong&gt;CPU&lt;/strong&gt; to do counter work&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;stack&lt;/strong&gt;: data structure to store &lt;strong&gt;local&lt;/strong&gt; and &lt;strong&gt;small&lt;/strong&gt; things in memory, managed &lt;strong&gt;automatically&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;heap&lt;/strong&gt;: data structure to store &lt;strong&gt;global&lt;/strong&gt; and &lt;strong&gt;big&lt;/strong&gt; things in memory, managed &lt;strong&gt;manually&lt;/strong&gt; or by &lt;strong&gt;Garbage Collection&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Computer Science" scheme="https://geekeast.github.io/categories/Computer-Science/"/>
    
    
      <category term="Computer System" scheme="https://geekeast.github.io/tags/Computer-System/"/>
    
      <category term="C" scheme="https://geekeast.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>AJAX</title>
    <link href="https://geekeast.github.io/ajax.html"/>
    <id>https://geekeast.github.io/ajax.html</id>
    <published>2019-11-26T04:04:39.000Z</published>
    <updated>2019-11-26T04:04:39.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ajax"><a class="markdownIt-Anchor" href="#ajax"></a> AJAX</h3><blockquote><p>Asynchorous Javascript and XML</p></blockquote><h4 id="example"><a class="markdownIt-Anchor" href="#example"></a> Example</h4><ul><li>Google Map: you don’t have to reload page in order to get more data when you <code>zoom in/out</code>.</li></ul><h4 id="background"><a class="markdownIt-Anchor" href="#background"></a> Background</h4><ul><li>Allows <code>javascript</code> to send <code>HTTP</code> request while previously <code>even a small change will cause the whole page to refresh</code>.</li><li>Allows <code>javascript</code> to update <code>small</code> chunk of data <code>asynchorously</code>.</li><li>以前是<strong>同步</strong>加载，一次性<strong>全部加载</strong>，卡卡卡卡。</li><li>现在是<strong>异步</strong>加载，按需<strong>多次</strong>加载<strong>小块</strong>，极大地提高了性能。</li></ul><h4 id="features"><a class="markdownIt-Anchor" href="#features"></a> Features</h4><ul><li>Don’t reload the page. <code>By Javascript HTTP Request</code></li><li>Request data asynchronously. <code>By Javascript - XMLHttpRequest</code></li><li>Reduce formatting of result load on Server. <code>By Javascript</code></li></ul><a id="more"></a><h4 id="xmlhttpreqeust"><a class="markdownIt-Anchor" href="#xmlhttpreqeust"></a> XMLHttpReqeust</h4><ul><li>Except in IE, where it’s an <code>ActiveX</code> object.</li><li><strong>Request</strong>: Use <code>XMLHttpRequest</code> object to make requests to the web server for data <strong>asynchronously</strong> or <strong>synchronously</strong>.</li><li><strong>Response</strong>: Receive server data as <code>XML</code> or <code>text</code> or <code>JSON</code></li><li><strong>Convert</strong>: Convert the <code>XML</code> inito a <code>DOM</code> tree</li><li><strong>Update</strong>: Extract data from the <strong>XML DOM tree</strong> and change the HTML <strong>document’s DOM tree</strong>, thus updating the page.</li></ul><h5 id="event"><a class="markdownIt-Anchor" href="#event"></a> Event</h5><ul><li><code>onreadystatechange</code></li></ul><h5 id="methods"><a class="markdownIt-Anchor" href="#methods"></a> Methods</h5><ul><li><code>open(method, url, async=true)</code></li><li><code>setRequestHeader(label, value)</code></li><li><code>send(content)</code></li></ul><h5 id="properties"><a class="markdownIt-Anchor" href="#properties"></a> Properties</h5><ul><li><code>readyState</code><ul><li>0: no connection</li><li>1: connected</li><li>2: Server received the Request</li><li>3: Server is processing the Request</li><li>4: Response is sent back</li></ul></li><li><code>status</code><ul><li>1xx <strong>informational</strong>: the request was received, continuing process</li><li>2xx <strong>successful</strong>: the request was successfully received, understood and accepted</li><li>3xx <strong>redirection</strong>: further action needs to be taken in order to complete the request</li><li>4xx <strong>client error</strong>: the request contains bad syntax or cannot be fulfilled</li><li>5xx <strong>server error</strong>:the server failed to fulfill an apparently valid request</li><li><span class="exturl" data-url="aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTGlzdF9vZl9IVFRQX3N0YXR1c19jb2Rlcw==" title="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes">In Detail<i class="fa fa-external-link"></i></span></li></ul></li></ul><h5 id="implementation-1"><a class="markdownIt-Anchor" href="#implementation-1"></a> Implementation 1</h5><ul><li><code>onreadystatechange</code> is available across all <strong>browsers</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// initialize</span></span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"></span><br><span class="line"><span class="comment">// callback</span></span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (xhr.readyState === <span class="number">4</span> &amp;&amp; xhr.status === <span class="number">200</span>)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Received Response'</span>);</span><br><span class="line">    <span class="keyword">let</span> data = <span class="built_in">JSON</span>.parse(<span class="keyword">this</span>.responseText)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// send</span></span><br><span class="line">xhr.open(<span class="string">'GET'</span>,<span class="string">'https://jsonplaceholder.typicode.com/posts'</span>, <span class="literal">true</span>);</span><br><span class="line">xhr.send();</span><br></pre></td></tr></table></figure><h5 id="implementation-2"><a class="markdownIt-Anchor" href="#implementation-2"></a> Implementation 2</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="keyword">const</span> method = <span class="string">'GET'</span>;</span><br><span class="line"><span class="keyword">const</span> url = <span class="string">'https://randomuser.me/api/'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> requestListener = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> data = <span class="built_in">JSON</span>.parse(xhr.responseText);</span><br><span class="line">  <span class="keyword">let</span> user = data.results[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">let</span> fname = user.name.first;</span><br><span class="line">  <span class="keyword">let</span> lname = user.name.last;</span><br><span class="line">  <span class="keyword">let</span> src = user.picture.large;</span><br><span class="line">  <span class="built_in">console</span>.log(fname);</span><br><span class="line">  <span class="built_in">console</span>.log(lname);</span><br><span class="line">  <span class="built_in">console</span>.log(src);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> requestErrorListener = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'error'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xhr.onload = requestListener;</span><br><span class="line">xhr.onerror = requestErrorListener;</span><br><span class="line"></span><br><span class="line">xhr.open(method,url);</span><br><span class="line">xhr.send();</span><br></pre></td></tr></table></figure><h5 id="encapsulation"><a class="markdownIt-Anchor" href="#encapsulation"></a> Encapsulation</h5><ul><li><code>onload</code> is available in <code>some</code> browsers.</li><li>the third parameter of <code>xhr.send()</code> is <code>true</code> <strong>by default</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// encapsulate the GET request</span></span><br><span class="line"><span class="keyword">const</span> getData = <span class="function"><span class="keyword">function</span>(<span class="params">url, callback</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// init</span></span><br><span class="line">  <span class="keyword">let</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// config response type</span></span><br><span class="line">  xhr.responseType = <span class="string">'json'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// set callbacks</span></span><br><span class="line">  xhr.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (xhr.status === <span class="number">200</span>)&#123;</span><br><span class="line">      callback(<span class="literal">null</span>, xhr.response)</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">      callback(status);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// open and send</span></span><br><span class="line">  xhr.open(<span class="string">'GET'</span>, url, <span class="literal">true</span>);</span><br><span class="line">  xhr.send();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// define the call back function</span></span><br><span class="line"><span class="keyword">const</span> cb = <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (error) <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">'Error'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// do the request</span></span><br><span class="line">getData(<span class="string">'https://jsonplaceholder.typicode.com/posts'</span>, cb)</span><br></pre></td></tr></table></figure><h4 id="fetch"><a class="markdownIt-Anchor" href="#fetch"></a> Fetch</h4><ul><li>A new native JavaScript API avaiable on the <code>window</code> object</li><li>Much <strong>easier</strong> to use compared to <code>XMLHttpRequest</code></li></ul><h5 id="get"><a class="markdownIt-Anchor" href="#get"></a> GET</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> url = <span class="string">'https://jsonplaceholder.typicode.com/todos'</span>;</span><br><span class="line">fetch(url)</span><br><span class="line">  .then(<span class="function"><span class="params">success</span> =&gt;</span> success.json())</span><br><span class="line">  .then(<span class="built_in">console</span>.log)</span><br><span class="line">  .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h5 id="post"><a class="markdownIt-Anchor" href="#post"></a> POST</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> url = <span class="string">'https://jsonplaceholder.typicode.com/todos'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> customPost = &#123;</span><br><span class="line">  title: <span class="string">'Hello World'</span>,</span><br><span class="line">  body: <span class="string">'This is my first post'</span>,</span><br><span class="line">  userID: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fetch(url, &#123;</span><br><span class="line">  method: <span class="string">'POST'</span>,</span><br><span class="line">  headers: &#123;</span><br><span class="line">    <span class="string">"Content-Type"</span>: <span class="string">"application/json; charset=UTF-8"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  body: <span class="built_in">JSON</span>.stringify(customPost)</span><br><span class="line">&#125;)</span><br><span class="line">  .then(<span class="function"><span class="params">success</span> =&gt;</span> success.json())</span><br><span class="line">  .then(<span class="built_in">console</span>.log)å</span><br><span class="line">  .catch(<span class="built_in">console</span>.log);</span><br></pre></td></tr></table></figure><h5 id="response"><a class="markdownIt-Anchor" href="#response"></a> Response</h5><ul><li><code>json()</code>: return as json object in javascript</li><li><code>text()</code>: return as string</li><li><code>blob()</code>: used to manipulate <code>large</code> binary file in <code>disk</code></li><li><code>arrayBuffer()</code>: used to manipulate <code>small</code> binary file in <code>memeory</code></li></ul><h3 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cubGlhb3h1ZWZlbmcuY29tL3dpa2kvMTAyMjkxMDgyMTE0OTMxMi8xMDIzMDIyMzMyOTAyNDAw" title="https://www.liaoxuefeng.com/wiki/1022910821149312/1023022332902400">AJAX 廖雪峰<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93YW5nZG9jLmNvbS9qYXZhc2NyaXB0Lw==" title="https://wangdoc.com/javascript/">AJAX 阮一峰<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93YW5nZG9jLmNvbS9qYXZhc2NyaXB0L29vcC9zdHJpY3QuaHRtbA==" title="https://wangdoc.com/javascript/oop/strict.html">JS: strict-mode<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93YW5nZG9jLmNvbS9qYXZhc2NyaXB0L2JvbS9zYW1lLW9yaWdpbi5odG1s" title="https://wangdoc.com/javascript/bom/same-origin.html">同源<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC81ZDI1ZTM0MjUxODgyNTUzZjA1OWRjYmM=" title="https://juejin.im/post/5d25e34251882553f059dcbc">AJAX 面试<i class="fa fa-external-link"></i></span></li></ul><h3 id="shared"><a class="markdownIt-Anchor" href="#shared"></a> Shared</h3><ul><li>Neither <code>XMLHttpRequest</code> nor <code>fetch</code> is defined in <strong>nodejs</strong>.</li><li>有 <code>Asynchronous</code> 必有 <code>callback</code></li><li>内生学习<ul><li>选择一个<code>不太好</code>的教程开始学习，<strong>有问题自己解决</strong></li><li>参考资源为<code>更好</code>的教程</li><li>启示: 一个东西要从<strong>不同的角度</strong>去看，<strong>不同的教程</strong>去学，以此来<strong>互相激发需求</strong></li></ul></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;ajax&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#ajax&quot;&gt;&lt;/a&gt; AJAX&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Asynchorous Javascript and XML&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;example&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#example&quot;&gt;&lt;/a&gt; Example&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Google Map: you don’t have to reload page in order to get more data when you &lt;code&gt;zoom in/out&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;background&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#background&quot;&gt;&lt;/a&gt; Background&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Allows &lt;code&gt;javascript&lt;/code&gt; to send &lt;code&gt;HTTP&lt;/code&gt; request while previously &lt;code&gt;even a small change will cause the whole page to refresh&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Allows &lt;code&gt;javascript&lt;/code&gt; to update &lt;code&gt;small&lt;/code&gt; chunk of data &lt;code&gt;asynchorously&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;以前是&lt;strong&gt;同步&lt;/strong&gt;加载，一次性&lt;strong&gt;全部加载&lt;/strong&gt;，卡卡卡卡。&lt;/li&gt;
&lt;li&gt;现在是&lt;strong&gt;异步&lt;/strong&gt;加载，按需&lt;strong&gt;多次&lt;/strong&gt;加载&lt;strong&gt;小块&lt;/strong&gt;，极大地提高了性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;features&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#features&quot;&gt;&lt;/a&gt; Features&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Don’t reload the page. &lt;code&gt;By Javascript HTTP Request&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Request data asynchronously. &lt;code&gt;By Javascript - XMLHttpRequest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Reduce formatting of result load on Server. &lt;code&gt;By Javascript&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="AJAX" scheme="https://geekeast.github.io/tags/AJAX/"/>
    
      <category term="Javascript" scheme="https://geekeast.github.io/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>Prototype in Javascript</title>
    <link href="https://geekeast.github.io/jsprototype.html"/>
    <id>https://geekeast.github.io/jsprototype.html</id>
    <published>2019-11-25T04:38:43.000Z</published>
    <updated>2019-11-25T04:38:43.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="prototype"><a class="markdownIt-Anchor" href="#prototype"></a> Prototype</h3><blockquote><p>The <strong>prototype</strong> system follows the <strong>delegation</strong> pattern rather than the traditional <code>class</code> pattern</p></blockquote><h4 id="constructor-call"><a class="markdownIt-Anchor" href="#constructor-call"></a> Constructor Call</h4><ul><li>Objects are created by <code>contructor</code> call (using <code>new</code>)</li><li>Constructor is used to producing instances that link properties and methods define in the constructor and link to prototype.</li><li>2 Kinds of code reuse:<ul><li><code>Non-static</code>: One happens in the <code>constructor</code>: copy <code>values</code></li><li><code>Static</code>: Another happens in the <code>prototype chain</code>: copy <code>references</code></li></ul></li></ul><h4 id="old-school"><a class="markdownIt-Anchor" href="#old-school"></a> Old School</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Workshop</span>(<span class="params">teacher</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.teacher = teacher;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Workshop.prototype.ask = <span class="function"><span class="keyword">function</span>(<span class="params">question</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> deepJS = <span class="keyword">new</span> Workshop(<span class="string">"Kyle"</span>);</span><br><span class="line"><span class="keyword">var</span> reactJS = <span class="keyword">new</span> Workshop(<span class="string">"Suzy"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// deepJS doesn't have the ask method, how can he call it?</span></span><br><span class="line"><span class="comment">// by default, if there is no property existing in current object, it will go up along the prototype chain</span></span><br><span class="line">deepJS.ask(<span class="string">"Deep JS"</span>);</span><br><span class="line">reactJS.ask(<span class="string">"React JS"</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="prototype-chain"><a class="markdownIt-Anchor" href="#prototype-chain"></a> Prototype Chain</h4><ul><li><code>contructor</code> is only a name, it’s not like the constructor in other programming language, like <code>java</code></li><li><strong>Contructor</strong> function has only <code>one</code> instance, <strong>prototype</strong> only has <code>one</code> instance, but the objects, essentially the <code>execution context</code> has <code>many</code>.</li></ul><blockquote><p>对象创建的过程，其实是使用同一构造器，创建不同execution context的过程。</p></blockquote><div style="text-align:center; margin:auto"><img src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/posts/2019-11-24-01-39-47.png"></div><h4 id="dunder-prototype"><a class="markdownIt-Anchor" href="#dunder-prototype"></a> Dunder Prototype</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Workshop</span>(<span class="params">teacher</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.teacher = teacher;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Workshop.prototype.ask = <span class="function"><span class="keyword">function</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> deepJS = <span class="keyword">new</span> Workshop(<span class="string">'Kyle'</span>);</span><br><span class="line"></span><br><span class="line">deepJS.constructor === Workshop; <span class="comment">// true</span></span><br><span class="line">deepJS.__proto__ === Workshop.prototype; <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.getPrototypeOf(deepJS) === Workshop.prototype; <span class="comment">// true</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>deepJS doesn’t have a property called <code>constructor</code>, so it goes up to its <strong>prototype</strong> and then it could find it, which is the <strong>Workshop</strong> function</li><li><code>deepJS</code> doesn’t have the <strong>dunder property</strong>, so it goes up its <code>prototype</code>, but found nothing called <code>__proto__</code>, so it continues to go up to the <strong>Object’s prototype</strong> and then found it! But, unexpectedly ,the <code>__proto__</code> is actually a <strong>function</strong>, not a state, it’s a <strong>getter</strong> function. <code>deepJS.__proto__</code> will use the deepJS as execution context and get the prototype of deepJS.</li></ul></blockquote><ul><li><strong>Infinite Recursion</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Workshop</span>(<span class="params">teacher</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.teacher = teacher;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Workshop.prototype.ask = <span class="function"><span class="keyword">function</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> deepJS = <span class="keyword">new</span> Workshop(<span class="string">"Kyle"</span>);</span><br><span class="line"><span class="comment">// </span></span><br><span class="line">deepJS.ask = <span class="function"><span class="keyword">function</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// this refers to deepJS</span></span><br><span class="line">  <span class="keyword">this</span>.ask(question.toUpperCase());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">deepJS.ask(<span class="string">"Oops, is this infinite recursion?"</span>) <span class="comment">// yes!</span></span><br></pre></td></tr></table></figure><ul><li><strong>Fix using Dunder Proto</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Workshop</span>(<span class="params">teacher</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.teacher = teacher;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Workshop.prototype.ask = <span class="function"><span class="keyword">function</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> deepJS = <span class="keyword">new</span> Workshop(<span class="string">"Kyle"</span>);</span><br><span class="line">deepJS.ask = <span class="function"><span class="keyword">function</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.__proto__.ask.call(<span class="keyword">this</span>,question.toUpperCase());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">deepJS.ask(<span class="string">"Oops, is this infinite recursion?"</span>) <span class="comment">// No!</span></span><br></pre></td></tr></table></figure><h4 id="inheritance"><a class="markdownIt-Anchor" href="#inheritance"></a> Inheritance</h4><ul><li><strong>Prototypal Inheritance</strong></li></ul><blockquote><p>原型链向上查找的过程并不会改变this的指向</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// constructor</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Workshop</span>(<span class="params">teacher</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.teacher = teacher;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// prototype</span></span><br><span class="line">Workshop.prototype.ask = <span class="function"><span class="keyword">function</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// link constructor: 仅仅改变指向</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">AnotherWorkshop</span>(<span class="params">teacher</span>)</span>&#123;</span><br><span class="line">  Workshop.call(<span class="keyword">this</span>, teacher);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// link prototype： </span></span><br><span class="line">AnotherWorkshop.prototype = <span class="built_in">Object</span>.create(Workshop.prototype);</span><br><span class="line"></span><br><span class="line">AnotherWorkshop.prototype.speakUp = <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.ask(msg.toUppderCase());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> JSRecentParts = <span class="keyword">new</span> AnotherWorkshop(<span class="string">'Kyle'</span>);</span><br><span class="line">JSRecentParts.speakUp(<span class="string">'Is this actually inheritance?'</span>);</span><br></pre></td></tr></table></figure><div style="text-align:center; margin:auto"><img src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/posts/2019-11-24-14-50-18.png"></div><ul><li>Class Inheritance</li></ul><h4 id="class-inheritanace"><a class="markdownIt-Anchor" href="#class-inheritanace"></a> Class Inheritanace</h4><ul><li>Class Inheritanace <strong>copies</strong> objects;</li><li>Prototypal inhertiace <strong>links</strong> objects.</li></ul><h2 id="div-styletext-aligncenter-marginautoimg-srchttpsgeekeaskblogpicss3-ap-southeast-2amazonawscomposts2019-11-24-16-38-51pngdiv"><a class="markdownIt-Anchor" href="#div-styletext-aligncenter-marginautoimg-srchttpsgeekeaskblogpicss3-ap-southeast-2amazonawscomposts2019-11-24-16-38-51pngdiv"></a> <div style="text-align:center; margin:auto"><img src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/posts/2019-11-24-16-38-51.png"></div></h2>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;prototype&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#prototype&quot;&gt;&lt;/a&gt; Prototype&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;strong&gt;prototype&lt;/strong&gt; system follows the &lt;strong&gt;delegation&lt;/strong&gt; pattern rather than the traditional &lt;code&gt;class&lt;/code&gt; pattern&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;constructor-call&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#constructor-call&quot;&gt;&lt;/a&gt; Constructor Call&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Objects are created by &lt;code&gt;contructor&lt;/code&gt; call (using &lt;code&gt;new&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Constructor is used to producing instances that link properties and methods define in the constructor and link to prototype.&lt;/li&gt;
&lt;li&gt;2 Kinds of code reuse:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Non-static&lt;/code&gt;: One happens in the &lt;code&gt;constructor&lt;/code&gt;: copy &lt;code&gt;values&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Static&lt;/code&gt;: Another happens in the &lt;code&gt;prototype chain&lt;/code&gt;: copy &lt;code&gt;references&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;old-school&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#old-school&quot;&gt;&lt;/a&gt; Old School&lt;/h4&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Workshop&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;teacher&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.teacher = teacher;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Workshop.prototype.ask = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;question&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.teacher, question);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; deepJS = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Workshop(&lt;span class=&quot;string&quot;&gt;&quot;Kyle&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; reactJS = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Workshop(&lt;span class=&quot;string&quot;&gt;&quot;Suzy&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// deepJS doesn&#39;t have the ask method, how can he call it?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// by default, if there is no property existing in current object, it will go up along the prototype chain&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deepJS.ask(&lt;span class=&quot;string&quot;&gt;&quot;Deep JS&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reactJS.ask(&lt;span class=&quot;string&quot;&gt;&quot;React JS&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="Javascript" scheme="https://geekeast.github.io/tags/Javascript/"/>
    
      <category term="Prototype" scheme="https://geekeast.github.io/tags/Prototype/"/>
    
  </entry>
  
  <entry>
    <title>Object in Javascript</title>
    <link href="https://geekeast.github.io/jsobject.html"/>
    <id>https://geekeast.github.io/jsobject.html</id>
    <published>2019-11-25T00:01:08.000Z</published>
    <updated>2019-11-25T00:01:08.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="this"><a class="markdownIt-Anchor" href="#this"></a> <code>this</code></h3><blockquote><p>A function’s this references the <strong>execution context</strong> for that call, determined entirely by <strong>how the function was called</strong></p></blockquote><h4 id="scope-and-closure"><a class="markdownIt-Anchor" href="#scope-and-closure"></a> Scope and Closure</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = <span class="string">'Kyle'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">otherClass</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">// won't output Suzy but Kyle</span></span><br><span class="line">  <span class="keyword">var</span> teacher = <span class="string">"Suzy"</span>;</span><br><span class="line">  ask(<span class="string">"Why?"</span>)</span><br><span class="line">&#125;</span><br><span class="line">otherClass();</span><br></pre></td></tr></table></figure><h4 id="object-and-this"><a class="markdownIt-Anchor" href="#object-and-this"></a> Object and <code>this</code></h4><blockquote><p><code>Prototype chaining</code> happens after <code>this</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.prototype.teacher = <span class="string">'kyle'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">otherClass</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> teacher = <span class="string">"Suzy"</span>;</span><br><span class="line">  ask(<span class="string">"Why?"</span>)</span><br><span class="line">&#125;</span><br><span class="line">otherClass();</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="with-this-and-call"><a class="markdownIt-Anchor" href="#with-this-and-call"></a> with <code>this</code> and <code>call</code></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">otherClass</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> myContext = &#123;</span><br><span class="line">    teacher: <span class="string">'K'</span></span><br><span class="line">  &#125;</span><br><span class="line">  ask.call(myContext, <span class="string">"Why?"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ask is called by otherClass within the global scope</span></span><br><span class="line">otherClass();</span><br></pre></td></tr></table></figure><h4 id="namespace-pattern"><a class="markdownIt-Anchor" href="#namespace-pattern"></a> Namespace Pattern</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> workshop = &#123;</span><br><span class="line">  teacher: <span class="string">'Kyle'</span>,</span><br><span class="line">  ask(question)&#123;</span><br><span class="line">    <span class="comment">// this points to workshop.</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">workshio.ask(<span class="string">"What is implicit binding?"</span>);</span><br></pre></td></tr></table></figure><h4 id="namespace-pattern-implicit-binding"><a class="markdownIt-Anchor" href="#namespace-pattern-implicit-binding"></a> Namespace Pattern: Implicit Binding</h4><blockquote><ul><li><code>this</code> is determined during run time.</li><li><code>Implicit Binding</code> is used for <strong>code reuse</strong>.</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> workshop1 = &#123;</span><br><span class="line">  teacher: <span class="string">'Kyle'</span>,</span><br><span class="line">  ask: ask</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> workshop2 = &#123;</span><br><span class="line">  teacher: <span class="string">'Suzy'</span>,</span><br><span class="line">  ask: ask</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">workshop1.ask(<span class="string">"How do I share a method?"</span>);</span><br><span class="line">workshop2.ask(<span class="string">"How do I share a method?"</span>);</span><br></pre></td></tr></table></figure><h4 id="namespace-to-explicit-binding"><a class="markdownIt-Anchor" href="#namespace-to-explicit-binding"></a> Namespace to Explicit binding</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> workshop1 = &#123;</span><br><span class="line">  teacher: <span class="string">'Kyle'</span></span><br><span class="line">  <span class="comment">// don't have to define ask here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> workshop2 = &#123;</span><br><span class="line">  teacher: <span class="string">'Suzy'</span>,</span><br><span class="line">  <span class="comment">// don't have to define ask here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ask.call(workshop1, <span class="string">"Can I explicitly set context?"</span>);</span><br><span class="line">ask.call(workshop2, <span class="string">"Can I explicitly set context?"</span>);</span><br></pre></td></tr></table></figure><h4 id="hard-binding"><a class="markdownIt-Anchor" href="#hard-binding"></a> Hard binding</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> workshop = &#123;</span><br><span class="line">  teacher: <span class="string">'Kyle'</span>,</span><br><span class="line">  ask(question)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ask is called in the global context</span></span><br><span class="line">setTimeout(workshop.ask, <span class="number">10</span>, <span class="string">"Lost this?"</span>);</span><br><span class="line"><span class="comment">// ask is called in the workshop context</span></span><br><span class="line">setTimeout(workshop.ask.bind(workshop), <span class="number">10</span>, <span class="string">"Hard bound this?"</span>);</span><br></pre></td></tr></table></figure><h3 id="new"><a class="markdownIt-Anchor" href="#new"></a> <code>new</code></h3><blockquote><ul><li>It’s created to call a function with a <strong>whole new empty object</strong> as the <strong>execution context</strong>.</li><li><code>new</code> means <strong>new empty execution context</strong>.</li></ul></blockquote><h4 id="sample"><a class="markdownIt-Anchor" href="#sample"></a> Sample</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ask will be called within an empty obejct as the execution context</span></span><br><span class="line"><span class="keyword">var</span> newEmptyObject = <span class="keyword">new</span> ask(<span class="string">"What is 'new' doing here?"</span>)</span><br></pre></td></tr></table></figure><h4 id="alternative"><a class="markdownIt-Anchor" href="#alternative"></a> Alternative</h4><ul><li>The same with <code>call()</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ask will be called within an empty obejct as the execution context</span></span><br><span class="line">ask.call(&#123;&#125;, <span class="string">"hello world"</span>);</span><br></pre></td></tr></table></figure><h4 id="how-it-works"><a class="markdownIt-Anchor" href="#how-it-works"></a> How it works</h4><ul><li>Create a brand new empty object</li><li><code>* Link that object to another object</code> - <code>prototype object</code></li><li>Call function with this set to the new object</li><li>If function does not return an <strong>object</strong>, assume return of <strong>this</strong>.</li></ul><h3 id="default-binding"><a class="markdownIt-Anchor" href="#default-binding"></a> Default Binding</h3><ul><li>no new keyword</li><li>no call, apply, bind</li><li>no object context like <code>asd.ask()</code></li><li><strong>yes, default binding, is the global; if strict mode, undefined binding.</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">global.teacher = <span class="string">'Kyle'</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// this referes to global object</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">askAgain</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line"><span class="meta">  "use strict"</span>;</span><br><span class="line">  <span class="comment">// this undefined</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// this is not workshop.ask, doesn't have any context object</span></span><br><span class="line"><span class="comment">// so we use the global as the context</span></span><br><span class="line">ask(<span class="string">"What's hte non-strict-mode default?"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// but in strict-mode, the default context is undefined when the execution context is the global object.</span></span><br><span class="line">askAgain(<span class="string">"What's the strcit-mode default?"</span>);</span><br></pre></td></tr></table></figure><h3 id="precedence-in-this"><a class="markdownIt-Anchor" href="#precedence-in-this"></a> Precedence in <code>this</code></h3><ul><li>new</li><li>call() or apply(), bind()</li><li>context object for example <code>workshop.ask()</code></li><li>Default binding (except <code>strict mode</code>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> workshop = &#123;</span><br><span class="line">  teacher: <span class="string">'Kyle'</span>,</span><br><span class="line">  ask: <span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> (workship.ask.bind(workshop))(<span class="string">"What does this do?"</span>); <span class="comment">// undefind</span></span><br></pre></td></tr></table></figure><h3 id="arrow-function"><a class="markdownIt-Anchor" href="#arrow-function"></a> Arrow Function</h3><h4 id="this-2"><a class="markdownIt-Anchor" href="#this-2"></a> <code>!this</code></h4><blockquote><ul><li>There is <strong>no</strong> this in arrow function</li><li>Will <code>lexically</code> resolve the variable from <strong>inner</strong> to <strong>outer</strong> <code>scope</code></li><li>You can’t use <code>new</code> for an arrow function, because it doesn’t define <code>this</code> keyword.</li></ul></blockquote><h4 id="function-declaration-without-this"><a class="markdownIt-Anchor" href="#function-declaration-without-this"></a> Function Declaration without <code>this</code></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> workshop = &#123;</span><br><span class="line">  teacher: <span class="string">'Kyle'</span>,</span><br><span class="line">  ask(question)&#123;</span><br><span class="line">    setTimeout(</span><br><span class="line">      <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// undefined because object doesn't automatically create scope</span></span><br><span class="line">        <span class="built_in">console</span>.log(teacher,question);</span><br><span class="line">      &#125;</span><br><span class="line">    , <span class="number">100</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Kyle Is this lexical 'this'?</span></span><br><span class="line">workshop.ask(<span class="string">"Is this lexical 'this'?"</span>)</span><br></pre></td></tr></table></figure><h4 id="function-declaration-with-this"><a class="markdownIt-Anchor" href="#function-declaration-with-this"></a> Function Declaration with <code>this</code></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.prototype.teacher = <span class="string">'James'</span>;</span><br><span class="line"><span class="keyword">var</span> workshop = &#123;</span><br><span class="line">  teacher: <span class="string">'Kyle'</span>,</span><br><span class="line">  ask(question)&#123;</span><br><span class="line">    setTimeout(</span><br><span class="line">      <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// this refers to Timeout, then tract the prototype chain</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher,question);</span><br><span class="line">      &#125;</span><br><span class="line">    , <span class="number">100</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// James Is this lexical 'this'?</span></span><br><span class="line">workshop.ask(<span class="string">"Is this lexical 'this'?"</span>)</span><br></pre></td></tr></table></figure><h4 id="arrow-function-with-this"><a class="markdownIt-Anchor" href="#arrow-function-with-this"></a> Arrow Function with <code>this</code></h4><blockquote><p><code>this</code> in Arrow function behaves <strong>lexically</strong>, but still relates to <code>this</code> (not its own <code>this</code>);</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> workshop = &#123;</span><br><span class="line">  teacher: <span class="string">'Kyle'</span>,</span><br><span class="line">  ask(question)&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    &#125;, <span class="number">100</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Kyle Is this lexical 'this'?</span></span><br><span class="line">workshop.ask(<span class="string">"Is this lexical 'this'?"</span>)</span><br></pre></td></tr></table></figure><ul><li>the <code>outside scope</code> is the <code>ask</code> function</li><li>the <code>outside scope</code> is not the setTimeout because there it encloses with <code>()</code> rather than <code>{}</code><ul><li>But not all {} are scopes - Object{}</li><li>function()<code>{}</code> is <strong>scope</strong>.</li></ul></li><li><strong>this</strong> of <code>ask</code> function is the workshop object.</li></ul><blockquote><p>it still traces <strong>this</strong>, but <code>not</code> its own.</p></blockquote><h4 id="arrow-function-without-this"><a class="markdownIt-Anchor" href="#arrow-function-without-this"></a> Arrow Function without <code>this</code></h4><blockquote><ul><li>the outside scope is <code>ask</code>, no teacher</li><li>the outside scope is <code>global</code>, no teacher</li><li><code>undefined</code>.</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> workshop = &#123;</span><br><span class="line">  teacher: <span class="string">'Kyle'</span>,</span><br><span class="line">  ask(question)&#123;</span><br><span class="line">    setTimeout(</span><br><span class="line">      () =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(teacher);</span><br><span class="line">    &#125;</span><br><span class="line">    , <span class="number">100</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">workshop.ask(<span class="string">'What?'</span>)</span><br></pre></td></tr></table></figure><h3 id="class"><a class="markdownIt-Anchor" href="#class"></a> Class</h3><blockquote><p><code>Class</code> keyword is just a <strong>syntax sugar</strong> for a <strong>layer</strong> on top of the <code>prototype system</code>.</p></blockquote><h4 id="example"><a class="markdownIt-Anchor" href="#example"></a> Example</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Workshop</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(teacher)&#123;</span><br><span class="line">    <span class="keyword">this</span>.teacher = teacher;</span><br><span class="line">  &#125;</span><br><span class="line">  ask(question)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> deepJS = <span class="keyword">new</span> Workshop(<span class="string">"Kyle"</span>);</span><br><span class="line"><span class="keyword">var</span> reactJS = <span class="keyword">new</span> Workshop(<span class="string">"Suzy"</span>);</span><br><span class="line"></span><br><span class="line">deepJS.ask(<span class="string">"asd"</span>);</span><br><span class="line">reactJS.ask(<span class="string">"asdss"</span>)</span><br></pre></td></tr></table></figure><h4 id="origin"><a class="markdownIt-Anchor" href="#origin"></a> Origin</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Workshop</span>(<span class="params">teacher</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.teacher = teacher;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Workshop.protoype.ask = <span class="function"><span class="keyword">function</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> deepJS = <span class="keyword">new</span> Workshop(<span class="string">'Kyle'</span>);</span><br><span class="line"><span class="keyword">var</span> reactJS = <span class="keyword">new</span> Workshop(<span class="string">'Jame'</span>);</span><br></pre></td></tr></table></figure><h4 id="inheritance"><a class="markdownIt-Anchor" href="#inheritance"></a> Inheritance</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Workshop</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(teacher)&#123;</span><br><span class="line">    <span class="keyword">this</span>.teacher = teacher;</span><br><span class="line">  &#125;</span><br><span class="line">  ask(question)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnotherWorkshop</span> <span class="keyword">extends</span> <span class="title">Workshop</span> </span>&#123;</span><br><span class="line">  <span class="comment">// you don't have to define other methods already in the parent class.</span></span><br><span class="line">  speakUp(msg)&#123;</span><br><span class="line">    <span class="keyword">this</span>.ask(msg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> JSRecentParts = <span class="keyword">new</span> AnotherWorkshop(<span class="string">"Kyle"</span>);</span><br><span class="line">JSRecentParts.speakUp(<span class="string">"Are classes getting better?"</span>);</span><br></pre></td></tr></table></figure><h4 id="alternative-2"><a class="markdownIt-Anchor" href="#alternative-2"></a> Alternative</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Workshop</span>(<span class="params">teacher</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.teacher = teacher;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Workshop.protoype.ask = <span class="function"><span class="keyword">function</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// link constructor</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">AnotherWorkshop</span>(<span class="params">teacher</span>)</span>&#123;</span><br><span class="line">  Workshop.call(<span class="keyword">this</span>,teacher);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// link prototype</span></span><br><span class="line">Another.prototype = <span class="built_in">Object</span>.create(Workshop.prototype);</span><br><span class="line"></span><br><span class="line"><span class="comment">// add new method</span></span><br><span class="line">AnotherWorkshop.prototype.speakUp = <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.ask(msg.toUppderCase());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// the same thing</span></span><br><span class="line"><span class="keyword">var</span> JSRecentParts = <span class="keyword">new</span> AnotherWorkshop(<span class="string">"Kyle"</span>);</span><br><span class="line">JSRecentParts.speakUp(<span class="string">"Are classes getting better?"</span>);</span><br></pre></td></tr></table></figure><h4 id="super-keyword"><a class="markdownIt-Anchor" href="#super-keyword"></a> <code>super</code> keyword</h4><blockquote><p><code>super</code> is detemined during complile time - lexically scoped</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Workshop</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(teacher)&#123;</span><br><span class="line">    <span class="keyword">this</span>.teacher = teacher;</span><br><span class="line">  &#125;</span><br><span class="line">  ask(question)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnotherWorkshop</span> <span class="keyword">extends</span> <span class="title">Workshop</span> </span>&#123;</span><br><span class="line">  ask(msg)&#123;</span><br><span class="line">    <span class="comment">// override also called shadowing</span></span><br><span class="line">    <span class="keyword">super</span>.ask(msg.toUpperCase())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> JSRecentParts = <span class="keyword">new</span> AnotherWorkshop(<span class="string">"Kyle"</span>);</span><br><span class="line">JSRecentParts.speakUp(<span class="string">"Are classes getting better?"</span>);</span><br></pre></td></tr></table></figure><h4 id="this-still-dynamic-in-class"><a class="markdownIt-Anchor" href="#this-still-dynamic-in-class"></a> <code>this</code> still dynamic in Class</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Workshop</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(teacher)&#123;</span><br><span class="line">    <span class="keyword">this</span>.teacher = teacher;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ask(question)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> deepJS = <span class="keyword">new</span> Workshop(<span class="string">"Kyle"</span>);</span><br><span class="line">setTimeout(deepJS.ask, <span class="number">100</span>, <span class="string">"Still losing 'this'?"</span>);</span><br></pre></td></tr></table></figure><h4 id="constructor"><a class="markdownIt-Anchor" href="#constructor"></a> Constructor</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Workshop</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(teacher)&#123;</span><br><span class="line">    <span class="keyword">this</span>.teacher = teacher;</span><br><span class="line">    <span class="comment">// this will create ask() to any instance (execution context)</span></span><br><span class="line">    <span class="keyword">this</span>.ask = <span class="function"><span class="params">question</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// this will create ask in prototype</span></span><br><span class="line">  <span class="comment">// ask()&#123;&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> deepJS = <span class="keyword">new</span> Workshop(<span class="string">'Kyle'</span>);</span><br><span class="line">setTimeout(deepJS.ask, <span class="number">100</span>, <span class="string">"Is 'this' fixed?"</span>);</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;this&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#this&quot;&gt;&lt;/a&gt; &lt;code&gt;this&lt;/code&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A function’s this references the &lt;strong&gt;execution context&lt;/strong&gt; for that call, determined entirely by &lt;strong&gt;how the function was called&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;scope-and-closure&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#scope-and-closure&quot;&gt;&lt;/a&gt; Scope and Closure&lt;/h4&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; teacher = &lt;span class=&quot;string&quot;&gt;&#39;Kyle&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ask&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;question&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(teacher, question);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;otherClass&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// won&#39;t output Suzy but Kyle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; teacher = &lt;span class=&quot;string&quot;&gt;&quot;Suzy&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ask(&lt;span class=&quot;string&quot;&gt;&quot;Why?&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;otherClass();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;object-and-this&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#object-and-this&quot;&gt;&lt;/a&gt; Object and &lt;code&gt;this&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Prototype chaining&lt;/code&gt; happens after &lt;code&gt;this&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.prototype.teacher = &lt;span class=&quot;string&quot;&gt;&#39;kyle&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ask&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;question&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.teacher, question);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;otherClass&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; teacher = &lt;span class=&quot;string&quot;&gt;&quot;Suzy&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ask(&lt;span class=&quot;string&quot;&gt;&quot;Why?&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;otherClass();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="Javascript" scheme="https://geekeast.github.io/tags/Javascript/"/>
    
      <category term="Object" scheme="https://geekeast.github.io/tags/Object/"/>
    
  </entry>
  
  <entry>
    <title>Closure in Javascript</title>
    <link href="https://geekeast.github.io/jsclosure.html"/>
    <id>https://geekeast.github.io/jsclosure.html</id>
    <published>2019-11-24T23:28:16.000Z</published>
    <updated>2019-11-24T23:28:16.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="closure"><a class="markdownIt-Anchor" href="#closure"></a> Closure</h3><blockquote><p>Closure is when a function “remembers” its’ <strong>lexical scope</strong> even when the function is executed <strong>outside</strong> the lexical scope.</p></blockquote><h4 id="examples"><a class="markdownIt-Anchor" href="#examples"></a> Examples</h4><ul><li><strong>Example 1</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// waitASec close over the variable called question.</span></span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">waitASec</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(question);</span><br><span class="line">  &#125;, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ask(<span class="string">"What is closure?"</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>Example 2</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// question is preserved with the function called holdYourQuestion()</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">holdYourQuestion</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(question);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> myQuestion = ask(<span class="string">"What is closure"</span>);</span><br><span class="line">myQuestions();</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="close-over-what"><a class="markdownIt-Anchor" href="#close-over-what"></a> Close over What?</h4><blockquote><p>Close over variables rather than values</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = <span class="string">'Kyle'</span>;</span><br><span class="line"><span class="keyword">var</span> myTeacher = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(teacher);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">teacher = <span class="string">"Suzy"</span></span><br><span class="line">myTeacher(); <span class="comment">// live link!</span></span><br></pre></td></tr></table></figure><h4 id="interview-questions"><a class="markdownIt-Anchor" href="#interview-questions"></a> Interview Questions</h4><ul><li>Output?</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i&lt;=<span class="number">3</span>; i++)&#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`i: <span class="subst">$&#123;i&#125;</span>`</span>);</span><br><span class="line">  &#125;, i * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Output?</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;=<span class="number">3</span>;i++)&#123;</span><br><span class="line">  <span class="keyword">let</span> j = i;</span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`j: <span class="subst">$&#123;j&#125;</span>`</span>)</span><br><span class="line">  &#125;, j * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Output?</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i=<span class="number">1</span>; i&lt;=<span class="number">3</span>; i++)&#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`i: <span class="subst">$&#123;i&#125;</span>`</span>)</span><br><span class="line">  &#125;, i * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Why?</li></ul><blockquote><ul><li>First one, <strong>only</strong> one variables and closed over the only value</li><li>Second one, <strong>three</strong> variables and closed over respectively.</li></ul></blockquote><h3 id="module-pattern"><a class="markdownIt-Anchor" href="#module-pattern"></a> Module Pattern</h3><blockquote><p>Similar to <code>encapsulation</code></p><ul><li>Make state as <strong>Private</strong></li><li>Make function as <strong>Public</strong></li><li>Prerequisite: <strong>Closure</strong>.</li></ul></blockquote><h4 id="namespace-pattern"><a class="markdownIt-Anchor" href="#namespace-pattern"></a> Namespace Pattern</h4><blockquote><p>Problem: You can still access the teacher directly</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> workshop = &#123;</span><br><span class="line">  teacher: <span class="string">"Kyel"</span>,</span><br><span class="line">  ask(question)&#123;</span><br><span class="line">    <span class="comment">// this means </span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.teacher, question);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">workshop.ask(<span class="string">"Is this a module?"</span>);</span><br></pre></td></tr></table></figure><h4 id="revealing-pattern"><a class="markdownIt-Anchor" href="#revealing-pattern"></a> Revealing Pattern</h4><blockquote><p>Module encapsulate <code>data</code> and <code>behavior</code> together. The state of a module is held by its methods via <strong>closure</strong>.</p></blockquote><ul><li>use <code>IIFE</code> for <strong>singleton</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> workshop = (<span class="function"><span class="keyword">function</span> <span class="title">Module</span>(<span class="params">teacher</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> publicAPI = &#123; ask, &#125;;</span><br><span class="line">  <span class="keyword">return</span> publicAPI;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// *****************</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(teacher, question);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)(<span class="string">"Kyle"</span>);</span><br><span class="line">workshop.ask(<span class="string">"It's a module, right?"</span>);</span><br></pre></td></tr></table></figure><h4 id="factory-pattern"><a class="markdownIt-Anchor" href="#factory-pattern"></a> Factory Pattern</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">WorkshopModule</span>(<span class="params">teacher</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> public API = &#123;ask, &#125;;</span><br><span class="line">  <span class="keyword">return</span> publicAPI;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(teacher, question);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> workshop = WorkshopModule(<span class="string">"Kyle"</span>);</span><br><span class="line">workshop.ask(<span class="string">"It's a module, right?"</span>);</span><br></pre></td></tr></table></figure><h4 id="es6-module"><a class="markdownIt-Anchor" href="#es6-module"></a> ES6 Module</h4><ul><li>This is <strong>singleton</strong> export.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = <span class="string">"Kyle"</span>; <span class="comment">// automatically private</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123; <span class="comment">// as public with closure on private things.</span></span><br><span class="line">  <span class="built_in">console</span>.log(teacher, question); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Import</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ask <span class="keyword">from</span> <span class="string">'workshop.js'</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> ask <span class="keyword">from</span> <span class="string">'workshop.js'</span>;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;closure&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#closure&quot;&gt;&lt;/a&gt; Closure&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Closure is when a function “remembers” its’ &lt;strong&gt;lexical scope&lt;/strong&gt; even when the function is executed &lt;strong&gt;outside&lt;/strong&gt; the lexical scope.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;examples&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#examples&quot;&gt;&lt;/a&gt; Examples&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Example 1&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ask&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;question&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// waitASec close over the variable called question.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;waitASec&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(question);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ask(&lt;span class=&quot;string&quot;&gt;&quot;What is closure?&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Example 2&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ask&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;question&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// question is preserved with the function called holdYourQuestion()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;holdYourQuestion&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(question);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myQuestion = ask(&lt;span class=&quot;string&quot;&gt;&quot;What is closure&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myQuestions();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="Javascript" scheme="https://geekeast.github.io/tags/Javascript/"/>
    
      <category term="Closure" scheme="https://geekeast.github.io/tags/Closure/"/>
    
  </entry>
  
  <entry>
    <title>Scope in Javascript</title>
    <link href="https://geekeast.github.io/jsscope.html"/>
    <id>https://geekeast.github.io/jsscope.html</id>
    <published>2019-11-24T11:46:28.000Z</published>
    <updated>2019-11-24T11:46:28.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="scope"><a class="markdownIt-Anchor" href="#scope"></a> Scope</h3><h4 id="compiler-vs-interpreter"><a class="markdownIt-Anchor" href="#compiler-vs-interpreter"></a> Compiler vs Interpreter</h4><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzIxNDg2NzA2" title="https://www.zhihu.com/question/21486706">Reference<i class="fa fa-external-link"></i></span></li><li><code>Compilter</code>: compile source code to machine code and run</li><li><code>Interpreter</code>: interpret and run the code at the same time</li></ul><blockquote><p>Javascript is <strong>not</strong> <code>interpreted</code> langauage. It’s a <code>compiled</code> language with <code>two pass processing</code>. One is compling the code and declare all the <strong>scope</strong> and <strong>left hand things</strong>. Another is evaluating the <strong>right hand things</strong> and run the code eventually.</p></blockquote><h4 id="how-compiler-works"><a class="markdownIt-Anchor" href="#how-compiler-works"></a> <span class="exturl" data-url="aHR0cHM6Ly9mcm9udGVuZG1hc3RlcnMuY29tL2NvdXJzZXMvZGVlcC1qYXZhc2NyaXB0LXYzL2xleGljYWwtc2NvcGUtcmV2aWV3Lw==" title="https://frontendmasters.com/courses/deep-javascript-v3/lexical-scope-review/">How Compiler Works<i class="fa fa-external-link"></i></span></h4><ul><li><strong>Simple</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// declare teacher in global scope</span></span><br><span class="line"><span class="keyword">var</span> teacher = <span class="string">'kyle'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// create another scope within the global scope</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">otherClass</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// declare teacher in otherClass scope</span></span><br><span class="line">  <span class="keyword">var</span> teacher = <span class="string">'Suzy'</span>;</span><br><span class="line">  <span class="comment">// it doesn't have any effect on our scopes</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Welcome"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// create another scope within the global scope</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">// declare question in ask scope</span></span><br><span class="line">  <span class="keyword">var</span> question = <span class="string">'Why?'</span>;</span><br><span class="line">  <span class="comment">// call the question in the ask scope</span></span><br><span class="line">  <span class="built_in">console</span>.log(question);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// the compiling stage for create buckets and marbles has been done</span></span><br><span class="line"><span class="comment">// then will be handed over to the v8 and then run the code</span></span><br><span class="line">otherClass();</span><br><span class="line">ask();</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li><strong>Strict Mode Off</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = <span class="string">"kyle"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">otherClass</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  teacher = <span class="string">"Suzy"</span>;</span><br><span class="line">  <span class="comment">// will automatcially declare a variable in global scope</span></span><br><span class="line">  topic = <span class="string">"React"</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Welcome!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">otherClass();</span><br><span class="line"></span><br><span class="line">teacher; <span class="comment">// Suzy</span></span><br><span class="line">topic; <span class="comment">// "React"</span></span><br></pre></td></tr></table></figure><ul><li><strong>Strict Mode On</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="keyword">var</span> teacher = <span class="string">"kyle"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">otherClass</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  teacher = <span class="string">"Suzy"</span>;</span><br><span class="line">  <span class="comment">// will throw a ReferenceError</span></span><br><span class="line">  topic = <span class="string">"React"</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Welcome!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">otherClass();</span><br><span class="line"></span><br><span class="line">teacher; <span class="comment">// Suzy</span></span><br><span class="line">topic; <span class="comment">// "React"</span></span><br></pre></td></tr></table></figure><ul><li><strong>Nested Scope</strong></li></ul><blockquote><p>Search from inner to outer not vice versa.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = <span class="string">"kyle"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">otherClass</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> teacher = <span class="string">"Suzy"</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">ask</span>(<span class="params">question</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(teacher, question);</span><br><span class="line">  &#125;</span><br><span class="line">  ask(<span class="string">"Why?"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">otherCkass();</span><br><span class="line">ask(<span class="string">"???"</span>) <span class="comment">// referenceError</span></span><br></pre></td></tr></table></figure><h4 id="function-types"><a class="markdownIt-Anchor" href="#function-types"></a> Function Types</h4><ul><li><strong>Function Declaration</strong></li></ul><blockquote><p>function teacher is declared in <strong>global</strong> scope</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// function teacher is declared in global scope</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">teacher</span>(<span class="params"></span>) </span>&#123;...&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>Named Function Expression</strong></li></ul><blockquote><p>myTeacher is declared in the <strong>global</strong> scope but function <code>anotherTeacher</code> is declared in the <strong>myTeacher</strong> scope</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myTeacher = <span class="function"><span class="keyword">function</span> <span class="title">anotherTeacher</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(anotherTeacher);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>Anonymous Function Expression</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> clickHandler = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>Arrow Function</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> go = <span class="function"><span class="params">()</span> =&gt;</span> &#123;<span class="comment">/*..*/</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>Function Types Hierarchy</strong></p><ul><li><strong>Top 1</strong>. (Names) Function <code>Declaration</code></li><li><strong>Top 2</strong>. Named Function <code>Expression</code></li><li><strong>Top 3</strong>. <code>Anonymous</code> Function Expression</li></ul></li><li><p><strong>Prefer the Named Function Expression</strong></p><ul><li>Reason 1: Self-reference for <strong>recursion</strong></li><li>Reason 2: More <strong>debuggable</strong> stack traces</li><li>Reason 3: More <strong>self-documenting</strong> code</li></ul></li></ul><h4 id="iife"><a class="markdownIt-Anchor" href="#iife"></a> IIFE</h4><blockquote><p>Immediately Invoked Function Expression</p></blockquote><ul><li><strong>Simple</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = <span class="string">'Kyle'</span>;</span><br><span class="line"><span class="comment">// IIFE</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> <span class="title">anotherTeacher</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> teacher = <span class="string">"Suzy"</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(teacher);</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="built_in">console</span>.log(teacher);</span><br></pre></td></tr></table></figure><ul><li><strong>normal way of doing async/await with try/catch</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  teacher = fetchTeacher()</span><br><span class="line">&#125;<span class="keyword">catch</span> (err) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'kyle'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>make assignment happens only once</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = (</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> fetchTeacher();</span><br><span class="line">  &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'kyle'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">)();</span><br></pre></td></tr></table></figure><h4 id="block-scoping"><a class="markdownIt-Anchor" href="#block-scoping"></a> Block Scoping</h4><ul><li><strong>Create a new Scope</strong></li></ul><blockquote><p>Not all <code>{}</code> creates scopes if they didn’t use <code>const</code> or <code>let</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = <span class="string">"Kyle"</span>;</span><br><span class="line"><span class="comment">// the same way to avoid name collision</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">let</span> teacher = <span class="string">"Suzy"</span>; <span class="comment">// have const or let is the necessary to make it a as a scope</span></span><br><span class="line">  <span class="built_in">console</span>.log(teacher)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(teacher);</span><br></pre></td></tr></table></figure><ul><li><strong>Hints!</strong></li></ul><blockquote><p><code>let</code> and <code>const</code> shows this is a new scope!</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">diff</span>(<span class="params">x,y</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (x &gt; y)&#123;</span><br><span class="line">    <span class="comment">// let make if statement as a new scope</span></span><br><span class="line">    <span class="keyword">let</span> tmp = x;</span><br><span class="line">    x = y;</span><br><span class="line">    y = tmp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> y-x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong><code>let</code> vs <code>var</code></strong></li></ul><blockquote><ul><li>use <code>let</code> in <code>block scope</code></li><li>use <code>var</code> for <code>reusing</code>, because it can be level up to global.</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lookUpRecord</span>(<span class="params">searchStr</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// var shows this is not block scope! id belongs to function scope!</span></span><br><span class="line">    <span class="keyword">var</span> id = getRecord( searchStr );</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="keyword">var</span> id = <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> id; <span class="comment">// will not be undefined.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong><code>const</code> Usage</strong></li></ul><blockquote><ul><li>only use <code>const</code> for <strong>primitive immutable</strong> values, just like <code>final</code> in Java</li><li>For <strong>non-primitive</strong> types, <code>const</code> means this variable cannot be <strong>reassigned</strong>. But it can be changed. So you don’t have to use <code>const</code>.</li><li>use <code>Object.freeze()</code> to make an object final in <code>strict-mode</code></li></ul></blockquote><h4 id="hoisting"><a class="markdownIt-Anchor" href="#hoisting"></a> Hoisting</h4><blockquote><ul><li>javascript engine does <strong>not</strong> re-organize your code and do the <strong>hoisting</strong></li><li>javascript only <strong>parse</strong> the code in a different way</li></ul></blockquote><ul><li><strong>Variable Declaration</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">student;</span><br><span class="line">teacher;</span><br><span class="line">student = <span class="string">'you'</span>;</span><br><span class="line">teacher = <span class="string">'kyle'</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>After <code>Hoisting</code></strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> student;</span><br><span class="line"><span class="keyword">var</span> teacher;</span><br><span class="line">student = <span class="string">'you'</span>;</span><br><span class="line">teacher = <span class="string">'kyle'</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>Function Declaration</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">teacher();</span><br><span class="line">otherTeacher();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">teacher</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'Kyle'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> otherTeacher = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'Suzy'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>After <code>Hoisting</code></strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">teacher</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'Kyle'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> otherTeacher;</span><br><span class="line"></span><br><span class="line">teacher();</span><br><span class="line">otherTeacher(); <span class="comment">// TypeError</span></span><br><span class="line"></span><br><span class="line">otherTeacher = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"Suzy"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong><code>let</code> and <code>const</code> on hoisting</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  teacher = <span class="string">'Kyle'</span>; <span class="comment">// TDZ error</span></span><br><span class="line">  <span class="keyword">let</span> teacher;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>let</code> <strong>hoisted</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> a = <span class="number">20</span>;</span><br><span class="line">foo();  <span class="comment">// This is perfectly valid</span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;scope&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#scope&quot;&gt;&lt;/a&gt; Scope&lt;/h3&gt;
&lt;h4 id=&quot;compiler-vs-interpreter&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#compiler-vs-interpreter&quot;&gt;&lt;/a&gt; Compiler vs Interpreter&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/21486706&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Compilter&lt;/code&gt;: compile source code to machine code and run&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Interpreter&lt;/code&gt;: interpret and run the code at the same time&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Javascript is &lt;strong&gt;not&lt;/strong&gt; &lt;code&gt;interpreted&lt;/code&gt; langauage. It’s a &lt;code&gt;compiled&lt;/code&gt; language with &lt;code&gt;two pass processing&lt;/code&gt;. One is compling the code and declare all the &lt;strong&gt;scope&lt;/strong&gt; and &lt;strong&gt;left hand things&lt;/strong&gt;. Another is evaluating the &lt;strong&gt;right hand things&lt;/strong&gt; and run the code eventually.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;how-compiler-works&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#how-compiler-works&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://frontendmasters.com/courses/deep-javascript-v3/lexical-scope-review/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;How Compiler Works&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// declare teacher in global scope&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; teacher = &lt;span class=&quot;string&quot;&gt;&#39;kyle&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// create another scope within the global scope&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;otherClass&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// declare teacher in otherClass scope&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; teacher = &lt;span class=&quot;string&quot;&gt;&#39;Suzy&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// it doesn&#39;t have any effect on our scopes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;Welcome&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// create another scope within the global scope&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ask&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// declare question in ask scope&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; question = &lt;span class=&quot;string&quot;&gt;&#39;Why?&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// call the question in the ask scope&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(question);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// the compiling stage for create buckets and marbles has been done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// then will be handed over to the v8 and then run the code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;otherClass();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ask();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="Javascript" scheme="https://geekeast.github.io/tags/Javascript/"/>
    
      <category term="Lexical Scope" scheme="https://geekeast.github.io/tags/Lexical-Scope/"/>
    
  </entry>
  
  <entry>
    <title>Equality in Javascript</title>
    <link href="https://geekeast.github.io/jsequality.html"/>
    <id>https://geekeast.github.io/jsequality.html</id>
    <published>2019-11-24T11:37:56.000Z</published>
    <updated>2019-11-24T11:37:56.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="abastract-equality-comparison"><a class="markdownIt-Anchor" href="#abastract-equality-comparison"></a> Abastract Equality Comparison</h3><h4 id="vs"><a class="markdownIt-Anchor" href="#vs"></a> <code>==</code> vs <code>===</code></h4><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi85LjAvI3NlYy1hYnN0cmFjdC1lcXVhbGl0eS1jb21wYXJpc29u" title="https://www.ecma-international.org/ecma-262/9.0/#sec-abstract-equality-comparison">SPEC<i class="fa fa-external-link"></i></span></li></ul><blockquote><p>Only use the <code>==</code> when you know the type especially when implicit coercion is very helpful.</p></blockquote><h4 id="allows-for-coercion"><a class="markdownIt-Anchor" href="#allows-for-coercion"></a> <code>==</code> allows for coercion</h4><ul><li><code>null</code> equal to <code>undefined</code>.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ws1 = &#123;<span class="attr">topic</span>: <span class="literal">null</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> ws2 = &#123;&#125;;</span><br><span class="line"><span class="keyword">if</span> (ws1.topic === <span class="literal">null</span> || ws1.topic === <span class="literal">undefined</span>)</span><br><span class="line"><span class="keyword">if</span> (ws1.topic == <span class="literal">null</span>);</span><br><span class="line"><span class="comment">// better and simple!</span></span><br><span class="line"><span class="keyword">if</span> (ws2.topic === <span class="literal">null</span> || ws2.topic === <span class="literal">undefined</span>)</span><br><span class="line"><span class="keyword">if</span> (ws2.topic == <span class="literal">null</span>);</span><br></pre></td></tr></table></figure><ul><li>any is number, compare number</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ele1 = <span class="number">1</span>；</span><br><span class="line"><span class="keyword">const</span> ele2 = ele.value; <span class="comment">// I don't know the type!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// if you want to do the comparison between numebrs</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Number</span>(ele1) === <span class="built_in">Number</span>(ele2))</span><br><span class="line"></span><br><span class="line"><span class="comment">// why not use</span></span><br><span class="line"><span class="keyword">if</span> (ele1 == ele2)</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="disallows-for-coercion"><a class="markdownIt-Anchor" href="#disallows-for-coercion"></a> <code>===</code> disallows for coercion</h4><ul><li>use <code>===</code> is safe because it’s for the case that <strong>you don’t know the types</strong>.</li></ul><blockquote><p>But <code>implicit coercion</code> is faster than you do.</p></blockquote><h3 id="summary"><a class="markdownIt-Anchor" href="#summary"></a> Summary</h3><ul><li>If you know the types, <code>==</code> is better.</li><li>Otherwise you clould use <code>===</code> for safety.</li></ul><blockquote><p>Be careful of <code>-0</code> when you use implicit <code>coercion</code></p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;abastract-equality-comparison&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#abastract-equality-comparison&quot;&gt;&lt;/a&gt; Abastract Equality Comparison&lt;/h3&gt;
&lt;h4 id=&quot;vs&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#vs&quot;&gt;&lt;/a&gt; &lt;code&gt;==&lt;/code&gt; vs &lt;code&gt;===&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/9.0/#sec-abstract-equality-comparison&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SPEC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Only use the &lt;code&gt;==&lt;/code&gt; when you know the type especially when implicit coercion is very helpful.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;allows-for-coercion&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#allows-for-coercion&quot;&gt;&lt;/a&gt; &lt;code&gt;==&lt;/code&gt; allows for coercion&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;null&lt;/code&gt; equal to &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ws1 = &amp;#123;&lt;span class=&quot;attr&quot;&gt;topic&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ws2 = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ws1.topic === &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; || ws1.topic === &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ws1.topic == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// better and simple!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ws2.topic === &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; || ws2.topic === &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ws2.topic == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;any is number, compare number&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ele1 = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ele2 = ele.value; &lt;span class=&quot;comment&quot;&gt;// I don&#39;t know the type!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// if you want to do the comparison between numebrs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;Number&lt;/span&gt;(ele1) === &lt;span class=&quot;built_in&quot;&gt;Number&lt;/span&gt;(ele2))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// why not use&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ele1 == ele2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="Javascript" scheme="https://geekeast.github.io/tags/Javascript/"/>
    
      <category term="Equality" scheme="https://geekeast.github.io/tags/Equality/"/>
    
  </entry>
  
  <entry>
    <title>Coercion in Javascript</title>
    <link href="https://geekeast.github.io/jscoercion.html"/>
    <id>https://geekeast.github.io/jscoercion.html</id>
    <published>2019-11-24T11:02:17.000Z</published>
    <updated>2019-11-24T11:02:17.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="abstract-operations"><a class="markdownIt-Anchor" href="#abstract-operations"></a> Abstract Operations</h3><blockquote><p>ToPrimitive, ToString, ToNumber, ToBoolean</p></blockquote><h4 id><a class="markdownIt-Anchor" href="#"></a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi85LjAvI3NlYy10b3ByaW1pdGl2ZQ==" title="https://www.ecma-international.org/ecma-262/9.0/#sec-toprimitive"><strong>ToPrimitive(hint)</strong><i class="fa fa-external-link"></i></span></h4><blockquote><p>convert from <code>non-primitive</code> to <code>primitive</code></p></blockquote><ul><li>Hint: number<ul><li><code>valueOf()</code></li><li><code>toString()</code></li><li><code>valueOf()</code></li></ul></li><li>Hint: string<ul><li><code>toString()</code></li><li><code>valueOf()</code></li><li><code>toString()</code></li></ul></li></ul><h4 id="tostring"><a class="markdownIt-Anchor" href="#tostring"></a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi85LjAvI3NlYy10b3N0cmluZw==" title="https://www.ecma-international.org/ecma-262/9.0/#sec-tostring">ToString<i class="fa fa-external-link"></i></span></h4><ul><li><strong>Primitive Type</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">null -&gt; <span class="string">'null'</span></span><br><span class="line">undefined -&gt; <span class="string">'undefined'</span></span><br><span class="line"><span class="literal">true</span> -&gt; <span class="string">'true'</span></span><br><span class="line"><span class="literal">false</span> -&gt; <span class="string">'false'</span></span><br><span class="line">3.14159 -&gt; <span class="string">'3.14159'</span></span><br><span class="line">0 -&gt; <span class="string">'0'</span></span><br><span class="line">-0 -&gt; <span class="string">'0'</span> <span class="comment"># !</span></span><br></pre></td></tr></table></figure><ul><li><strong>Weird Conversion from Array</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[] -&gt; <span class="string">''</span></span><br><span class="line">[1,2,3] -&gt; <span class="string">'1,2,3'</span></span><br><span class="line">[null, undefined] -&gt; <span class="string">','</span></span><br><span class="line">[[[],[],[]],[]] -&gt; <span class="string">',,,'</span></span><br><span class="line">[,,,,] -&gt; <span class="string">',,,'</span></span><br></pre></td></tr></table></figure><ul><li><strong>Weird Conversion from Object</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125; -&gt; <span class="string">"[object Object]"</span></span><br><span class="line">&#123;a:2&#125; -&gt; <span class="string">"[object Object]"</span></span><br></pre></td></tr></table></figure><ul><li><strong>Override <code>toString()</code> for <code>object</code></strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># overRide toString() method to return 'X'</span></span><br><span class="line">&#123; <span class="function"><span class="title">toString</span></span>()&#123;<span class="built_in">return</span> <span class="string">"X"</span>;&#125;&#125; -&gt; <span class="string">"X"</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="tonumber"><a class="markdownIt-Anchor" href="#tonumber"></a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi85LjAvI3NlYy10b251bWJlcg==" title="https://www.ecma-international.org/ecma-262/9.0/#sec-tonumber">ToNumber<i class="fa fa-external-link"></i></span></h4><blockquote><p>= <code>ToPrimitive(number)</code></p></blockquote><ul><li><strong>Conversion from <code>primitive</code> type</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">""</span> -&gt; 0 <span class="comment"># weird!</span></span><br><span class="line"><span class="string">"0"</span> -&gt; 0 <span class="comment"># not weird!</span></span><br><span class="line"><span class="string">" 009 "</span> -&gt; 9</span><br><span class="line"><span class="string">"3.14159"</span> -&gt; 3.14159</span><br><span class="line"><span class="string">"0."</span> -&gt; 0</span><br><span class="line"><span class="string">".0"</span> -&gt; 0</span><br><span class="line"><span class="string">"."</span> -&gt; NaN  <span class="comment">#!</span></span><br><span class="line"><span class="string">"0xaf"</span> -&gt; 175</span><br><span class="line"><span class="literal">false</span> -&gt; 0</span><br><span class="line"><span class="literal">true</span> -&gt; 1</span><br><span class="line">null -&gt; 0 <span class="comment">#!</span></span><br><span class="line">undefined -&gt; NaN</span><br></pre></td></tr></table></figure><ul><li><strong>Conversion from <code>non-primitive</code> type</strong></li></ul><blockquote><p>will invoke the <code>toPrimitive(Number)</code> abstract operaiton</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">""</span>] -&gt; 0</span><br><span class="line">[<span class="string">"0"</span>] -&gt; 0</span><br><span class="line">[<span class="string">"-0"</span>] -&gt; -0</span><br><span class="line">[null] -&gt; 0</span><br><span class="line">[undefined] -&gt; 0</span><br><span class="line">[1,2,3] -&gt; NaN</span><br><span class="line">[[[[]]]] -&gt; 0</span><br><span class="line">&#123;..&#125; -&gt; NaN</span><br></pre></td></tr></table></figure><ul><li><strong>Override <code>valueOf()</code> for object</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; valueOf()&#123;<span class="keyword">return</span> <span class="number">3</span>&#125;&#125; -&gt; <span class="number">3</span></span><br></pre></td></tr></table></figure><ul><li><strong>Operation</strong> <code>valueOf()</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">valueOf()&#123;<span class="keyword">return</span> <span class="keyword">this</span>;&#125;</span><br></pre></td></tr></table></figure><h4 id="toboolean"><a class="markdownIt-Anchor" href="#toboolean"></a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi85LjAvI3NlYy10b2Jvb2xlYW4=" title="https://www.ecma-international.org/ecma-262/9.0/#sec-toboolean">ToBoolean<i class="fa fa-external-link"></i></span></h4><blockquote><p>ToBoolean only does <code>look up</code>, do <strong>not</strong> invode any other <code>abstract operations</code></p></blockquote><ul><li><strong>False</strong><ul><li><code>&quot;&quot;</code></li><li><code>0, -0</code></li><li><code>null</code></li><li><code>NaN</code></li><li><code>undefined</code></li><li><code>false</code></li></ul></li><li><strong>True</strong><ul><li><code>&quot;foo&quot;</code></li><li><code>23</code></li><li><code>{a:'1'}</code></li><li><code>[1,3]</code></li><li><code>function(){...}</code></li><li><code>true</code></li><li>…</li></ul></li></ul><h3 id="explicit-coercion"><a class="markdownIt-Anchor" href="#explicit-coercion"></a> Explicit Coercion</h3><h4 id="to-string"><a class="markdownIt-Anchor" href="#to-string"></a> to string</h4><ul><li><strong>use <code>${}</code></strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> y = <span class="number">1</span></span><br><span class="line"><span class="keyword">const</span> x = <span class="string">`a asdasdasd <span class="subst">$&#123;y&#125;</span>`</span> <span class="comment">// be will be coercied to string implicitly</span></span><br></pre></td></tr></table></figure><ul><li><strong>use <code>+</code></strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> b = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> x = <span class="string">"a"</span> + b <span class="comment">// be will be coercied to string implicitly</span></span><br></pre></td></tr></table></figure><ul><li><strong>use <code>Array.prototype.join()</code></strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>].join(<span class="string">""</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>use <code>toString()</code> of a non-primitive type</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> x = &#123;&#125;</span><br><span class="line">x.toString();</span><br></pre></td></tr></table></figure><ul><li><strong>use <code>String()</code>: Recommended</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h4 id="to-number"><a class="markdownIt-Anchor" href="#to-number"></a> to number</h4><ul><li><strong>use <code>+</code></strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+<span class="string">"324"</span> <span class="comment">// wiil be converted to a number</span></span><br></pre></td></tr></table></figure><ul><li><strong>use <code>Number()</code>: Recommended</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Number</span>(<span class="string">"123"</span>);</span><br></pre></td></tr></table></figure><h4 id="to-boolean"><a class="markdownIt-Anchor" href="#to-boolean"></a> to boolean</h4><ul><li><strong>use <code>!!</code></strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!!a.b</span><br></pre></td></tr></table></figure><ul><li><strong>use <code>Boolean()</code></strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Boolean</span>(<span class="string">""</span>)</span><br></pre></td></tr></table></figure><h3 id="implicit-coercion"><a class="markdownIt-Anchor" href="#implicit-coercion"></a> Implicit Coercion</h3><blockquote><p>Boxing: Wrap primitive types up as Objects</p></blockquote><ul><li>Just let the boxing happens which has performance benefits.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="string">"abc"</span>;</span><br><span class="line">a.length; <span class="comment">// will be boxed as an object</span></span><br><span class="line">a.toUpperCase() <span class="comment">// will be boxed as an object</span></span><br></pre></td></tr></table></figure><h3 id="corner-case"><a class="markdownIt-Anchor" href="#corner-case"></a> Corner Case</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Number</span>(<span class="string">""</span>) <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="string">" \t\n"</span>) <span class="comment">//0</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="literal">null</span>) <span class="comment">//0</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="literal">NaN</span>) <span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">Number</span>([]) <span class="comment">//0</span></span><br><span class="line"><span class="built_in">Number</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]) <span class="comment">// ！NaN</span></span><br><span class="line"><span class="built_in">Number</span>([<span class="literal">null</span>]) <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">Number</span>(&#123;&#125;) <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">String</span>(<span class="number">-0</span>) <span class="comment">// "0"</span></span><br><span class="line"><span class="built_in">String</span>(<span class="literal">null</span>) <span class="comment">// "null"</span></span><br><span class="line"><span class="built_in">String</span>(<span class="literal">undefined</span>) <span class="comment">// "undefined"</span></span><br><span class="line"><span class="built_in">String</span>( [<span class="literal">null</span>] ) <span class="comment">// ""</span></span><br><span class="line"><span class="built_in">String</span>( [<span class="literal">undefined</span>] ) <span class="comment">// ""</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Boolean</span>( <span class="keyword">new</span> <span class="built_in">Boolean</span>(<span class="literal">false</span>)); <span class="literal">true</span> <span class="comment">// the object exists</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Number</span>(<span class="literal">true</span>) <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="literal">false</span>) <span class="comment">//0</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>&lt;<span class="number">2</span>&lt;<span class="number">3</span> <span class="comment">// true</span></span><br><span class="line">(<span class="number">1</span>&lt;<span class="number">2</span>)&lt;<span class="number">3</span></span><br><span class="line"><span class="number">1</span>&lt;<span class="number">3</span>  <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">''</span>;</span><br><span class="line"><span class="built_in">Number</span>(a) <span class="comment">// 0</span></span><br><span class="line">a = <span class="string">'  \t\n'</span></span><br><span class="line"><span class="built_in">Number</span>(a) <span class="comment">//0</span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;abstract-operations&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#abstract-operations&quot;&gt;&lt;/a&gt; Abstract Operations&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;ToPrimitive, ToString, ToNumber, ToBoolean&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.ecma-international.org/ecma-262/9.0/#sec-toprimitive&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;ToPrimitive(hint)&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;convert from &lt;code&gt;non-primitive&lt;/code&gt; to &lt;code&gt;primitive&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Hint: number
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;valueOf()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;valueOf()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Hint: string
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;valueOf()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;tostring&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#tostring&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.ecma-international.org/ecma-262/9.0/#sec-tostring&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ToString&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Primitive Type&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;null -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;null&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;undefined -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;undefined&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;true&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;false&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.14159 -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;3.14159&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-0 -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# !&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Weird Conversion from Array&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[] -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1,2,3] -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;1,2,3&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[null, undefined] -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[[],[],[]],[]] -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;,,,&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[,,,,] -&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;,,,&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Weird Conversion from Object&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#125; -&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;[object Object]&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;a:2&amp;#125; -&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;[object Object]&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Override &lt;code&gt;toString()&lt;/code&gt; for &lt;code&gt;object&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# overRide toString() method to return &#39;X&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;X&quot;&lt;/span&gt;;&amp;#125;&amp;#125; -&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;X&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="Javascript" scheme="https://geekeast.github.io/tags/Javascript/"/>
    
      <category term="Coercion" scheme="https://geekeast.github.io/tags/Coercion/"/>
    
  </entry>
  
  <entry>
    <title>Types in Javascript</title>
    <link href="https://geekeast.github.io/js-types.html"/>
    <id>https://geekeast.github.io/js-types.html</id>
    <published>2019-11-24T07:32:16.000Z</published>
    <updated>2019-11-24T07:32:16.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="types"><a class="markdownIt-Anchor" href="#types"></a> Types</h3><blockquote><p>In Javascript, statement “every thing is a an object” is <strong>wrong</strong>. Primitive types are not objects. But some of them can <strong>behave</strong> like objects.</p></blockquote><h4 id><a class="markdownIt-Anchor" href="#"></a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi85LjAvI3NlYy1wcmltaXRpdmUtdmFsdWU=" title="https://www.ecma-international.org/ecma-262/9.0/#sec-primitive-value"><strong>Primitive Types</strong><i class="fa fa-external-link"></i></span></h4><blockquote><p>In Javascript, <code>variable</code> doesn’t have types, <code>value</code> have.</p></blockquote><ul><li><code>Undefined</code>: <strong>created</strong> but has <strong>no</strong> value; <strong>default</strong> value</li><li><code>Null</code>: represents the intentional absence of any <strong>object</strong> value</li><li><code>Boolean</code>: <code>true</code> or <code>false</code> (not <code>1</code> and <code>0</code>); can behave like an object: <code>Boolean</code></li><li><code>Number</code>: <code>NaN</code>, <code>-0</code>, <code>0</code>，<code>-Infinite</code>, <code>Infinite</code>and others; can behave like an object: <code>Number</code></li><li><code>String</code>: <code>''</code> and other; can behave like an object: <code>String</code></li><li><code>Symbol</code>: <strong>unique</strong> and <strong>non-string</strong></li></ul><h4 id="-2"><a class="markdownIt-Anchor" href="#-2"></a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi85LjAvI3NlYy10ZXJtcy1hbmQtZGVmaW5pdGlvbnMtb2JqZWN0" title="https://www.ecma-international.org/ecma-262/9.0/#sec-terms-and-definitions-object"><strong>Object</strong><i class="fa fa-external-link"></i></span></h4><blockquote><p>a collection of properties; a sinle prototype</p></blockquote><ul><li><code>null</code></li><li><code>array</code></li><li><code>function</code></li><li>…</li></ul><h4 id="quick-example"><a class="markdownIt-Anchor" href="#quick-example"></a> Quick Example</h4><ul><li><strong>Normal Parts</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> v; <span class="built_in">console</span>.log(<span class="keyword">typeof</span> v); <span class="comment">// undefined;</span></span><br><span class="line"></span><br><span class="line">v = <span class="string">'1'</span>; <span class="built_in">console</span>.log(<span class="keyword">typeof</span> v); <span class="comment">// string</span></span><br><span class="line"></span><br><span class="line">v = <span class="number">2</span>; <span class="built_in">console</span>.log(<span class="keyword">typeof</span> v); <span class="comment">//number</span></span><br><span class="line"></span><br><span class="line">v = <span class="literal">true</span>; <span class="built_in">console</span>.log(<span class="keyword">typeof</span> v); <span class="comment">// boolean</span></span><br><span class="line"></span><br><span class="line">v = &#123;&#125;; <span class="built_in">console</span>.log(<span class="keyword">typeof</span> v); <span class="comment">// object</span></span><br><span class="line"></span><br><span class="line">v = <span class="built_in">Symbol</span>(); <span class="built_in">console</span>.log(<span class="keyword">typeof</span> v); <span class="comment">// symbol</span></span><br></pre></td></tr></table></figure><a id="more"></a><ul><li><strong>Weird Parts</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> doesntExist) <span class="comment">// undefined! I think it should be undeclared.</span></span><br><span class="line"><span class="keyword">var</span> v = <span class="literal">null</span>; <span class="built_in">console</span>.log(v) <span class="comment">// object! why not null?</span></span><br><span class="line">v = <span class="function"><span class="keyword">function</span>(<span class="params"></span>); <span class="title">console</span>.<span class="title">log</span>(<span class="params">v</span>) // <span class="title">function</span>! <span class="title">what</span>? <span class="title">why</span> <span class="title">not</span> <span class="title">object</span>?</span></span><br><span class="line">v = [1,2,3]; console.log(v); // object! strange! and what a mess!</span><br></pre></td></tr></table></figure><ul><li><strong>Weird Parts Exploration</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(doesnExist) <span class="comment">// ReferenceError</span></span><br><span class="line"><span class="keyword">var</span> v = <span class="literal">null</span>; <span class="built_in">console</span>.log(v === <span class="literal">null</span>); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">var</span> v = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;; <span class="built_in">console</span>.log(<span class="keyword">typeof</span> v === <span class="string">'function'</span>); <span class="comment">// true</span></span><br><span class="line">v = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]; <span class="built_in">console</span>.log(<span class="built_in">Array</span>.isArray(v)); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h3 id="emptiness"><a class="markdownIt-Anchor" href="#emptiness"></a> Emptiness</h3><ul><li><code>Undeclared</code>; <strong>not declared</strong>;</li><li><code>Uninitialized</code>: <strong>declared</strong> but <strong>cannot be accessed</strong> to; <code>Temporal Dead Zone</code>.</li><li><code>Undefined</code> <strong>declared</strong> but has <strong>no value</strong>;</li><li><code>null</code>: an <strong>object</strong> with value of <strong>null</strong>;</li><li><code>NaN</code>: a <strong>number</strong> but an <strong>invalid</strong> number;</li></ul><h3 id="special-value"><a class="markdownIt-Anchor" href="#special-value"></a> Special value</h3><h4 id="special-nan"><a class="markdownIt-Anchor" href="#special-nan"></a> Special NaN</h4><ul><li><strong>String to Number</strong> by <code>Number()</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myAge = <span class="built_in">Number</span>(<span class="string">'0o46'</span>); <span class="comment">// octal number for 46</span></span><br><span class="line"><span class="keyword">var</span> myNextAge = <span class="built_in">Number</span>(<span class="string">'39'</span>); <span class="comment">// 39</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ''-&gt; 0; '-0' -&gt; 0; infinite -&gt; NaN; -infinite -&gt; NaN</span></span><br><span class="line"><span class="keyword">var</span> myCatsAge = <span class="built_in">Number</span>(<span class="string">'n/a'</span>); <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// coerce to number at first</span></span><br><span class="line">myAge - <span class="string">"my son's age"</span>; <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure><ul><li><strong>Equality on NaN</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myCatsAge === myCatsAge; <span class="comment">// false!</span></span><br></pre></td></tr></table></figure><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi85LjAvI3NlYy1pc25hbi1udW1iZXI=" title="https://www.ecma-international.org/ecma-262/9.0/#sec-isnan-number"><strong>isNaN</strong><i class="fa fa-external-link"></i></span>: implicit coercion happens</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">isNaN</span>(myAge); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">isNaN</span>(myCatsAge) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">isNaN</span>(<span class="string">"my son's age"</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi85LjAvI3NlYy1udW1iZXIuaXNuYW4=" title="https://www.ecma-international.org/ecma-262/9.0/#sec-number.isnan"><strong>Number.isNaN()</strong><i class="fa fa-external-link"></i></span>: no coercion happens</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Number</span>.isNaN(myCatsAge); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Number</span>.isNaN(<span class="string">"my son's age"</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi85LjAvI3NlYy1zYW1ldmFsdWU=" title="https://www.ecma-international.org/ecma-262/9.0/#sec-samevalue"><strong>Strict Check</strong><i class="fa fa-external-link"></i></span></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.is(<span class="string">'hello'</span>, <span class="literal">NaN</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li>Don’t use <code>undefined</code>, <code>null</code>, <code>false</code>, <code>-1</code>, <code>0</code> to replace <code>NaN</code>. <code>NaN</code> is the <code>only</code> proper representation of an <code>invalid</code> <strong>number</strong>.</li></ul><h4 id="special-0"><a class="markdownIt-Anchor" href="#special-0"></a> Special -0</h4><blockquote><p><code>Zero</code> with <strong>direction</strong> <code>minus</code></p></blockquote><ul><li><strong>Weird Parts</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> trendRate = <span class="number">-0</span>;</span><br><span class="line"><span class="built_in">console</span>.log(trendRate === <span class="number">-0</span>)  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(trendRate.toString()) <span class="comment">// "0" !</span></span><br><span class="line"><span class="built_in">console</span>.log(trendRate === <span class="number">0</span>) <span class="comment">// true !</span></span><br><span class="line"><span class="built_in">console</span>.log(trendRate &lt; <span class="number">0</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(trendRate &gt; <span class="number">0</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi85LjAvI3NlYy1zYW1ldmFsdWU=" title="https://www.ecma-international.org/ecma-262/9.0/#sec-samevalue"><strong>Strict check</strong><i class="fa fa-external-link"></i></span></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.is(trendRate, <span class="number">-0</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.is(trendRate, <span class="number">0</span>) <span class="comment">// false;</span></span><br></pre></td></tr></table></figure><ul><li><strong>Obtain Direction</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.sign(<span class="number">-3</span>)); <span class="comment">//-1</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.sign(<span class="number">3</span>)); <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.sign(<span class="number">-0</span>)); <span class="comment">// -0!</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.sign(<span class="number">0</span>)); <span class="comment">// 0!</span></span><br></pre></td></tr></table></figure><ul><li><strong>Custom Direction Getter</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sign</span>(<span class="params">v</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> v !== <span class="number">0</span> ? <span class="built_in">Math</span>.sign(v) : <span class="built_in">Object</span>.is(v, <span class="number">-0</span>) ? <span class="number">-1</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">sign(<span class="number">-3</span>) <span class="comment">// -1</span></span><br><span class="line">sign(<span class="number">3</span>) <span class="comment">// 1</span></span><br><span class="line">sign(<span class="number">-0</span>) <span class="comment">// -1</span></span><br><span class="line">sign(<span class="number">0</span>) <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><h3 id="constructor-time"><a class="markdownIt-Anchor" href="#constructor-time"></a> Constructor Time</h3><ul><li>You should use <code>new</code> to build <code>constructor</code> when</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>();</span><br><span class="line"><span class="built_in">Array</span>();</span><br><span class="line"><span class="built_in">Function</span>();</span><br><span class="line"><span class="built_in">Date</span>();</span><br><span class="line"><span class="built_in">RegExp</span>();</span><br><span class="line"><span class="built_in">Error</span>();</span><br></pre></td></tr></table></figure><ul><li>You should avoid <code>new</code> when</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span>();</span><br><span class="line"><span class="built_in">Number</span>();</span><br><span class="line"><span class="built_in">Boolean</span>()</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;types&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#types&quot;&gt;&lt;/a&gt; Types&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;In Javascript, statement “every thing is a an object” is &lt;strong&gt;wrong&lt;/strong&gt;. Primitive types are not objects. But some of them can &lt;strong&gt;behave&lt;/strong&gt; like objects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.ecma-international.org/ecma-262/9.0/#sec-primitive-value&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Primitive Types&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;In Javascript, &lt;code&gt;variable&lt;/code&gt; doesn’t have types, &lt;code&gt;value&lt;/code&gt; have.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Undefined&lt;/code&gt;: &lt;strong&gt;created&lt;/strong&gt; but has &lt;strong&gt;no&lt;/strong&gt; value; &lt;strong&gt;default&lt;/strong&gt; value&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Null&lt;/code&gt;: represents the intentional absence of any &lt;strong&gt;object&lt;/strong&gt; value&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Boolean&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (not &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt;); can behave like an object: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Number&lt;/code&gt;: &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;-0&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;，&lt;code&gt;-Infinite&lt;/code&gt;, &lt;code&gt;Infinite&lt;/code&gt;and others; can behave like an object: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String&lt;/code&gt;: &lt;code&gt;&#39;&#39;&lt;/code&gt; and other; can behave like an object: &lt;code&gt;String&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Symbol&lt;/code&gt;: &lt;strong&gt;unique&lt;/strong&gt; and &lt;strong&gt;non-string&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;-2&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#-2&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.ecma-international.org/ecma-262/9.0/#sec-terms-and-definitions-object&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Object&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;a collection of properties; a sinle prototype&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;function&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;quick-example&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#quick-example&quot;&gt;&lt;/a&gt; Quick Example&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Normal Parts&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; v; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; v); &lt;span class=&quot;comment&quot;&gt;// undefined;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v = &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; v); &lt;span class=&quot;comment&quot;&gt;// string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; v); &lt;span class=&quot;comment&quot;&gt;//number&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; v); &lt;span class=&quot;comment&quot;&gt;// boolean&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v = &amp;#123;&amp;#125;; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; v); &lt;span class=&quot;comment&quot;&gt;// object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v = &lt;span class=&quot;built_in&quot;&gt;Symbol&lt;/span&gt;(); &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; v); &lt;span class=&quot;comment&quot;&gt;// symbol&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="Javascript" scheme="https://geekeast.github.io/tags/Javascript/"/>
    
      <category term="Types" scheme="https://geekeast.github.io/tags/Types/"/>
    
  </entry>
  
  <entry>
    <title>Functional Programming</title>
    <link href="https://geekeast.github.io/functionalprogramming.html"/>
    <id>https://geekeast.github.io/functionalprogramming.html</id>
    <published>2019-11-24T07:18:43.000Z</published>
    <updated>2019-11-24T07:18:43.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="functional-programming"><a class="markdownIt-Anchor" href="#functional-programming"></a> Functional Programming</h3><blockquote><p>extract side effect rather than terminate it</p></blockquote><h3 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tL2phdmFzY3JpcHQtc2NlbmUvbWFzdGVyLXRoZS1qYXZhc2NyaXB0LWludGVydmlldy13aGF0LWlzLWZ1bmN0aW9uYWwtcHJvZ3JhbW1pbmctN2YyMThjNjhiM2Ew" title="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-functional-programming-7f218c68b3a0">Functional Programming<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tL2phdmFzY3JpcHQtc2NlbmUvbWFzdGVyLXRoZS1qYXZhc2NyaXB0LWludGVydmlldy13aGF0LWlzLWEtcHVyZS1mdW5jdGlvbi1kMWMwNzZiZWM5NzY=" title="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976">Pure Function<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9mcm9udGVuZG1hc3RlcnMuY29tL2NvdXJzZXMvZnVuY3Rpb25hbC1qcy1saXRlL3NpZGUtZWZmZWN0cy8=" title="https://frontendmasters.com/courses/functional-js-lite/side-effects/">Side Effect<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL2xlYXJueW91YWhhc2tlbGwuY29tL2NoYXB0ZXJz" title="http://learnyouahaskell.com/chapters">Learn you a haskell for great good<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3d3dy5jcy5jbXUuZWR1L34xNTE1MC9pbmRleC5odG1s" title="http://www.cs.cmu.edu/~15150/index.html">FP CMU Course<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3d3dy5hcWVlLm5ldC9wb3N0L3doeS1oYXNrZWxsLWlzLXdvcnRoLWxlYXJuaW5nLmh0bWw=" title="http://www.aqee.net/post/why-haskell-is-worth-learning.html">Haskell<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9lbGl4aXItbGFuZy5vcmcv" title="https://elixir-lang.org/">Elixir<i class="fa fa-external-link"></i></span></li></ul><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;functional-programming&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#functional-programming&quot;&gt;&lt;/a&gt; Functional Programming&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;extract side effect rather than terminate it&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;reference&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#reference&quot;&gt;&lt;/a&gt; Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/javascript-scene/master-the-javascript-interview-what-is-functional-programming-7f218c68b3a0&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Functional Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Pure Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/functional-js-lite/side-effects/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Side Effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://learnyouahaskell.com/chapters&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn you a haskell for great good&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cs.cmu.edu/~15150/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;FP CMU Course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.aqee.net/post/why-haskell-is-worth-learning.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Haskell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://elixir-lang.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Elixir&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Functional Programming" scheme="https://geekeast.github.io/categories/Functional-Programming/"/>
    
    
      <category term="Functional Programming" scheme="https://geekeast.github.io/tags/Functional-Programming/"/>
    
  </entry>
  
  <entry>
    <title>Float Issue in Javascript</title>
    <link href="https://geekeast.github.io/floatoverflow.html"/>
    <id>https://geekeast.github.io/floatoverflow.html</id>
    <published>2019-11-24T06:32:51.000Z</published>
    <updated>2019-11-24T06:32:51.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="equality-check"><a class="markdownIt-Anchor" href="#equality-check"></a> Equality Check</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Math</span>.abs(<span class="number">0.3</span> - (<span class="number">0.1</span>+<span class="number">0.2</span>)) &lt; <span class="number">1e-6</span></span><br></pre></td></tr></table></figure><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;equality-check&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#equality-check&quot;&gt;&lt;/a&gt; Equality Check&lt;/h3&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.abs(&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt; - (&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;)) &amp;lt; &lt;span class=&quot;number&quot;&gt;1e-6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="Javascript" scheme="https://geekeast.github.io/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>Paste Image Enhancer in VS-code</title>
    <link href="https://geekeast.github.io/pasteimagemarkdown.html"/>
    <id>https://geekeast.github.io/pasteimagemarkdown.html</id>
    <published>2019-10-24T17:48:41.000Z</published>
    <updated>2019-10-24T17:48:41.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="plugin"><a class="markdownIt-Anchor" href="#plugin"></a> Plugin</h3><ul><li>Paste Image</li></ul><h3 id="settings"><a class="markdownIt-Anchor" href="#settings"></a> Settings</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"pasteImage.path": "$&#123;projectRoot&#125;/img",</span><br><span class="line">"pasteImage.basePath": "$&#123;projectRoot&#125;",</span><br><span class="line">"pasteImage.insertPattern": "&lt;div style=\"text-align:center; margin:auto\"&gt;&lt;img src=\"$&#123;imageFilePath&#125;\"&gt;&lt;/div&gt;",</span><br></pre></td></tr></table></figure><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;plugin&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#plugin&quot;&gt;&lt;/a&gt; Plugin&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Paste Image&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;settings&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#settings&quot;&gt;&lt;/a&gt; Settings&lt;/h3&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&quot;pasteImage.path&quot;: &quot;$&amp;#123;projectRoot&amp;#125;/img&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&quot;pasteImage.basePath&quot;: &quot;$&amp;#123;projectRoot&amp;#125;&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&quot;pasteImage.insertPattern&quot;: &quot;&amp;lt;div style=\&quot;text-align:center; margin:auto\&quot;&amp;gt;&amp;lt;img src=\&quot;$&amp;#123;imageFilePath&amp;#125;\&quot;&amp;gt;&amp;lt;/div&amp;gt;&quot;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="VSCode" scheme="https://geekeast.github.io/categories/VSCode/"/>
    
    
      <category term="Markdown" scheme="https://geekeast.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Create TOC for Markdown by Doctoc and Husky</title>
    <link href="https://geekeast.github.io/createmarkdowntoc.html"/>
    <id>https://geekeast.github.io/createmarkdowntoc.html</id>
    <published>2019-10-23T06:14:12.000Z</published>
    <updated>2019-10-23T06:14:12.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Pre: <code>npm</code> &amp; <code>yarn</code></li><li>Init <code>npm init -y</code></li><li>Install <code>yarn add --dev husky doctoc</code></li><li>Appednd <code>package.json</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"husky": &#123;</span><br><span class="line">  "hooks": &#123;</span><br><span class="line">    "pre-commit": "yarn doctoc . --github --title \"## Table Of Content\" &amp;&amp; git add -A"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0dlZWtFYXN0L3NlcnZlcmxlc3MtZW50cnk=" title="https://github.com/GeekEast/serverless-entry">Example<i class="fa fa-external-link"></i></span></li></ul><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Pre: &lt;code&gt;npm&lt;/code&gt; &amp;amp; &lt;code&gt;yarn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Init &lt;code&gt;npm init -y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install &lt;code&gt;yarn add --dev husky doctoc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Appednd &lt;code&gt;package.json&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&quot;husky&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;hooks&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;pre-commit&quot;: &quot;yarn doctoc . --github --title \&quot;## Table Of Content\&quot; &amp;amp;&amp;amp; git add -A&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GeekEast/serverless-entry&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Git" scheme="https://geekeast.github.io/categories/Git/"/>
    
    
      <category term="Github" scheme="https://geekeast.github.io/tags/Github/"/>
    
      <category term="Markdown" scheme="https://geekeast.github.io/tags/Markdown/"/>
    
      <category term="TOC" scheme="https://geekeast.github.io/tags/TOC/"/>
    
  </entry>
  
  <entry>
    <title>Introduction to Maven</title>
    <link href="https://geekeast.github.io/mavenentry.html"/>
    <id>https://geekeast.github.io/mavenentry.html</id>
    <published>2019-10-21T10:59:32.000Z</published>
    <updated>2019-10-21T10:59:32.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="groupid-and-aritfactid"><a class="markdownIt-Anchor" href="#groupid-and-aritfactid"></a> <code>groupId</code> and <code>aritfactId</code></h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hcGFjaGUub3JnL2d1aWRlcy9taW5pL2d1aWRlLW5hbWluZy1jb252ZW50aW9ucy5odG1s" title="https://maven.apache.org/guides/mini/guide-naming-conventions.html">docs<i class="fa fa-external-link"></i></span></li><li><code>groupId</code>: used to uniquely identify your projecr across all projects ex:<code>org.apache</code></li><li><code>artifactId</code>: name of the jar without version ex:<code>.maven</code></li><li>Example: <code>org.apache.maven</code></li></ul><h3 id="maven-central-repository"><a class="markdownIt-Anchor" href="#maven-central-repository"></a> Maven Central Repository</h3><p><span class="exturl" data-url="aHR0cHM6Ly9tdm5yZXBvc2l0b3J5LmNvbS8=" title="https://mvnrepository.com/">MVNRepository<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9zZWFyY2gubWF2ZW4ub3JnLw==" title="https://search.maven.org/">Sonatype<i class="fa fa-external-link"></i></span></p><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;groupid-and-aritfactid&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#groupid-and-aritfactid&quot;&gt;&lt;/a&gt; &lt;code&gt;groupId&lt;/code&gt; and &lt;code&gt;aritfactId&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://maven.apache.org/guides/mini/guide-naming-conventions.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;groupId&lt;/code&gt;: used to uniquely identify your projecr across all projects ex:&lt;code&gt;org.apache&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;artifactId&lt;/code&gt;: name of the jar without version ex:&lt;code&gt;.maven&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example: &lt;code&gt;org.apache.maven&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;maven-central-repository&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#maven-central-repository&quot;&gt;&lt;/a&gt; Maven Central Repository&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://mvnrepository.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MVNRepository&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://search.maven.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Sonatype&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://geekeast.github.io/categories/Java/"/>
    
    
      <category term="Maven" scheme="https://geekeast.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>PopClip Setup</title>
    <link href="https://geekeast.github.io/popclip.html"/>
    <id>https://geekeast.github.io/popclip.html</id>
    <published>2019-10-15T03:32:26.000Z</published>
    <updated>2019-10-16T00:33:40.539Z</updated>
    
    <content type="html"><![CDATA[<h3 id="tools"><a class="markdownIt-Anchor" href="#tools"></a> Tools</h3><ul><li>PopClip<ul><li>You can <code>turn off</code></li></ul></li><li>BetterTouchTool<ul><li><code>fn</code>+<code>z</code>: pop up the menu (by applescript)</li></ul></li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Insert script code here</span></span><br><span class="line"><span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">"PopClip"</span> <span class="keyword">to</span> appear</span><br></pre></td></tr></table></figure><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;tools&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#tools&quot;&gt;&lt;/a&gt; Tools&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;PopClip
&lt;ul&gt;
&lt;li&gt;You can &lt;code&gt;turn off&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;BetterTouchTool
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fn&lt;/code&gt;+&lt;code&gt;z&lt;/code&gt;: pop up the menu (by applescript)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#Insert script code here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;PopClip&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; appear&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Mac" scheme="https://geekeast.github.io/categories/Mac/"/>
    
    
      <category term="Mac" scheme="https://geekeast.github.io/tags/Mac/"/>
    
      <category term="Efficiency" scheme="https://geekeast.github.io/tags/Efficiency/"/>
    
  </entry>
  
  <entry>
    <title>Close Dock on Mac Forever</title>
    <link href="https://geekeast.github.io/closedockonmac.html"/>
    <id>https://geekeast.github.io/closedockonmac.html</id>
    <published>2019-10-15T00:24:19.000Z</published>
    <updated>2019-10-15T01:27:40.766Z</updated>
    
    <content type="html"><![CDATA[<h3 id="tools"><a class="markdownIt-Anchor" href="#tools"></a> Tools</h3><ul><li>Alfred</li><li>Context</li></ul><h3 id="modify-the-config-of-dock"><a class="markdownIt-Anchor" href="#modify-the-config-of-dock"></a> Modify the config of Dock</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.dock autohide-delay -int 0 &amp;&amp; killall Dock  <span class="comment">##（shortest）</span></span><br><span class="line">defaults write com.apple.dock autohide-delay -int 0.5 &amp;&amp; killall Dock  <span class="comment">##（0.5s）</span></span><br><span class="line">defaults write com.apple.dock autohide-delay -int 10  &amp;&amp; killall Dock  <span class="comment">##（10s）</span></span><br></pre></td></tr></table></figure><h2 id="-more-"><a class="markdownIt-Anchor" href="#-more-"></a> <a id="more"></a></h2>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;tools&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#tools&quot;&gt;&lt;/a&gt; Tools&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Alfred&lt;/li&gt;
&lt;li&gt;Context&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;modify-the-config-of-dock&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#modify-the-config-of-dock&quot;&gt;&lt;/a&gt; Modify the config of Dock&lt;/h3&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;defaults write com.apple.dock autohide-delay -int 0 &amp;amp;&amp;amp; killall Dock  &lt;span class=&quot;comment&quot;&gt;##（shortest）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;defaults write com.apple.dock autohide-delay -int 0.5 &amp;amp;&amp;amp; killall Dock  &lt;span class=&quot;comment&quot;&gt;##（0.5s）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;defaults write com.apple.dock autohide-delay -int 10  &amp;amp;&amp;amp; killall Dock  &lt;span class=&quot;comment&quot;&gt;##（10s）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;-more-&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#-more-&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="Mac" scheme="https://geekeast.github.io/categories/Mac/"/>
    
    
      <category term="Mac" scheme="https://geekeast.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>High-Rating Restaurant Search</title>
    <link href="https://geekeast.github.io/toys/searchfood.html"/>
    <id>https://geekeast.github.io/toys/searchfood.html</id>
    <published>2019-10-05T18:49:36.000Z</published>
    <updated>2019-10-06T15:48:14.131Z</updated>
    
    <content type="html"><![CDATA[<h2 id="project"><a class="markdownIt-Anchor" href="#project"></a> Project</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0dlZWtFYXN0L3NlYXJjaC1nb29kLWVhdA==" title="https://github.com/GeekEast/search-good-eat">Github<i class="fa fa-external-link"></i></span> <code>git clone git@github.com:GeekEast/search-good-eat.git</code></p><h2 id="description"><a class="markdownIt-Anchor" href="#description"></a> Description</h2><ul><li>Searching api for good restaurants by <code>latitude</code>, <code>longtitude</code>, and <code>radius</code>.</li><li>Bottomn line of google <code>ratings</code> and <code>number_of_reviews</code> is required.</li></ul><h2 id="warning"><a class="markdownIt-Anchor" href="#warning"></a> Warning</h2><ul><li>See the <span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL21hcHMtcGxhdGZvcm0vcHJpY2luZy9zaGVldC8=" title="https://cloud.google.com/maps-platform/pricing/sheet/">API pricing<i class="fa fa-external-link"></i></span> before happy hour with it.</li><li>Recommend to apply for a brand new <code>Google</code> account and use the <strong>free</strong> google cloud credit which’s worth <code>$300</code>.</li></ul><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><ul><li>Get <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vbWFwcy9kb2N1bWVudGF0aW9uL2phdmFzY3JpcHQvZ2V0LWFwaS1rZXk=" title="https://developers.google.com/maps/documentation/javascript/get-api-key">API Key<i class="fa fa-external-link"></i></span>: <code>export GOOGLE_MAP_API_KEY=&quot;{google_map_api_key}&quot;</code></li><li>Run code: <code>yarn &amp;&amp; yarn start</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// get restaurants information with constraints:</span></span><br><span class="line"><span class="comment">// a radius of 2000m arount place(lat:-34.928471, lng:138.593174)</span></span><br><span class="line"><span class="comment">// with ratings &gt;= 4.5 and number of reviews &gt;= 40</span></span><br><span class="line">main(<span class="string">"-34.928471"</span>, <span class="string">"138.593174"</span>, <span class="number">2000</span>, <span class="number">4.5</span>, <span class="number">40</span>); <span class="comment">// result saved in data/places.csv</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="issues"><a class="markdownIt-Anchor" href="#issues"></a> Issues:</h2><ul><li>The performance is low due the restriction of Google Places API;</li><li><strong>How to append object to array asynchronously?</strong>.</li><li>Latitude and Longtitude offset is a <code>estimate</code>.</li></ul><h2 id="div-idresultresult-for-adelaidediv"><a class="markdownIt-Anchor" href="#div-idresultresult-for-adelaidediv"></a> <div id="result">Result for Adelaide</div></h2><table><thead><tr><th>Name</th><th>Rating</th><th>Reviews</th><th>Address</th><th>Price Level</th><th>URL</th></tr></thead><tbody><tr><td>Dat Place - Wood Oven Restaurant Cocktail Lounge</td><td>5</td><td>40</td><td>279A Hindley St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMTExOTkyMzY1NTkxNTQyMjkwMg==" title="https://maps.google.com/?cid=11119923655915422902">https://maps.google.com/?cid=11119923655915422902<i class="fa fa-external-link"></i></span></td></tr><tr><td>MiMi</td><td>4.9</td><td>44</td><td>50 Sturt St, Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0zMzY4NDg4NDIwOTE5NzE5Mzkx" title="https://maps.google.com/?cid=3368488420919719391">https://maps.google.com/?cid=3368488420919719391<i class="fa fa-external-link"></i></span></td></tr><tr><td>Herringbone Restaurant</td><td>4.9</td><td>54</td><td>72-74 Halifax St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD02MzQ1ODgyMDI0MTQ1NDg3MzI1" title="https://maps.google.com/?cid=6345882024145487325">https://maps.google.com/?cid=6345882024145487325<i class="fa fa-external-link"></i></span></td></tr><tr><td>Koyeosa</td><td>4.9</td><td>70</td><td>449 Pulteney St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNzQ2NjQzMTQ4ODk3MjIxMjMyMA==" title="https://maps.google.com/?cid=17466431488972212320">https://maps.google.com/?cid=17466431488972212320<i class="fa fa-external-link"></i></span></td></tr><tr><td>Thea Tea Shop</td><td>4.8</td><td>177</td><td>110 Gawler Pl, Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD01NjY2MzAxNzY2MTM0NzA0NDQ2" title="https://maps.google.com/?cid=5666301766134704446">https://maps.google.com/?cid=5666301766134704446<i class="fa fa-external-link"></i></span></td></tr><tr><td>Laneway Espresso House</td><td>4.8</td><td>93</td><td>4/10 Ebenezer Pl, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xODM3NDA0MDY4NTQ3MjQ2MTUxNw==" title="https://maps.google.com/?cid=18374040685472461517">https://maps.google.com/?cid=18374040685472461517<i class="fa fa-external-link"></i></span></td></tr><tr><td>B’Churrasco Brazilian BBQ Restaurant Adelaide</td><td>4.8</td><td>204</td><td>12 East Terrace, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMzU3NTAzNDQzMTcyMzI3Mzc4Mw==" title="https://maps.google.com/?cid=13575034431723273783">https://maps.google.com/?cid=13575034431723273783<i class="fa fa-external-link"></i></span></td></tr><tr><td>Pan &amp; Vine</td><td>4.8</td><td>40</td><td>Shop 3/58 King William St, Kent Town SA 5067, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD02MjgzMTI5NjA0MzQ0NjEwNTI0" title="https://maps.google.com/?cid=6283129604344610524">https://maps.google.com/?cid=6283129604344610524<i class="fa fa-external-link"></i></span></td></tr><tr><td>Ben Hurs Charcoal Grill</td><td>4.8</td><td>45</td><td>53 O’Connell St, North Adelaide SA 5006, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD01NDI5ODYyNjU4NjM5MjI5NzMz" title="https://maps.google.com/?cid=5429862658639229733">https://maps.google.com/?cid=5429862658639229733<i class="fa fa-external-link"></i></span></td></tr><tr><td>PIXIE AND THE HAWK</td><td>4.8</td><td>205</td><td>144 Henley Beach Rd, Torrensville SA 5031, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNDMzOTcwNTExMTk4NTY5MzExMw==" title="https://maps.google.com/?cid=14339705111985693113">https://maps.google.com/?cid=14339705111985693113<i class="fa fa-external-link"></i></span></td></tr><tr><td>Roll In Saigon</td><td>4.8</td><td>82</td><td>126 Goodwood Rd, Goodwood SA 5034, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNDg4Nzc3NDA4OTI0Nzg5NTYwNA==" title="https://maps.google.com/?cid=14887774089247895604">https://maps.google.com/?cid=14887774089247895604<i class="fa fa-external-link"></i></span></td></tr><tr><td>Revoluci�n Mexicana ADL</td><td>4.7</td><td>105</td><td>Central Market Arcade, Shop 47/30 Gouger St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMDg3MjU3MzIxMDgzNzU4NjkwOA==" title="https://maps.google.com/?cid=10872573210837586908">https://maps.google.com/?cid=10872573210837586908<i class="fa fa-external-link"></i></span></td></tr><tr><td>Banh Mi - Vietnamese Rolls</td><td>4.7</td><td>51</td><td>Grenfell Plaza, 2/25 Grenfell St, Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNzExNjEyMDA1MjY0NTQ5MDYzNw==" title="https://maps.google.com/?cid=17116120052645490637">https://maps.google.com/?cid=17116120052645490637<i class="fa fa-external-link"></i></span></td></tr><tr><td>Naaz on Pulteney (Persian Restaurant)</td><td>4.7</td><td>56</td><td>260 Pulteney St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNTYyNzYzNzk1MjA0OTQxNTAyMA==" title="https://maps.google.com/?cid=15627637952049415020">https://maps.google.com/?cid=15627637952049415020<i class="fa fa-external-link"></i></span></td></tr><tr><td>Little Korea</td><td>4.7</td><td>65</td><td>61-65 Hyde St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNDM1OTkzNDA5NTkzNjQxMzM1Mg==" title="https://maps.google.com/?cid=14359934095936413352">https://maps.google.com/?cid=14359934095936413352<i class="fa fa-external-link"></i></span></td></tr><tr><td>The Messy Tomato</td><td>4.7</td><td>60</td><td>151 Flinders St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNDk0MzM4MDA4NDMzNjY5MDMyNA==" title="https://maps.google.com/?cid=14943380084336690324">https://maps.google.com/?cid=14943380084336690324<i class="fa fa-external-link"></i></span></td></tr><tr><td>Peel St</td><td>4.7</td><td>421</td><td>9 Peel St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD02MTczNTY2MzI3MTExMDQxMDY0" title="https://maps.google.com/?cid=6173566327111041064">https://maps.google.com/?cid=6173566327111041064<i class="fa fa-external-link"></i></span></td></tr><tr><td>Kutchi Deli Parwana</td><td>4.7</td><td>60</td><td>7 Ebenezer Pl, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0zMDU3MDg4NzAzMTQ4MDc5MjMw" title="https://maps.google.com/?cid=3057088703148079230">https://maps.google.com/?cid=3057088703148079230<i class="fa fa-external-link"></i></span></td></tr><tr><td>Vego and Loven It</td><td>4.7</td><td>92</td><td>240 Rundle St, Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD05NzIwMDAxMTU3MDYyMzM4ODI4" title="https://maps.google.com/?cid=9720001157062338828">https://maps.google.com/?cid=9720001157062338828<i class="fa fa-external-link"></i></span></td></tr><tr><td>The Lost Deli</td><td>4.7</td><td>130</td><td>38 Charles St, Norwood SA 5067, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNzA5MTk4NzU4NDIzNTg5MDcyMA==" title="https://maps.google.com/?cid=17091987584235890720">https://maps.google.com/?cid=17091987584235890720<i class="fa fa-external-link"></i></span></td></tr><tr><td>Yumi # Donburi - Modern Japanese cafe</td><td>4.7</td><td>45</td><td>231A Rundle St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNzc0ODMyMTY0NzExMTYwOTM0" title="https://maps.google.com/?cid=1774832164711160934">https://maps.google.com/?cid=1774832164711160934<i class="fa fa-external-link"></i></span></td></tr><tr><td>Little Bang Brewing Company</td><td>4.7</td><td>576</td><td>25 Henry St, Stepney SA 5069, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0zOTI0MjIwNTMwNjI5NjkyNjgz" title="https://maps.google.com/?cid=3924220530629692683">https://maps.google.com/?cid=3924220530629692683<i class="fa fa-external-link"></i></span></td></tr><tr><td>Marrakech Restaurant</td><td>4.7</td><td>335</td><td>91 O’Connell St, North Adelaide SA 5006, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMTkxNzgzNzczNTQ0NzUyOTI4Mw==" title="https://maps.google.com/?cid=11917837735447529283">https://maps.google.com/?cid=11917837735447529283<i class="fa fa-external-link"></i></span></td></tr><tr><td>Core 51</td><td>4.7</td><td>163</td><td>180/188 Grote St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD03MTQxNzMyOTgwNDgzOTU5MDI4" title="https://maps.google.com/?cid=7141732980483959028">https://maps.google.com/?cid=7141732980483959028<i class="fa fa-external-link"></i></span></td></tr><tr><td>African Village Centre Restaurant</td><td>4.7</td><td>134</td><td>2A Northcote St, Torrensville SA 5031, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD00Njc2NzcxMTUzNjg3MTQ5OQ==" title="https://maps.google.com/?cid=46767711536871499">https://maps.google.com/?cid=46767711536871499<i class="fa fa-external-link"></i></span></td></tr><tr><td>Cafe Outside The Square</td><td>4.7</td><td>87</td><td>34 Whitmore Square, Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNDA3ODYxNjYzMzMzNTc5MjI4NQ==" title="https://maps.google.com/?cid=14078616633335792285">https://maps.google.com/?cid=14078616633335792285<i class="fa fa-external-link"></i></span></td></tr><tr><td>Mr Panda Kitchen</td><td>4.7</td><td>49</td><td>61 Wright St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD04OTkwMDM1MjEwNDg4MDgxNzM1" title="https://maps.google.com/?cid=8990035210488081735">https://maps.google.com/?cid=8990035210488081735<i class="fa fa-external-link"></i></span></td></tr><tr><td>The Flying Trunk</td><td>4.7</td><td>60</td><td>70 King William Rd, Goodwood SA 5034, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMDc4MjkzMTQ3NzMzODA5MTQzMg==" title="https://maps.google.com/?cid=10782931477338091432">https://maps.google.com/?cid=10782931477338091432<i class="fa fa-external-link"></i></span></td></tr><tr><td>Pizza e Mozzarella Bar</td><td>4.6</td><td>240</td><td>33 Pirie St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD04NjIxMzU4NTI2NTk3NzExNzQ5" title="https://maps.google.com/?cid=8621358526597711749">https://maps.google.com/?cid=8621358526597711749<i class="fa fa-external-link"></i></span></td></tr><tr><td>Tan Coffee</td><td>4.6</td><td>40</td><td>Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xODMzNDQ4MzU0NTk0NjQ1NTA4Nw==" title="https://maps.google.com/?cid=18334483545946455087">https://maps.google.com/?cid=18334483545946455087<i class="fa fa-external-link"></i></span></td></tr><tr><td>Press* Food &amp; Wine</td><td>4.6</td><td>370</td><td>40 Waymouth St, Adelaide SA 5000, Australia</td><td>3</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD02ODEzNzk2ODkwMjUzMzg3Nzk1" title="https://maps.google.com/?cid=6813796890253387795">https://maps.google.com/?cid=6813796890253387795<i class="fa fa-external-link"></i></span></td></tr><tr><td>Borsa Pasta Cucina</td><td>4.6</td><td>254</td><td>1/25 Grenfell St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD01NDY5ODU1OTgwOTczMTQzOTY=" title="https://maps.google.com/?cid=546985598097314396">https://maps.google.com/?cid=546985598097314396<i class="fa fa-external-link"></i></span></td></tr><tr><td>Delicatessen Kitchen &amp; Bar</td><td>4.6</td><td>175</td><td>12 Waymouth St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0zNDg5MzE1ODQyNzg3NTA0NTIz" title="https://maps.google.com/?cid=3489315842787504523">https://maps.google.com/?cid=3489315842787504523<i class="fa fa-external-link"></i></span></td></tr><tr><td>Hey Bianca Pizza</td><td>4.6</td><td>77</td><td>254 Pulteney St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMjI3MzUxNjg5MDM5NjM4NTU3NA==" title="https://maps.google.com/?cid=12273516890396385574">https://maps.google.com/?cid=12273516890396385574<i class="fa fa-external-link"></i></span></td></tr><tr><td>Thai Ayo-Thaya Adelaide</td><td>4.6</td><td>53</td><td>94 Carrington St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMTkxMjAxMjQ5NDcwNjQ2MTQwMA==" title="https://maps.google.com/?cid=11912012494706461400">https://maps.google.com/?cid=11912012494706461400<i class="fa fa-external-link"></i></span></td></tr><tr><td>Osteria Oggi</td><td>4.6</td><td>562</td><td>76 Pirie St, Adelaide SA 5000, Australia</td><td>3</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD01NTE4NTIyOTc1NzU4MjM5NDc0" title="https://maps.google.com/?cid=5518522975758239474">https://maps.google.com/?cid=5518522975758239474<i class="fa fa-external-link"></i></span></td></tr><tr><td>Chianti</td><td>4.6</td><td>494</td><td>160 Hutt St, Adelaide SA 5000, Australia</td><td>3</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD01OTE0NDcwMzMwMjEwMDcyNDY=" title="https://maps.google.com/?cid=591447033021007246">https://maps.google.com/?cid=591447033021007246<i class="fa fa-external-link"></i></span></td></tr><tr><td>S2 on Flinders - Modern Thai</td><td>4.6</td><td>109</td><td>264 Flinders St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD04MzA3NDk4NTc0NzUxMzQ1OTQw" title="https://maps.google.com/?cid=8307498574751345940">https://maps.google.com/?cid=8307498574751345940<i class="fa fa-external-link"></i></span></td></tr><tr><td>Bai Long Store</td><td>4.6</td><td>264</td><td>80 Hutt St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNDMxMzc4MTIwMDkwNDM4MjQ0" title="https://maps.google.com/?cid=1431378120090438244">https://maps.google.com/?cid=1431378120090438244<i class="fa fa-external-link"></i></span></td></tr><tr><td>Coffylosophy</td><td>4.6</td><td>239</td><td>198A Hutt St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMzk0MTE0MjkxMDYwNzkyNTYyNQ==" title="https://maps.google.com/?cid=13941142910607925625">https://maps.google.com/?cid=13941142910607925625<i class="fa fa-external-link"></i></span></td></tr><tr><td>Apothecary 1878</td><td>4.6</td><td>215</td><td>118 Hindley St, Adelaide SA 5000, Australia</td><td>3</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0yNDI4OTg4ODg3MTQyMTAyNjQx" title="https://maps.google.com/?cid=2428988887142102641">https://maps.google.com/?cid=2428988887142102641<i class="fa fa-external-link"></i></span></td></tr><tr><td>Sunny’s Pizza</td><td>4.6</td><td>277</td><td>17 Solomon St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD04MzA3NjMyODM3NjMxMzEyMDY1" title="https://maps.google.com/?cid=8307632837631312065">https://maps.google.com/?cid=8307632837631312065<i class="fa fa-external-link"></i></span></td></tr><tr><td>Bread &amp; Bone</td><td>4.6</td><td>769</td><td>15 Peel St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNDAwNTMzNjU1MTExNjQ3NjYxNw==" title="https://maps.google.com/?cid=14005336551116476617">https://maps.google.com/?cid=14005336551116476617<i class="fa fa-external-link"></i></span></td></tr><tr><td>Udaberri Pintxos Y Vino</td><td>4.6</td><td>307</td><td>11-13 Leigh St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD01MjQzNDYwNzQ0MTA4OTQyMzYw" title="https://maps.google.com/?cid=5243460744108942360">https://maps.google.com/?cid=5243460744108942360<i class="fa fa-external-link"></i></span></td></tr><tr><td>Miss Mai, Gawler Place, Adelaide</td><td>4.6</td><td>132</td><td>73 Gawler Pl, Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMjMyODUzMDU1OTUyMjk0MTg5OA==" title="https://maps.google.com/?cid=12328530559522941898">https://maps.google.com/?cid=12328530559522941898<i class="fa fa-external-link"></i></span></td></tr><tr><td>BRKLYN</td><td>4.6</td><td>127</td><td>260-262 Rundle St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD03NjM3NDI0NDk4OTY5NjM4NDY3" title="https://maps.google.com/?cid=7637424498969638467">https://maps.google.com/?cid=7637424498969638467<i class="fa fa-external-link"></i></span></td></tr><tr><td>Golden Boy</td><td>4.6</td><td>459</td><td>309 North Terrace, Adelaide SA 5000, Australia</td><td>3</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNTY2OTUyODE5MDY0OTU5OTQ4OQ==" title="https://maps.google.com/?cid=15669528190649599489">https://maps.google.com/?cid=15669528190649599489<i class="fa fa-external-link"></i></span></td></tr><tr><td>Ayers House Weddings &amp; Events</td><td>4.6</td><td>104</td><td>288 North Terrace, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD04ODEyNTE0NDQ1ODUxOTk1OTYy" title="https://maps.google.com/?cid=8812514445851995962">https://maps.google.com/?cid=8812514445851995962<i class="fa fa-external-link"></i></span></td></tr><tr><td>El Cheeky Flamingo</td><td>4.6</td><td>94</td><td>40/33 Vardon Ave, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMjcwMDUzNzU4NDkwODk2NDMxMA==" title="https://maps.google.com/?cid=12700537584908964310">https://maps.google.com/?cid=12700537584908964310<i class="fa fa-external-link"></i></span></td></tr><tr><td>NOLA Craft Beer &amp; Whiskey</td><td>4.6</td><td>771</td><td>28 Vardon Ave, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMDk2OTIxMTA1MzA2MjE3ODA3" title="https://maps.google.com/?cid=1096921105306217807">https://maps.google.com/?cid=1096921105306217807<i class="fa fa-external-link"></i></span></td></tr><tr><td>The Playford Restaurant</td><td>4.6</td><td>46</td><td>120 North Terrace, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNTY4OTM4MjE0NjU1OTU4OTA3NQ==" title="https://maps.google.com/?cid=15689382146559589075">https://maps.google.com/?cid=15689382146559589075<i class="fa fa-external-link"></i></span></td></tr><tr><td>Coconut Estate Eatery</td><td>4.6</td><td>142</td><td>5/11 O’Connell St, North Adelaide SA 5006, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD05MjA3MTA2NDA2NzgyMzY2MDg=" title="https://maps.google.com/?cid=920710640678236608">https://maps.google.com/?cid=920710640678236608<i class="fa fa-external-link"></i></span></td></tr><tr><td>Zaep Tastes of Thailand</td><td>4.6</td><td>104</td><td>22 O’Connell St, North Adelaide SA 5006, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMDY4OTE0MTc3MjE1MjMwMDk1Mw==" title="https://maps.google.com/?cid=10689141772152300953">https://maps.google.com/?cid=10689141772152300953<i class="fa fa-external-link"></i></span></td></tr><tr><td>THE SPOT ON MELBOURNE</td><td>4.6</td><td>89</td><td>133 Melbourne St, North Adelaide SA 5006, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNjYzODA1NzMwODMxMTIzNDkyNg==" title="https://maps.google.com/?cid=16638057308311234926">https://maps.google.com/?cid=16638057308311234926<i class="fa fa-external-link"></i></span></td></tr><tr><td>Himalayan Kitchen</td><td>4.6</td><td>116</td><td>73 Melbourne St, North Adelaide SA 5006, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD00NTMxMTc2NzI4NzU5MzI2NzY3" title="https://maps.google.com/?cid=4531176728759326767">https://maps.google.com/?cid=4531176728759326767<i class="fa fa-external-link"></i></span></td></tr><tr><td>Yakitori Takumi</td><td>4.6</td><td>173</td><td>60/55 Melbourne St, North Adelaide SA 5006, Australia</td><td>3</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNTg1NDI2NjM1MzY4NTcxMDU5NA==" title="https://maps.google.com/?cid=15854266353685710594">https://maps.google.com/?cid=15854266353685710594<i class="fa fa-external-link"></i></span></td></tr><tr><td>Plate and a Half</td><td>4.6</td><td>56</td><td>6/34 Henley Beach Rd, Mile End SA 5031, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNzAxNjk4OTUwMDY4ODA2ODU5MQ==" title="https://maps.google.com/?cid=17016989500688068591">https://maps.google.com/?cid=17016989500688068591<i class="fa fa-external-link"></i></span></td></tr><tr><td>Parwana Afghan Kitchen</td><td>4.6</td><td>429</td><td>124B Henley Beach Rd, Torrensville SA 5031, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD00NzQ5NTQ0NjE1MTMzNzU5MDg1" title="https://maps.google.com/?cid=4749544615133759085">https://maps.google.com/?cid=4749544615133759085<i class="fa fa-external-link"></i></span></td></tr><tr><td>Francescos Osteria</td><td>4.6</td><td>85</td><td>146b Henley Beach Rd, Torrensville SA 5031, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNzUxMDkyODA0NzU2MDk5MTYxNw==" title="https://maps.google.com/?cid=17510928047560991617">https://maps.google.com/?cid=17510928047560991617<i class="fa fa-external-link"></i></span></td></tr><tr><td>Vietnam Village Restaurant</td><td>4.6</td><td>153</td><td>2 Smith St, Thebarton SA 5031, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNDUwMDM2ODUxODgyOTUxMzc3OA==" title="https://maps.google.com/?cid=14500368518829513778">https://maps.google.com/?cid=14500368518829513778<i class="fa fa-external-link"></i></span></td></tr><tr><td>Enzo’s Ristorante</td><td>4.6</td><td>432</td><td>46 Port Rd, Hindmarsh SA 5007, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0yODEwODg1NTcxOTYzMzIyNTY4" title="https://maps.google.com/?cid=2810885571963322568">https://maps.google.com/?cid=2810885571963322568<i class="fa fa-external-link"></i></span></td></tr><tr><td>New Local Eatery</td><td>4.6</td><td>92</td><td>120 Port Rd, Hindmarsh SA 5007, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD03MTA0MDkxNDY5NDE5MDIwNjA2" title="https://maps.google.com/?cid=7104091469419020606">https://maps.google.com/?cid=7104091469419020606<i class="fa fa-external-link"></i></span></td></tr><tr><td>Lantern by Nu</td><td>4.6</td><td>185</td><td>10 Selby St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNTM5NzcxMjg2MDcwMTk5Mzk5" title="https://maps.google.com/?cid=1539771286070199399">https://maps.google.com/?cid=1539771286070199399<i class="fa fa-external-link"></i></span></td></tr><tr><td>K-pub</td><td>4.6</td><td>126</td><td>167 Gouger St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD04MTM0MTkyMTM5ODQ3Mjk3NTQw" title="https://maps.google.com/?cid=8134192139847297540">https://maps.google.com/?cid=8134192139847297540<i class="fa fa-external-link"></i></span></td></tr><tr><td>Metro Oyster Bar</td><td>4.6</td><td>59</td><td>27 Field St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0yMDk3NjIxMDMzMTI5NjIzMTE3" title="https://maps.google.com/?cid=2097621033129623117">https://maps.google.com/?cid=2097621033129623117<i class="fa fa-external-link"></i></span></td></tr><tr><td>Sneaky Pickle</td><td>4.6</td><td>361</td><td>94 Goodwood Rd, Goodwood SA 5034, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMzY4MjIxNjYwODk4Nzk0ODU2NA==" title="https://maps.google.com/?cid=13682216608987948564">https://maps.google.com/?cid=13682216608987948564<i class="fa fa-external-link"></i></span></td></tr><tr><td>Candela Latin American Food</td><td>4.6</td><td>61</td><td>120 Goodwood Rd, Goodwood SA 5034, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNjk4NTAwMDIwMjM5ODgyMjAwMw==" title="https://maps.google.com/?cid=16985000202398822003">https://maps.google.com/?cid=16985000202398822003<i class="fa fa-external-link"></i></span></td></tr><tr><td>Mimasu</td><td>4.6</td><td>88</td><td>411 King William St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNDM1NzE0NTgzNjkyMDU1MTI3Nw==" title="https://maps.google.com/?cid=14357145836920551277">https://maps.google.com/?cid=14357145836920551277<i class="fa fa-external-link"></i></span></td></tr><tr><td>Nishiki cafe&amp; Izakaya</td><td>4.6</td><td>131</td><td>21 Sturt St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD03NTMzOTIwNjY4Nzk3MjMzNDUx" title="https://maps.google.com/?cid=7533920668797233451">https://maps.google.com/?cid=7533920668797233451<i class="fa fa-external-link"></i></span></td></tr><tr><td>La Tombola Italian Restaurant</td><td>4.6</td><td>252</td><td>61 Unley Rd, Parkside SA 5063, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD05NjU4NTQ5NzU5NTk5MzY3NA==" title="https://maps.google.com/?cid=96585497595993674">https://maps.google.com/?cid=96585497595993674<i class="fa fa-external-link"></i></span></td></tr><tr><td>Johnny’s Kitchen</td><td>4.6</td><td>62</td><td>56 Glen Osmond Rd, Parkside SA 5063, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNTAyMTE5NzQ1NjA0NzM2NjU0OQ==" title="https://maps.google.com/?cid=15021197456047366549">https://maps.google.com/?cid=15021197456047366549<i class="fa fa-external-link"></i></span></td></tr><tr><td>Fumo Restaurant</td><td>4.6</td><td>99</td><td>93a Glen Osmond Rd, Eastwood SA 5063, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD03Mzc5NTI3NTU0NjM2NTI4NzM1" title="https://maps.google.com/?cid=7379527554636528735">https://maps.google.com/?cid=7379527554636528735<i class="fa fa-external-link"></i></span></td></tr><tr><td>Raj on Taj Hyde Park</td><td>4.6</td><td>384</td><td>109 King William Rd, Unley SA 5061, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xOTAzNjY0MjY5OTUxMTU0MTE5" title="https://maps.google.com/?cid=1903664269951154119">https://maps.google.com/?cid=1903664269951154119<i class="fa fa-external-link"></i></span></td></tr><tr><td>Nu Thai Restaurant</td><td>4.5</td><td>237</td><td>228 Morphett St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMDY3ODM0OTA4MTIyMDUzNzQ1NQ==" title="https://maps.google.com/?cid=10678349081220537455">https://maps.google.com/?cid=10678349081220537455<i class="fa fa-external-link"></i></span></td></tr><tr><td>Concubine</td><td>4.5</td><td>338</td><td>132 Gouger St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMTcxMjcxNjI5MzAyNzE0OTU0NQ==" title="https://maps.google.com/?cid=11712716293027149545">https://maps.google.com/?cid=11712716293027149545<i class="fa fa-external-link"></i></span></td></tr><tr><td>Kin Thai</td><td>4.5</td><td>77</td><td>255 Waymouth St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD02MTg4MjY2MzE4Mjc1Nzg5OTIy" title="https://maps.google.com/?cid=6188266318275789922">https://maps.google.com/?cid=6188266318275789922<i class="fa fa-external-link"></i></span></td></tr><tr><td>Sushi Train</td><td>4.5</td><td>347</td><td>Central Market Arcade 34, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD00NzY5MTEyMjUyOTM2MDYxODk5" title="https://maps.google.com/?cid=4769112252936061899">https://maps.google.com/?cid=4769112252936061899<i class="fa fa-external-link"></i></span></td></tr><tr><td>Hong Kee Restaurant</td><td>4.5</td><td>165</td><td>216-218 Morphett St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD00ODE3MTM1MDA5Mzk4MTgxMTky" title="https://maps.google.com/?cid=4817135009398181192">https://maps.google.com/?cid=4817135009398181192<i class="fa fa-external-link"></i></span></td></tr><tr><td>Ban Ban (ADL)</td><td>4.5</td><td>192</td><td>145 Franklin St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMDM5ODc1NDczMTExMjg4NzU1OA==" title="https://maps.google.com/?cid=10398754731112887558">https://maps.google.com/?cid=10398754731112887558<i class="fa fa-external-link"></i></span></td></tr><tr><td>Georges on Waymouth</td><td>4.5</td><td>375</td><td>20 Waymouth St, Adelaide SA 5000, Australia</td><td>3</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMDU3MzQwNTY0NjIwMDYxMTk4Mw==" title="https://maps.google.com/?cid=10573405646200611983">https://maps.google.com/?cid=10573405646200611983<i class="fa fa-external-link"></i></span></td></tr><tr><td>Bakmi Lim Noodle Project</td><td>4.5</td><td>125</td><td>4/8 Waymouth St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNTk2NDAxNDM3NTk1NzI4NTQ1MA==" title="https://maps.google.com/?cid=15964014375957285450">https://maps.google.com/?cid=15964014375957285450<i class="fa fa-external-link"></i></span></td></tr><tr><td>Central Market Gourmet</td><td>4.5</td><td>49</td><td>Stall 71, Central Market Gouger St, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMzkzNjIzNzM3NDkyODMxMzQwNA==" title="https://maps.google.com/?cid=13936237374928313404">https://maps.google.com/?cid=13936237374928313404<i class="fa fa-external-link"></i></span></td></tr><tr><td>Hut &amp; Soul</td><td>4.5</td><td>178</td><td>310 Pulteney St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMDI1NjI1NzUxNTYxODY2MjU3Mg==" title="https://maps.google.com/?cid=10256257515618662572">https://maps.google.com/?cid=10256257515618662572<i class="fa fa-external-link"></i></span></td></tr><tr><td>Louca’s Seafood Restaurant</td><td>4.5</td><td>237</td><td>242 Pulteney St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMTg4NTg2NzU3MzIzODAwNjc0Nw==" title="https://maps.google.com/?cid=11885867573238006747">https://maps.google.com/?cid=11885867573238006747<i class="fa fa-external-link"></i></span></td></tr><tr><td>Est Ovest Osteria</td><td>4.5</td><td>175</td><td>shop 1/111 Angas St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD02NjU2NjMyMTU2MTI0MjM0NzY=" title="https://maps.google.com/?cid=665663215612423476">https://maps.google.com/?cid=665663215612423476<i class="fa fa-external-link"></i></span></td></tr><tr><td>Andre’s Cucina &amp; Polenta Bar</td><td>4.5</td><td>427</td><td>94 Frome St, Adelaide SA 5000, Australia</td><td>3</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNDgzNjQ3MjUyNzg2MzY3MzEwOQ==" title="https://maps.google.com/?cid=14836472527863673109">https://maps.google.com/?cid=14836472527863673109<i class="fa fa-external-link"></i></span></td></tr><tr><td>Prezzo Restaurant</td><td>4.5</td><td>89</td><td>173 Hutt St, Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD04NTQ0MDEwNzY0NDA0NzQyNDE1" title="https://maps.google.com/?cid=8544010764404742415">https://maps.google.com/?cid=8544010764404742415<i class="fa fa-external-link"></i></span></td></tr><tr><td>Hutt Street Chicken and Seafood</td><td>4.5</td><td>67</td><td>188 Hutt St, Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNDA4MzI1NDk2NjYwMTc0Mjc0OQ==" title="https://maps.google.com/?cid=14083254966601742749">https://maps.google.com/?cid=14083254966601742749<i class="fa fa-external-link"></i></span></td></tr><tr><td>Ballaboosta</td><td>4.5</td><td>493</td><td>289 Halifax St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0yODc1MjAwMzcyNTQxNDA2NzYw" title="https://maps.google.com/?cid=2875200372541406760">https://maps.google.com/?cid=2875200372541406760<i class="fa fa-external-link"></i></span></td></tr><tr><td>New India Restaurant</td><td>4.5</td><td>319</td><td>167 Hindley St, Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMDM1NDA3ODU3Mjk3MDkzNjgxMg==" title="https://maps.google.com/?cid=10354078572970936812">https://maps.google.com/?cid=10354078572970936812<i class="fa fa-external-link"></i></span></td></tr><tr><td>Shiki Japanese Restaurant</td><td>4.5</td><td>159</td><td>Upper Lobby, North Terrace, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNTY3OTI5NDQwMzIzNDQ0NDg3MA==" title="https://maps.google.com/?cid=15679294403234444870">https://maps.google.com/?cid=15679294403234444870<i class="fa fa-external-link"></i></span></td></tr><tr><td>Pondok Daun Restaurant</td><td>4.5</td><td>514</td><td>94 Currie St, Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD05MDIyNjEwNTU2OTY5MjgzOTkw" title="https://maps.google.com/?cid=9022610556969283990">https://maps.google.com/?cid=9022610556969283990<i class="fa fa-external-link"></i></span></td></tr><tr><td>La Rambla Tapas Bar</td><td>4.5</td><td>348</td><td>28 Peel St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMDUzMzMwNTMwOTU1MzQ5MzcyMQ==" title="https://maps.google.com/?cid=10533305309553493721">https://maps.google.com/?cid=10533305309553493721<i class="fa fa-external-link"></i></span></td></tr><tr><td>Kaffana</td><td>4.5</td><td>259</td><td>27 Gilbert Pl, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNjM3Mjc0MTM1ODYwMjE4NTU1MA==" title="https://maps.google.com/?cid=16372741358602185550">https://maps.google.com/?cid=16372741358602185550<i class="fa fa-external-link"></i></span></td></tr><tr><td>Zenhouse Tea Corner</td><td>4.5</td><td>93</td><td>17-19 Bent St, Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNTEzNDQyMjIyMjAxNTczOTg3NA==" title="https://maps.google.com/?cid=15134422222015739874">https://maps.google.com/?cid=15134422222015739874<i class="fa fa-external-link"></i></span></td></tr><tr><td>Two-Bit Villains</td><td>4.5</td><td>292</td><td>Adelaide Arcade, 150 Rundle Mall, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMTYxMTQyOTQzMzE0NTM2MTYzMQ==" title="https://maps.google.com/?cid=11611429433145361631">https://maps.google.com/?cid=11611429433145361631<i class="fa fa-external-link"></i></span></td></tr><tr><td>Munooshi Cafe</td><td>4.5</td><td>124</td><td>36 East Terrace, Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNTUxNzQ3ODA1MTE0NTA2NDQ4Mg==" title="https://maps.google.com/?cid=15517478051145064482">https://maps.google.com/?cid=15517478051145064482<i class="fa fa-external-link"></i></span></td></tr><tr><td>Africola</td><td>4.5</td><td>452</td><td>4 East Terrace, Adelaide SA 5000, Australia</td><td>3</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD03ODYzMjU3ODAyMjQ0NDYzNDkx" title="https://maps.google.com/?cid=7863257802244463491">https://maps.google.com/?cid=7863257802244463491<i class="fa fa-external-link"></i></span></td></tr><tr><td>EST Pizzeria</td><td>4.5</td><td>142</td><td>30 East Terrace, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD01MTY0ODc5MTY0Mzc5NTAxODk3" title="https://maps.google.com/?cid=5164879164379501897">https://maps.google.com/?cid=5164879164379501897<i class="fa fa-external-link"></i></span></td></tr><tr><td>Mother Vine</td><td>4.5</td><td>148</td><td>22-26 Vardon Ave, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNDQ5MDYzOTIxMzY1OTk4MzA1MA==" title="https://maps.google.com/?cid=14490639213659983050">https://maps.google.com/?cid=14490639213659983050<i class="fa fa-external-link"></i></span></td></tr><tr><td>Orana</td><td>4.5</td><td>175</td><td>1/285 Rundle St, Adelaide SA 5000, Australia</td><td>4</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0yNzc1MjM5MzQwNDA0MDMxODg1" title="https://maps.google.com/?cid=2775239340404031885">https://maps.google.com/?cid=2775239340404031885<i class="fa fa-external-link"></i></span></td></tr><tr><td>Zen Kitchen</td><td>4.5</td><td>45</td><td>Renaissance Arcade, Shop 7/136 Rundle Mall, Adelaide SA 5000, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD01MjE4MTk3NjI3NDM5ODIyNjI2" title="https://maps.google.com/?cid=5218197627439822626">https://maps.google.com/?cid=5218197627439822626<i class="fa fa-external-link"></i></span></td></tr><tr><td>Thai by 3 Monkeys</td><td>4.5</td><td>181</td><td>33 O’Connell St, Adelaide N SA 5006, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD03NjQ1ODU2NDY3MTEyMTE0NzEw" title="https://maps.google.com/?cid=7645856467112114710">https://maps.google.com/?cid=7645856467112114710<i class="fa fa-external-link"></i></span></td></tr><tr><td>CLICH� EXHIBITION</td><td>4.5</td><td>311</td><td>26 O’Connell St, North Adelaide SA 5006, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD01OTYzNDYzNDI0MzQ0MTM3MTA=" title="https://maps.google.com/?cid=596346342434413710">https://maps.google.com/?cid=596346342434413710<i class="fa fa-external-link"></i></span></td></tr><tr><td>Zambrero North Adelaide</td><td>4.5</td><td>193</td><td>32 O’Connell St, North Adelaide SA 5006, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMDU1MzA5ODM5MjQyNDI3MzM5MA==" title="https://maps.google.com/?cid=10553098392424273390">https://maps.google.com/?cid=10553098392424273390<i class="fa fa-external-link"></i></span></td></tr><tr><td>Gin Long Canteen</td><td>4.5</td><td>323</td><td>42 O’Connell St, North Adelaide SA 5006, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMTczNDA0MDQyNjUyMzA2ODk1Ng==" title="https://maps.google.com/?cid=11734040426523068956">https://maps.google.com/?cid=11734040426523068956<i class="fa fa-external-link"></i></span></td></tr><tr><td>Blue and White Cafe</td><td>4.5</td><td>174</td><td>43 O’Connell St, North Adelaide SA 5006, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNDQzMjA5NTIwMzMzNjUwNDMxMg==" title="https://maps.google.com/?cid=14432095203336504312">https://maps.google.com/?cid=14432095203336504312<i class="fa fa-external-link"></i></span></td></tr><tr><td>Mazaya Restaurant &amp; Cafe</td><td>4.5</td><td>45</td><td>98 Melbourne St, North Adelaide SA 5006, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD03MDc2MDc2NTM3MzEzMjExNDY=" title="https://maps.google.com/?cid=707607653731321146">https://maps.google.com/?cid=707607653731321146<i class="fa fa-external-link"></i></span></td></tr><tr><td>Napoli Wood Fired Pizzeria</td><td>4.5</td><td>180</td><td>2/127 Henley Beach Rd, Mile End SA 5031, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMjkwNDY5NTQ2MTU5ODMzNDQ5NQ==" title="https://maps.google.com/?cid=12904695461598334495">https://maps.google.com/?cid=12904695461598334495<i class="fa fa-external-link"></i></span></td></tr><tr><td>The Gov</td><td>4.5</td><td>1168</td><td>59 Port Rd, Hindmarsh SA 5007, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD03NDkzNzEyNTY5OTgxMjQyMjY2" title="https://maps.google.com/?cid=7493712569981242266">https://maps.google.com/?cid=7493712569981242266<i class="fa fa-external-link"></i></span></td></tr><tr><td>Taste of Bollywood</td><td>4.5</td><td>108</td><td>130 Port Rd, Hindmarsh SA 5007, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD04NTU1NTAwMjA5ODc2NTc2MDEz" title="https://maps.google.com/?cid=8555500209876576013">https://maps.google.com/?cid=8555500209876576013<i class="fa fa-external-link"></i></span></td></tr><tr><td>Vietnamese Laundry</td><td>4.5</td><td>130</td><td>152 Sturt St, Adelaide SA 5000, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD00NzM3NTU1Nzc0NDU1MjMwOTc4" title="https://maps.google.com/?cid=4737555774455230978">https://maps.google.com/?cid=4737555774455230978<i class="fa fa-external-link"></i></span></td></tr><tr><td>Sylvia’s Deli</td><td>4.5</td><td>61</td><td>48 Everard Ave, Keswick SA 5035, Australia</td><td>1</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0yMjc4MDY2NjYyODY4ODI2MTc=" title="https://maps.google.com/?cid=227806666286882617">https://maps.google.com/?cid=227806666286882617<i class="fa fa-external-link"></i></span></td></tr><tr><td>Adelaide Farmers’ Market</td><td>4.5</td><td>696</td><td>Leader St, Wayville SA 5034, Australia</td><td></td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xNTE2MzYwMjQ0MjgyODc0Nzc2NQ==" title="https://maps.google.com/?cid=15163602442828747765">https://maps.google.com/?cid=15163602442828747765<i class="fa fa-external-link"></i></span></td></tr><tr><td>Kin Kin Thai Eatery</td><td>4.5</td><td>102</td><td>4/242 Hutt St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD0xMzU3Nzk0MTU2NDk3ODcxOTI2OA==" title="https://maps.google.com/?cid=13577941564978719268">https://maps.google.com/?cid=13577941564978719268<i class="fa fa-external-link"></i></span></td></tr><tr><td>NAGOMI Japanese Kitchen</td><td>4.5</td><td>77</td><td>Shop5/242 Hutt St, Adelaide SA 5000, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD05Nzc1MzcwMTAzNDg2NDQxNTcy" title="https://maps.google.com/?cid=9775370103486441572">https://maps.google.com/?cid=9775370103486441572<i class="fa fa-external-link"></i></span></td></tr><tr><td>Pickle in the Middle - Unley Cafe</td><td>4.5</td><td>209</td><td>134 Unley Rd, Unley SA 5061, Australia</td><td>2</td><td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vP2NpZD00NzkzNDI1OTM5MTAzMDAzMDk2" title="https://maps.google.com/?cid=4793425939103003096">https://maps.google.com/?cid=4793425939103003096<i class="fa fa-external-link"></i></span></td></tr></tbody></table><h2 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h2><p><span class="exturl" data-url="aHR0cHM6Ly9weXRob24uZ290cmFpbmVkLmNvbS9nb29nbGUtcGxhY2VzLWFwaS1leHRyYWN0aW5nLWxvY2F0aW9uLWRhdGEtcmV2aWV3cy8=" title="https://python.gotrained.com/google-places-api-extracting-location-data-reviews/">3rd Party Tutorial<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2VvZGF0YXNvdXJjZS5jb20vZGlzdGFuY2UtY2FsY3VsYXRvcg==" title="https://www.geodatasource.com/distance-calculator">Distance Calculator<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vcGxhY2VzL3dlYi1zZXJ2aWNlL3N1cHBvcnRlZF90eXBlcw==" title="https://developers.google.com/places/web-service/supported_types">Places Types<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL21hcHMtcGxhdGZvcm0vcHJpY2luZy9zaGVldC8=" title="https://cloud.google.com/maps-platform/pricing/sheet/">Places Pricing<i class="fa fa-external-link"></i></span></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;project&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#project&quot;&gt;&lt;/a&gt; Project&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/GeekEast/search-good-eat&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github&lt;/a&gt; &lt;code&gt;git clone git@github.com:GeekEast/search-good-eat.git&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;description&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#description&quot;&gt;&lt;/a&gt; Description&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Searching api for good restaurants by &lt;code&gt;latitude&lt;/code&gt;, &lt;code&gt;longtitude&lt;/code&gt;, and &lt;code&gt;radius&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Bottomn line of google &lt;code&gt;ratings&lt;/code&gt; and &lt;code&gt;number_of_reviews&lt;/code&gt; is required.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;warning&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#warning&quot;&gt;&lt;/a&gt; Warning&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;See the &lt;a href=&quot;https://cloud.google.com/maps-platform/pricing/sheet/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;API pricing&lt;/a&gt; before happy hour with it.&lt;/li&gt;
&lt;li&gt;Recommend to apply for a brand new &lt;code&gt;Google&lt;/code&gt; account and use the &lt;strong&gt;free&lt;/strong&gt; google cloud credit which’s worth &lt;code&gt;$300&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;quick-start&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#quick-start&quot;&gt;&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Get &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/get-api-key&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;API Key&lt;/a&gt;: &lt;code&gt;export GOOGLE_MAP_API_KEY=&amp;quot;{google_map_api_key}&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run code: &lt;code&gt;yarn &amp;amp;&amp;amp; yarn start&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// get restaurants information with constraints:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// a radius of 2000m arount place(lat:-34.928471, lng:138.593174)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// with ratings &amp;gt;= 4.5 and number of reviews &amp;gt;= 40&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;main(&lt;span class=&quot;string&quot;&gt;&quot;-34.928471&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;138.593174&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// result saved in data/places.csv&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="API" scheme="https://geekeast.github.io/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>Java OOP</title>
    <link href="https://geekeast.github.io/javaoop.html"/>
    <id>https://geekeast.github.io/javaoop.html</id>
    <published>2019-09-27T07:56:04.000Z</published>
    <updated>2019-09-27T07:56:33.339Z</updated>
    
    <content type="html"><![CDATA[<h3 id="why"><a class="markdownIt-Anchor" href="#why"></a> Why</h3><ul><li>why we need oop?</li><li>what is oop?</li><li>oop is object</li><li>what is object? toy block!</li><li>why we need object? building large things</li><li>why not just build it? because we want to reuse these blocks in the future</li></ul><p>Conclusion: Object is used to build for more than once and one kind, and one thing.</p><h3 id="object"><a class="markdownIt-Anchor" href="#object"></a> Object</h3><ul><li>granule, atom, cell</li><li>not the object in java, we simple rename it as atom.</li><li>what is the granule in java?</li><li>enum, variable, function, class, interface</li></ul><h3 id="how-to-reuse-code"><a class="markdownIt-Anchor" href="#how-to-reuse-code"></a> How to reuse code?</h3><ul><li>example: enum -&gt; variable; make things changable.</li><li>but change what? kind? value? template?</li></ul><h3 id="enum"><a class="markdownIt-Anchor" href="#enum"></a> ENUM</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">  <span class="keyword">enum</span> Level &#123;</span><br><span class="line">    LOW,</span><br><span class="line">    MEDIUM,</span><br><span class="line">    HIGH</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Level myVar = Level.MEDIUM; </span><br><span class="line">    System.out.println(myVar);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="variable"><a class="markdownIt-Anchor" href="#variable"></a> Variable</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> myNum = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">float</span> myFloatNum = <span class="number">5.99f</span>;</span><br><span class="line"><span class="keyword">char</span> myLetter = <span class="string">'D'</span>;</span><br><span class="line"><span class="keyword">boolean</span> myBool = <span class="keyword">true</span>;</span><br><span class="line">String myText = <span class="string">"Hello"</span>;</span><br></pre></td></tr></table></figure><h3 id="function"><a class="markdownIt-Anchor" href="#function"></a> Function</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">myMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// code to be executed</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="class"><a class="markdownIt-Anchor" href="#class"></a> Class</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Class Declaration </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span></span><br><span class="line"><span class="class"></span>&#123; </span><br><span class="line"><span class="comment">// Instance Variables </span></span><br><span class="line">String name; </span><br><span class="line">String breed; </span><br><span class="line"><span class="keyword">int</span> age; </span><br><span class="line">String color; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Constructor Declaration of Class </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Dog</span><span class="params">(String name, String breed, </span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> age, String color)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">this</span>.name = name; </span><br><span class="line"><span class="keyword">this</span>.breed = breed; </span><br><span class="line"><span class="keyword">this</span>.age = age; </span><br><span class="line"><span class="keyword">this</span>.color = color; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// method 1 </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">return</span> name; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// method 2 </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getBreed</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">return</span> breed; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// method 3 </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">return</span> age; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// method 4 </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getColor</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">return</span> color; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">return</span>(<span class="string">"Hi my name is "</span>+ <span class="keyword">this</span>.getName()+ </span><br><span class="line"><span class="string">".\nMy breed,age and color are "</span> + </span><br><span class="line"><span class="keyword">this</span>.getBreed()+<span class="string">","</span> + <span class="keyword">this</span>.getAge()+ </span><br><span class="line"><span class="string">","</span>+ <span class="keyword">this</span>.getColor()); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">Dog tuffy = <span class="keyword">new</span> Dog(<span class="string">"tuffy"</span>,<span class="string">"papillon"</span>, <span class="number">5</span>, <span class="string">"white"</span>); </span><br><span class="line">System.out.println(tuffy.toString()); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="interface"><a class="markdownIt-Anchor" href="#interface"></a> Interface</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* File name : Animal.java */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">travel</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="abstract-class"><a class="markdownIt-Anchor" href="#abstract-class"></a> Abstract Class</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">(Food food)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// do something with food....</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">(<span class="keyword">int</span> hours)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 1000 milliseconds * 60 seconds * 60 minutes * hours</span></span><br><span class="line">Thread.sleep ( <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * hours);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (InterruptedException ie) &#123; <span class="comment">/* ignore */</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">makeNoise</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;why&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#why&quot;&gt;&lt;/a&gt; Why&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;why we need oop?&lt;/li&gt;
&lt;li&gt;what is oop?&lt;/li&gt;
&lt;li&gt;oop is object&lt;/
      
    
    </summary>
    
      <category term="TA" scheme="https://geekeast.github.io/categories/TA/"/>
    
    
      <category term="Java" scheme="https://geekeast.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Biology &amp; SOLID</title>
    <link href="https://geekeast.github.io/solidprinciple.html"/>
    <id>https://geekeast.github.io/solidprinciple.html</id>
    <published>2019-09-25T02:32:35.000Z</published>
    <updated>2019-09-25T05:36:23.551Z</updated>
    
    <content type="html"><![CDATA[<h2 id="biology"><a class="markdownIt-Anchor" href="#biology"></a> Biology</h2><h3 id="cell-core"><a class="markdownIt-Anchor" href="#cell-core"></a> Cell Core</h3><ul><li>Anything that is <strong>not</strong> passed from outside</li><li>Include:<ul><li>Outside: <span style="color: red; font-weight: bold">Strong Coupling<span></span></span></li><li>Self: should be simple, <span id="s" style="color: #0288D2; font-weight: bold">only for one purpose</span>.</li></ul></li></ul><h3 id="span-ido-stylecolor-0288d2-font-weight-boldcell-wallspan"><a class="markdownIt-Anchor" href="#span-ido-stylecolor-0288d2-font-weight-boldcell-wallspan"></a> <span id="o" style="color: #0288D2; font-weight: bold">Cell Wall</span></h3><ul><li>Anything that is passed from outside<ul><li>Level 1. <code>primitive</code>: <code>only</code> one type</li><li>Level 2. <code>function</code>: <code>only</code> one type</li><li>Level 3. <code>class</code>: any class <strong>extends</strong> that class(<span id="l" style="color: #0288D2; font-weight: bold">add new parent sometimes</span>)</li><li>Level 4. <code>interface</code>: any class <strong>implements</strong> that interface(<span id="i" style="color: #0288D2; font-weight: bold">slim</span>)</li><li>Level 5. <code>generics</code>: any type <strong>extends</strong> something (extends = implement)</li></ul></li></ul><h3 id="span-idd-stylecolor-0288d2-font-weight-bolddecouplingspan"><a class="markdownIt-Anchor" href="#span-idd-stylecolor-0288d2-font-weight-bolddecouplingspan"></a> <span id="d" style="color: #0288D2; font-weight: bold">Decoupling</span></h3><ul><li>Move <strong>Outside</strong> things in Cell <code>Core</code> to Cell <code>Wall</code>.</li><li>Make <strong>reference</strong> of things in Cell more <code>abstract</code>.</li></ul><a id="more"></a><h2 id="solid"><a class="markdownIt-Anchor" href="#solid"></a> SOLID</h2><h3 id="a-hrefssingle-responsibilitya"><a class="markdownIt-Anchor" href="#a-hrefssingle-responsibilitya"></a> <a href="#s">Single Responsibility</a></h3><ul><li>The <code>core</code> of a <strong>cell</strong> should be <code>pure</code>, <code>simple</code> and <code>only</code> for <code>one</code> purpose.</li></ul><h3 id="a-hrefoopenclosea"><a class="markdownIt-Anchor" href="#a-hrefoopenclosea"></a> <a href="#o">Open/Close</a></h3><ul><li>Don’t have to modify <code>core</code> in order to <strong>link</strong> to other cells.</li></ul><h3 id="a-hreflliskv-substitutiona"><a class="markdownIt-Anchor" href="#a-hreflliskv-substitutiona"></a> <a href="#l">Liskv Substitution</a></h3><ul><li>Clothes for <code>children</code> should also be suitable for <code>parents</code>.</li><li>Solution: make <code>new parents</code> between <code>old parents</code> and the <code>child</code>.</li></ul><h3 id="a-hrefiinterface-segregationa"><a class="markdownIt-Anchor" href="#a-hrefiinterface-segregationa"></a> <a href="#i">Interface Segregation</a></h3><ul><li><code>Enough</code> but <strong>not more</strong> things in <code>Interface</code> for it to be implemented in <code>class</code>.</li></ul><h3 id="a-hrefddependency-inversiona"><a class="markdownIt-Anchor" href="#a-hrefddependency-inversiona"></a> <a href="#d">Dependency Inversion</a></h3><ul><li>Cell Wall should use <code>Interface</code>, not <code>class</code>.</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;biology&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#biology&quot;&gt;&lt;/a&gt; Biology&lt;/h2&gt;
&lt;h3 id=&quot;cell-core&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#cell-core&quot;&gt;&lt;/a&gt; Cell Core&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Anything that is &lt;strong&gt;not&lt;/strong&gt; passed from outside&lt;/li&gt;
&lt;li&gt;Include:
&lt;ul&gt;
&lt;li&gt;Outside: &lt;span style=&quot;color: red; font-weight: bold&quot;&gt;Strong Coupling&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Self: should be simple, &lt;span id=&quot;s&quot; style=&quot;color: #0288D2; font-weight: bold&quot;&gt;only for one purpose&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;span-ido-stylecolor-0288d2-font-weight-boldcell-wallspan&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#span-ido-stylecolor-0288d2-font-weight-boldcell-wallspan&quot;&gt;&lt;/a&gt; &lt;span id=&quot;o&quot; style=&quot;color: #0288D2; font-weight: bold&quot;&gt;Cell Wall&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Anything that is passed from outside
&lt;ul&gt;
&lt;li&gt;Level 1. &lt;code&gt;primitive&lt;/code&gt;: &lt;code&gt;only&lt;/code&gt; one type&lt;/li&gt;
&lt;li&gt;Level 2. &lt;code&gt;function&lt;/code&gt;: &lt;code&gt;only&lt;/code&gt; one type&lt;/li&gt;
&lt;li&gt;Level 3. &lt;code&gt;class&lt;/code&gt;: any class &lt;strong&gt;extends&lt;/strong&gt; that class(&lt;span id=&quot;l&quot; style=&quot;color: #0288D2; font-weight: bold&quot;&gt;add new parent sometimes&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;Level 4. &lt;code&gt;interface&lt;/code&gt;: any class &lt;strong&gt;implements&lt;/strong&gt; that interface(&lt;span id=&quot;i&quot; style=&quot;color: #0288D2; font-weight: bold&quot;&gt;slim&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;Level 5. &lt;code&gt;generics&lt;/code&gt;: any type &lt;strong&gt;extends&lt;/strong&gt; something (extends = implement)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;span-idd-stylecolor-0288d2-font-weight-bolddecouplingspan&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#span-idd-stylecolor-0288d2-font-weight-bolddecouplingspan&quot;&gt;&lt;/a&gt; &lt;span id=&quot;d&quot; style=&quot;color: #0288D2; font-weight: bold&quot;&gt;Decoupling&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Move &lt;strong&gt;Outside&lt;/strong&gt; things in Cell &lt;code&gt;Core&lt;/code&gt; to Cell &lt;code&gt;Wall&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Make &lt;strong&gt;reference&lt;/strong&gt; of things in Cell more &lt;code&gt;abstract&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Object-Oriented Design" scheme="https://geekeast.github.io/categories/Object-Oriented-Design/"/>
    
    
      <category term="OOP" scheme="https://geekeast.github.io/tags/OOP/"/>
    
  </entry>
  
</feed>
