<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雪中印</title>
  
  <subtitle>心底清静方为道 退步原来是向前</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://geekeast.github.io/"/>
  <updated>2019-09-26T13:40:29.238Z</updated>
  <id>https://geekeast.github.io/</id>
  
  <author>
    <name>James Tan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Assignment 2</title>
    <link href="https://geekeast.github.io/chenluj.html"/>
    <id>https://geekeast.github.io/chenluj.html</id>
    <published>2019-09-26T13:40:12.000Z</published>
    <updated>2019-09-26T13:40:29.238Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please Enter Token Here">    <label for="pass">Please Enter Token Here</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Encrypted Post. Please Enter Token.
    
    </summary>
    
      <category term="TA" scheme="https://geekeast.github.io/categories/TA/"/>
    
    
      <category term="Java" scheme="https://geekeast.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Assignment 2</title>
    <link href="https://geekeast.github.io/jiruh.html"/>
    <id>https://geekeast.github.io/jiruh.html</id>
    <published>2019-09-26T13:30:41.000Z</published>
    <updated>2019-09-26T13:31:05.494Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please Enter Token Here">    <label for="pass">Please Enter Token Here</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+4jGd4TGWJcxoQvBTYaCDPS2qnKE1fiLUmrINCtxM4VKzEAwOg/X1soDAeqSGKmdTgRAjipVaGG2NV3CWDk+cnbbstO7ckeGRa9srTqaXesOv9pbhLCLnsk3e1gpVk0yFVLaL9DDPylc6+0KH/aQI0aDdhDR98JmuLrfbsAxR8vxQQm+/hgYyf/Qw8mPti/5kh70jgdlSED/gEQtBfaq81NJDGiOdQxkp+hjUxKi1ZhSACjfcORXm93Ui/6b0dEilbCM8yLdfRO/bsJnKmHjAV9ksFsAbcQSLO6jM+7Q512f2sqLQCKn+3LPZ/R5seB39f2hzigF1mv92A0t9iA6rWUrSymkg6Z55UWooVvER8OiJ3YDCE8orgxhB5sDzXIplmZ9iivSpmKrtY830deWm9IcrXt5Vume+dv4lOzQU3CeyMAwd1/IkCmYKqs/QKIHUiczaEZxbgaK2SoNnbOJlyrk6FxRBPMXeNxGLChSV88clKGDHrE1f5410dJ/R7OLJuc+mNSFkvJaWrmK3Wf8Usk8GHY7/3OEsoECNHy/IZbKbZJKVj1jbZ15/oVVht1DZhwTbkTF8pDalVMljZ7TGro0jUV+VB081/LNfPFgEuskP0FIiRq2IA7Li7WEv2em6E1iUocBSWE5mP/n+tfAuQdvu7JR644l4Su6gekqaJok34zceGNltxvBUZ7I2AcfEtFQoS3PzOgQAiCV7PQfxgLg2OPk6mGud65MU63HNV16RTg4RPJdvQ4/YO7m77qTVbeP7s7dwAei0S5H2vzerb0aAmTH+F7Ot0avHwCZllH+PFyEprHIscygynGIMEs3N/8ThSe+LY8fOQ6hW3XS8CaIzqehxhV9o++H9YS5FiNIk1BgvnCTY6OnSyQ6Jpt9EbPgehFwQhUQjZUBaiFx+WqKu6vSeVW3j8IZZXg1Rc7VH1eREt74PfqLDk6CAuFlhmlI3hjzQJ7d1OYOJEe/asCVQWCfLG3fBsNTgPBcI4me2LI95J/Ay8N73mW8LEHRdJ7BiooPyhkssBEg0dKm+n4FxGNSZ261J2j/tTl1M3p8b2w8rS5TPV0nlQEyePLDH7+oegv86qzuRO+63yk+JVu2qvgi3KA7YYZkQhAhOaEiSqGjDKGFxaCZKkSZCj+UCPEyO/0a7ZVxsLy/7PIhQKXRBk62oYG6VvfyJbQVukZ4MZwjp515EVSraYtvUAy901+LqymtdEtMAdFZ6jXXbqeZQ8GKTa4C9hKuTbkttCEZchFcIG9RUoURSe4eK8SLvbiPjIF39LM1QRBoLYxvi2qenVzB2I7AHLwecpjuVgtiNw1YvrKAleWcn1+rJD4i15gnJdJ8PvzM0ofIpyPxkV2yaWJdbqxKiAsBsPikRyxPwWKu+cQq+ZXAucBoKr3vVEr/Muqm7bSHzbQO0+DSPRKsZ4Y960aK+M+JS2iJLPFnq2x9mCBKAr69f3zmNN+rsmni6LLLkAfRgqcXB6rzlw8nSPpC0kfZEvnFLMFwbcHFCTe8G8Qu2R2ysbR7RR84LTwE2wjk1IyhtqPeJPOBNa1CpzUu05CEAkEArrK55hiIW8isdJFcIbM1dHwHPREuFvoVHB0oRHmVISJ9zd41laEgLOUu/rTBxgkDDFds2Lsbquln2BfXVyjh7PR9Cl2mA0hE9ZnU1hAIw/bxkD39p2P3PnLrS+6qm/0Bwd+/Qnz09ywTU759pivshNOFbsKnQAljTzb3cPTTv+LR6Xdbt/ECi8MH4561BdRS+lAk7v8SlIF8w6qjYGadoCEZmDa3a0NLky9g30r1fAclQVliWF3QLz/TTsaUa0UzcRR1iOcOeLpnVSqVTpFnAREW2nBj6Y61wkG1QD28m2qGmVXHtkW315TciuxEnZoOe1vEHRgNV/dy5bYxaJca2U3CL2X/UcI0yUqjAxIrNFVzdSGR3xELIOpsEoWmeBslIBbQkyK0fYv7W+l5bZnmulDyUNhSROzerCVj0LvGTKqlB450JaIA+ravE1YCg5VX26VTvCJbl2dl6mvWA7RJylW2/ZnlNKLgvD0dI6hRSFe2bbWo66/b05KKZ7Jb67SzJPy8HEeeK+RZeYOY2A9oa8sc6l4rC9S0SAFKuO+c0hle6JuZ/I7BL+afI6W7N3B0bVZajbGsOMcdXgEPdgUKeTsu6IGQqqvV4ZxgiwlnUmJgDmkFj670NAmbvgpiTHvzjj0R1iPG+I66Bk0jg9p0XDBffwjNOxZ4cpzQopUNYbXOrPl+owusMbVAvYoeeiBBeIWLslTv1RRhV7jHdvNd3fhyDVANyDYsBuA5dLwXhCAi/PTDdA2j7BTdP5w3kkLg1NcsIBtftwU6pC9QfLrsqUiq+shto2YvgP+IG9umA/MIdp5otI9XaTHCAlt+14apCfYf7M4VUc7ZMqjDyT1fPC4XjXRI2xG53S/hurfAEABx5ppWE5ZWN2zKX5VI7MygAYoVO3AhTvAPtO36wvm6EFQTp4tKwtx7beLN2UMg0tS89RzKqYsJKrJEuJK2Z5l7Ng1N/7NhcEbi9XCil4IwBiFvr4VnsOgN08++/ZHhwjRXe52i/I/Q3W6F2zPLLvONOOJE9Mwgc196zb69K1</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Encrypted Post. Please Enter Token.
    
    </summary>
    
      <category term="TA" scheme="https://geekeast.github.io/categories/TA/"/>
    
    
      <category term="Java" scheme="https://geekeast.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Assignment 2</title>
    <link href="https://geekeast.github.io/petrag.html"/>
    <id>https://geekeast.github.io/petrag.html</id>
    <published>2019-09-26T13:02:49.000Z</published>
    <updated>2019-09-26T13:03:20.553Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please Enter Token Here">    <label for="pass">Please Enter Token Here</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Encrypted Post. Please Enter Token.
    
    </summary>
    
      <category term="TA" scheme="https://geekeast.github.io/categories/TA/"/>
    
    
      <category term="Java" scheme="https://geekeast.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Assignment 2</title>
    <link href="https://geekeast.github.io/tfunahas.html"/>
    <id>https://geekeast.github.io/tfunahas.html</id>
    <published>2019-09-26T12:56:37.000Z</published>
    <updated>2019-09-26T12:57:52.336Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please Enter Token Here">    <label for="pass">Please Enter Token Here</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Encrypted Post. Please Enter Token.
    
    </summary>
    
      <category term="TA" scheme="https://geekeast.github.io/categories/TA/"/>
    
    
      <category term="Java" scheme="https://geekeast.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Assignment 2</title>
    <link href="https://geekeast.github.io/Pafranci.html"/>
    <id>https://geekeast.github.io/Pafranci.html</id>
    <published>2019-09-26T12:37:28.000Z</published>
    <updated>2019-09-26T13:11:06.861Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please Enter Token Here">    <label for="pass">Please Enter Token Here</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Encrypted Post. Please Enter Token.
    
    </summary>
    
      <category term="TA" scheme="https://geekeast.github.io/categories/TA/"/>
    
    
      <category term="Java" scheme="https://geekeast.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Assignment 2</title>
    <link href="https://geekeast.github.io/Kechengc.html"/>
    <id>https://geekeast.github.io/Kechengc.html</id>
    <published>2019-09-26T11:36:57.000Z</published>
    <updated>2019-09-26T12:21:04.567Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please Enter Token Here">    <label for="pass">Please Enter Token Here</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Encrypted Post. Please Enter Token.
    
    </summary>
    
      <category term="TA" scheme="https://geekeast.github.io/categories/TA/"/>
    
    
      <category term="Java" scheme="https://geekeast.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Biology &amp; SOLID</title>
    <link href="https://geekeast.github.io/solidprinciple.html"/>
    <id>https://geekeast.github.io/solidprinciple.html</id>
    <published>2019-09-25T02:32:35.000Z</published>
    <updated>2019-09-25T05:36:23.551Z</updated>
    
    <content type="html"><![CDATA[<h2 id="biology"><a class="markdownIt-Anchor" href="#biology"></a> Biology</h2><h3 id="cell-core"><a class="markdownIt-Anchor" href="#cell-core"></a> Cell Core</h3><ul><li>Anything that is <strong>not</strong> passed from outside</li><li>Include:<ul><li>Outside: <span style="color: red; font-weight: bold">Strong Coupling<span></span></span></li><li>Self: should be simple, <span id="s" style="color: #0288D2; font-weight: bold">only for one purpose</span>.</li></ul></li></ul><h3 id="span-ido-stylecolor-0288d2-font-weight-boldcell-wallspan"><a class="markdownIt-Anchor" href="#span-ido-stylecolor-0288d2-font-weight-boldcell-wallspan"></a> <span id="o" style="color: #0288D2; font-weight: bold">Cell Wall</span></h3><ul><li>Anything that is passed from outside<ul><li>Level 1. <code>primitive</code>: <code>only</code> one type</li><li>Level 2. <code>function</code>: <code>only</code> one type</li><li>Level 3. <code>class</code>: any class <strong>extends</strong> that class(<span id="l" style="color: #0288D2; font-weight: bold">add new parent sometimes</span>)</li><li>Level 4. <code>interface</code>: any class <strong>implements</strong> that interface(<span id="i" style="color: #0288D2; font-weight: bold">slim</span>)</li><li>Level 5. <code>generics</code>: any type <strong>extends</strong> something (extends = implement)</li></ul></li></ul><h3 id="span-idd-stylecolor-0288d2-font-weight-bolddecouplingspan"><a class="markdownIt-Anchor" href="#span-idd-stylecolor-0288d2-font-weight-bolddecouplingspan"></a> <span id="d" style="color: #0288D2; font-weight: bold">Decoupling</span></h3><ul><li>Move <strong>Outside</strong> things in Cell <code>Core</code> to Cell <code>Wall</code>.</li><li>Make <strong>reference</strong> of things in Cell more <code>abstract</code>.</li></ul><a id="more"></a><h2 id="solid"><a class="markdownIt-Anchor" href="#solid"></a> SOLID</h2><h3 id="a-hrefssingle-responsibilitya"><a class="markdownIt-Anchor" href="#a-hrefssingle-responsibilitya"></a> <a href="#s">Single Responsibility</a></h3><ul><li>The <code>core</code> of a <strong>cell</strong> should be <code>pure</code>, <code>simple</code> and <code>only</code> for <code>one</code> purpose.</li></ul><h3 id="a-hrefoopenclosea"><a class="markdownIt-Anchor" href="#a-hrefoopenclosea"></a> <a href="#o">Open/Close</a></h3><ul><li>Don’t have to modify <code>core</code> in order to <strong>link</strong> to other cells.</li></ul><h3 id="a-hreflliskv-substitutiona"><a class="markdownIt-Anchor" href="#a-hreflliskv-substitutiona"></a> <a href="#l">Liskv Substitution</a></h3><ul><li>Clothes for <code>children</code> should also be suitable for <code>parents</code>.</li><li>Solution: make <code>new parents</code> between <code>old parents</code> and the <code>child</code>.</li></ul><h3 id="a-hrefiinterface-segregationa"><a class="markdownIt-Anchor" href="#a-hrefiinterface-segregationa"></a> <a href="#i">Interface Segregation</a></h3><ul><li><code>Enough</code> but <strong>not more</strong> things in <code>Interface</code> for it to be implemented in <code>class</code>.</li></ul><h3 id="a-hrefddependency-inversiona"><a class="markdownIt-Anchor" href="#a-hrefddependency-inversiona"></a> <a href="#d">Dependency Inversion</a></h3><ul><li>Cell Wall should use <code>Interface</code>, not <code>class</code>.</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;biology&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#biology&quot;&gt;&lt;/a&gt; Biology&lt;/h2&gt;
&lt;h3 id=&quot;cell-core&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#cell-core&quot;&gt;&lt;/a&gt; Cell Core&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Anything that is &lt;strong&gt;not&lt;/strong&gt; passed from outside&lt;/li&gt;
&lt;li&gt;Include:
&lt;ul&gt;
&lt;li&gt;Outside: &lt;span style=&quot;color: red; font-weight: bold&quot;&gt;Strong Coupling&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Self: should be simple, &lt;span id=&quot;s&quot; style=&quot;color: #0288D2; font-weight: bold&quot;&gt;only for one purpose&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;span-ido-stylecolor-0288d2-font-weight-boldcell-wallspan&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#span-ido-stylecolor-0288d2-font-weight-boldcell-wallspan&quot;&gt;&lt;/a&gt; &lt;span id=&quot;o&quot; style=&quot;color: #0288D2; font-weight: bold&quot;&gt;Cell Wall&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Anything that is passed from outside
&lt;ul&gt;
&lt;li&gt;Level 1. &lt;code&gt;primitive&lt;/code&gt;: &lt;code&gt;only&lt;/code&gt; one type&lt;/li&gt;
&lt;li&gt;Level 2. &lt;code&gt;function&lt;/code&gt;: &lt;code&gt;only&lt;/code&gt; one type&lt;/li&gt;
&lt;li&gt;Level 3. &lt;code&gt;class&lt;/code&gt;: any class &lt;strong&gt;extends&lt;/strong&gt; that class(&lt;span id=&quot;l&quot; style=&quot;color: #0288D2; font-weight: bold&quot;&gt;add new parent sometimes&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;Level 4. &lt;code&gt;interface&lt;/code&gt;: any class &lt;strong&gt;implements&lt;/strong&gt; that interface(&lt;span id=&quot;i&quot; style=&quot;color: #0288D2; font-weight: bold&quot;&gt;slim&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;Level 5. &lt;code&gt;generics&lt;/code&gt;: any type &lt;strong&gt;extends&lt;/strong&gt; something (extends = implement)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;span-idd-stylecolor-0288d2-font-weight-bolddecouplingspan&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#span-idd-stylecolor-0288d2-font-weight-bolddecouplingspan&quot;&gt;&lt;/a&gt; &lt;span id=&quot;d&quot; style=&quot;color: #0288D2; font-weight: bold&quot;&gt;Decoupling&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Move &lt;strong&gt;Outside&lt;/strong&gt; things in Cell &lt;code&gt;Core&lt;/code&gt; to Cell &lt;code&gt;Wall&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Make &lt;strong&gt;reference&lt;/strong&gt; of things in Cell more &lt;code&gt;abstract&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Object-Oriented Design" scheme="https://geekeast.github.io/categories/Object-Oriented-Design/"/>
    
    
      <category term="OOP" scheme="https://geekeast.github.io/tags/OOP/"/>
    
  </entry>
  
  <entry>
    <title>AWS Data Insights Learning Series</title>
    <link href="https://geekeast.github.io/awsdatalearningseries.html"/>
    <id>https://geekeast.github.io/awsdatalearningseries.html</id>
    <published>2019-09-24T06:28:45.000Z</published>
    <updated>2019-09-24T09:58:38.190Z</updated>
    
    <content type="html"><![CDATA[<h2 id="architecture"><a class="markdownIt-Anchor" href="#architecture"></a> Architecture</h2><h3 id="design-principle-for-aws-products"><a class="markdownIt-Anchor" href="#design-principle-for-aws-products"></a> Design Principle for AWS Products</h3><ul><li><strong>Flexibility</strong>: Scale in the future</li><li><strong>10x Speed</strong>: performance really matters</li><li><strong>De-couple</strong>: Infrastructure Reuse</li><li><strong>Experimental at Scale</strong>: Break and Succeed</li><li><strong>Test and fail fast</strong>: Quicker to find the right wat</li><li><strong>Not invented yest</strong>: innovative</li><li><strong>No more silos</strong>: data products are connected</li><li><strong>Multiple Personas</strong>: integrated different jobs</li><li><strong>Ready for AIML</strong>: Support Intelligence</li></ul><h3 id="modern-data-architecture"><a class="markdownIt-Anchor" href="#modern-data-architecture"></a> Modern Data Architecture</h3><ol><li>Data Source</li><li>Data Ingest</li><li>Batch Data Pipelines</li><li>Event Pipelines</li><li>Serving</li><li>Business Outcomes</li></ol><p><img style="width: 80%; margin: auto" src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/architecture/Modern+Data+Architecture.jpeg"></p><a id="more"></a><h3 id="solution-based-learning-paths"><a class="markdownIt-Anchor" href="#solution-based-learning-paths"></a> Solution Based Learning Paths</h3><p><img style="width: 80%; margin: auto" src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/architecture/Solution+Based+Learning+Paths.jpeg"></p><h2 id="data-lakes"><a class="markdownIt-Anchor" href="#data-lakes"></a> Data Lakes</h2><h3 id="aws-database-and-analytics"><a class="markdownIt-Anchor" href="#aws-database-and-analytics"></a> AWS Database and Analytics</h3><ul><li>Business Intelligence &amp; Machine Learning<ul><li>Amazon Quicksight: Dashboard</li><li>Amazon SageMaker: Develop/Deploy ML Model</li><li>Amazon Comprehend: Natural Language Processing</li><li>Amazon Rekognition: Video and Image</li><li>Amazon Lex: chatbot</li><li>Amazon Trascribe: Speech Recognition</li><li>AWS DeepLens: DL enable Video Camera for Devs</li></ul></li><li>Database:<ul><li>QLDB: Ledger Database</li><li>Neptune: Graph Database</li><li>ElastiCache: Redis, Memcached</li><li>DynamoDB: Key-value, Document</li><li>Aurora: MySQL, PostgreSQL</li><li>Timestream: Time series</li><li>RDS: MySQL, PostgreSQL, MariaDB, Oracle, SQL Server</li></ul></li><li>Analytics<ul><li>Amazon Redshift: Data warehousing</li><li>Athena: Query AWS with SQL</li><li>EMR: Hadoop and Spark</li><li>Kinesis: real-time data processing</li><li>ElasticSearch: Search</li></ul></li><li>Data Lake:<ul><li>S3/Glacier: Storage</li><li>Lake Formation: form lake</li><li>Glue: ETL, Data catalog</li></ul></li><li>Data Movement:<ul><li>Database Migration Service: from database to AWS</li><li>Snowball: Large Data from/to AWS</li><li>Snowmobile: Super Large Data from/to AWS</li><li>Kinesis Data Firehouse: realtime data to storage and analytics.</li><li>Kinesis Data Streams: collect data at scale for real-time analytics</li><li>Data Pipeline: data movement and transformation</li><li>Direct Connect: build network from premises to aws<br><img style="width: 80%; margin: auto" src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/Data+Lakes/Analytics+Portfolio.jpeg"><br><img style="width: 80%; margin: auto" src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/Data+Lakes/Fasted+way+to+build+secure+data+lakes.jpg"></li></ul></li></ul><h2 id="sage-maker"><a class="markdownIt-Anchor" href="#sage-maker"></a> Sage Maker</h2><h3 id="aws-machine-learning-stack"><a class="markdownIt-Anchor" href="#aws-machine-learning-stack"></a> AWS Machine Learning Stack</h3><p><img style="width: 80%; margin: auto" src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/Machine+Learning/AWS+ML+Stack.jpg"></p><h3 id="sagemaker-pipeline"><a class="markdownIt-Anchor" href="#sagemaker-pipeline"></a> SageMaker Pipeline</h3><p><img style="width: 80%; margin: auto" src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/Machine+Learning/pipeline.jpg"></p><h3 id="labeling"><a class="markdownIt-Anchor" href="#labeling"></a> Labeling</h3><p><img style="width: 80%; margin: auto" src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/Machine+Learning/ground+truth.jpg"></p><h3 id="models"><a class="markdownIt-Anchor" href="#models"></a> Models</h3><p><img style="width: 80%; margin: auto" src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/Machine+Learning/models.jpg"></p><h3 id="aws-robotics"><a class="markdownIt-Anchor" href="#aws-robotics"></a> AWS Robotics</h3><iframe width="560" height="315" style="display: block; margin: 0 auto;" src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/video/aws.mp4" frameborder="0" allow="accelerometer; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;architecture&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#architecture&quot;&gt;&lt;/a&gt; Architecture&lt;/h2&gt;
&lt;h3 id=&quot;design-principle-for-aws-products&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#design-principle-for-aws-products&quot;&gt;&lt;/a&gt; Design Principle for AWS Products&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Flexibility&lt;/strong&gt;: Scale in the future&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;10x Speed&lt;/strong&gt;: performance really matters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;De-couple&lt;/strong&gt;: Infrastructure Reuse&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Experimental at Scale&lt;/strong&gt;: Break and Succeed&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Test and fail fast&lt;/strong&gt;: Quicker to find the right wat&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Not invented yest&lt;/strong&gt;: innovative&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No more silos&lt;/strong&gt;: data products are connected&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multiple Personas&lt;/strong&gt;: integrated different jobs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ready for AIML&lt;/strong&gt;: Support Intelligence&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;modern-data-architecture&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#modern-data-architecture&quot;&gt;&lt;/a&gt; Modern Data Architecture&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Data Source&lt;/li&gt;
&lt;li&gt;Data Ingest&lt;/li&gt;
&lt;li&gt;Batch Data Pipelines&lt;/li&gt;
&lt;li&gt;Event Pipelines&lt;/li&gt;
&lt;li&gt;Serving&lt;/li&gt;
&lt;li&gt;Business Outcomes&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img style=&quot;width: 80%; margin: auto&quot; src=&quot;https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/architecture/Modern+Data+Architecture.jpeg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="https://geekeast.github.io/categories/AWS/"/>
    
    
      <category term="AWS" scheme="https://geekeast.github.io/tags/AWS/"/>
    
      <category term="Data Engineer" scheme="https://geekeast.github.io/tags/Data-Engineer/"/>
    
      <category term="Data Science" scheme="https://geekeast.github.io/tags/Data-Science/"/>
    
  </entry>
  
  <entry>
    <title>Git Switch Repo</title>
    <link href="https://geekeast.github.io/gitswitchrepo.html"/>
    <id>https://geekeast.github.io/gitswitchrepo.html</id>
    <published>2019-09-12T02:49:19.000Z</published>
    <updated>2019-09-12T02:51:20.270Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Modify</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="built_in">set</span>-url origin git@github.com:xxx/demo.git</span><br></pre></td></tr></table></figure><ul><li>Remove and Create</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br><span class="line">git remote add origin git@github.com:xxx/demo.git</span><br></pre></td></tr></table></figure><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Modify&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git remote &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;-url origin git@github.com:xxx/demo.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Remove and Create&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git remote rm origin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote add origin git@github.com:xxx/demo.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="CI/CD" scheme="https://geekeast.github.io/categories/CI-CD/"/>
    
    
      <category term="Git" scheme="https://geekeast.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>GitLab CI/CD</title>
    <link href="https://geekeast.github.io/gitlabcicd.html"/>
    <id>https://geekeast.github.io/gitlabcicd.html</id>
    <published>2019-09-11T15:25:54.000Z</published>
    <updated>2019-09-11T15:51:20.696Z</updated>
    
    <content type="html"><![CDATA[<h2 id="gitlab-cicd"><a class="markdownIt-Anchor" href="#gitlab-cicd"></a> Gitlab CI/CD</h2><h3 id="concept"><a class="markdownIt-Anchor" href="#concept"></a> Concept</h3><h4 id="job"><a class="markdownIt-Anchor" href="#job"></a> Job</h4><ul><li><code>job</code>:  a <strong>task</strong> that gitlab should do for us</li><li>For example, we can define <code>build</code> as a <code>job</code></li><li>The runner will <code>git clone</code> your repository</li><li>The <code>default</code> directory is <code>/builds/{username}/{project_name}/</code></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">build:</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mkdir</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">touch</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"chassis"</span> <span class="string">&gt; car.txt</span></span><br><span class="line"><span class="string">    - echo "engine" &gt; car.txt</span></span><br><span class="line"><span class="string">    - echo "wheels" &gt; car.txt</span></span><br></pre></td></tr></table></figure><ul><li>By default, Gitlab will run jobs <strong>in parallel</strong></li><li>After <code>git commit</code>, you will see two jobs running <strong>concurrently</strong> in Gitlab</li><li>When <strong>a</strong> specific job fails, you will received the <code>notification</code> in your <code>email</code></li></ul><a id="more"></a><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">build:</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mkdir</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">touch</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"chassis"</span> <span class="string">&gt; car.txt</span></span><br><span class="line"><span class="string">    - echo "engine" &gt; car.txt</span></span><br><span class="line"><span class="string">    - echo "wheels" &gt; car.txt</span></span><br><span class="line"><span class="string"></span><span class="attr">test:</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test</span> <span class="bullet">-f</span> <span class="string">build/car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"chassis"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"engine"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"wheels"</span> <span class="string">car.txt</span></span><br></pre></td></tr></table></figure><h4 id="stage"><a class="markdownIt-Anchor" href="#stage"></a> Stage</h4><ul><li>We can define the <strong>stages</strong>(<code>order</code>) in <strong>sequence</strong></li><li>And you will see the jobs will be executed <strong>one after one</strong></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">test</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mkdir</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">touch</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"chassis"</span> <span class="string">&gt; car.txt</span></span><br><span class="line"><span class="string">    - echo "engine" &gt; car.txt</span></span><br><span class="line"><span class="string">    - echo "wheels" &gt; car.txt</span></span><br><span class="line"><span class="string"></span><span class="attr">test:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test</span> <span class="bullet">-f</span> <span class="string">build/car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"chassis"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"engine"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"wheels"</span> <span class="string">car.txt</span></span><br></pre></td></tr></table></figure><ul><li>What if we define <code>two jobs</code> under the <strong>same</strong> stage?</li><li>The two jobs will be executed <code>in parallel</code></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">test</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mkdir</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">touch</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"chassis"</span> <span class="string">&gt; car.txt</span></span><br><span class="line"><span class="string">    - echo "engine" &gt; car.txt</span></span><br><span class="line"><span class="string">    - echo "wheels" &gt; car.txt</span></span><br><span class="line"><span class="string"></span><span class="attr">build2:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mkdir</span> <span class="string">build2</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build2</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">touch</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"chassis"</span> <span class="string">&gt; car.txt</span></span><br><span class="line"><span class="string">    - echo "engine" &gt; car.txt</span></span><br><span class="line"><span class="string">    - echo "wheels" &gt; car.txt</span></span><br><span class="line"><span class="string"></span><span class="attr">test:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test</span> <span class="bullet">-f</span> <span class="string">build/car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"chassis"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"engine"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"wheels"</span> <span class="string">car.txt</span></span><br></pre></td></tr></table></figure><ul><li>Conclusion:<ul><li><code>jobs under same stage</code> <strong>in parallel</strong></li><li>different <code>stages</code> in** sequence**</li></ul></li></ul><hr><ul><li>You can see the test job failed, why?!</li><li>Because the folder <code>build/car.txt</code> doesn’t exist.</li><li>Jobs are <code>standalone</code> by default, they <strong>don’t depend on</strong> each other and don’t have communication to each other</li></ul><h4 id="artifact"><a class="markdownIt-Anchor" href="#artifact"></a> Artifact</h4><ul><li>How to <code>save</code> the <strong>artifact</strong>(<code>result</code>) of one job in order to be <strong>shared</strong> between jobs?</li><li>The <code>build</code> folder including the <code>files inside it</code> will be uploaded to the <code>coordinator</code></li><li>The <code>next job</code> will download the <code>artifacts</code> from the <code>coordinator</code></li></ul><blockquote><p><strong>You can download and inspect the artifact in Gitlab!</strong></p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">test</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mkdir</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">touch</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"chassis"</span> <span class="string">&gt; car.txt</span></span><br><span class="line"><span class="string">    - echo "engine" &gt; car.txt</span></span><br><span class="line"><span class="string">    - echo "wheels" &gt; car.txt</span></span><br><span class="line"><span class="string"></span><span class="attr">  artifacts:</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">build/</span></span><br><span class="line"><span class="attr">test:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test</span> <span class="bullet">-f</span> <span class="string">build/car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"chassis"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"engine"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"wheels"</span> <span class="string">car.txt</span></span><br></pre></td></tr></table></figure><ul><li>It failed, why?</li><li>Solution: Use <code>&gt;&gt;</code> instead of <code>&gt;</code> to append files</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">test</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mkdir</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">touch</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"chassis"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"engine"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"wheels"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="attr">  artifacts:</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">build/</span></span><br><span class="line"><span class="attr">test:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test</span> <span class="bullet">-f</span> <span class="string">build/car.txt</span> <span class="comment"># to test if the car.txt exist</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"chassis"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"engine"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"wheels"</span> <span class="string">car.txt</span></span><br></pre></td></tr></table></figure><ul><li>Now it passed</li><li>Trick: Always remember use <code>ls</code> or <code>cat filename</code> to <strong>debug</strong>.</li></ul><h4 id="runner"><a class="markdownIt-Anchor" href="#runner"></a> Runner</h4><ul><li>Based on <code>docker</code>, you can image that as a <code>linux machine</code></li><li>By default, Gitlab use <code>Shared</code> Runners</li></ul><h4 id="image"><a class="markdownIt-Anchor" href="#image"></a> Image</h4><ul><li>The runner is based on docker, by default in <strong>ruby</strong> env.</li><li>What if we want to change the env?</li><li>Use <code>image</code>, find the image that you want <span class="exturl" data-url="aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS8=" title="https://hub.docker.com/">here<i class="fa fa-external-link"></i></span></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">test</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="attr">node:latest</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mkdir</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">touch</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"chassis"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"engine"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"wheels"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="attr">  artifacts:</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">build/</span></span><br><span class="line"><span class="attr">test:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="attr">node:latest</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test</span> <span class="bullet">-f</span> <span class="string">build/car.txt</span> <span class="comment"># to test if the car.txt exist</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"chassis"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"engine"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"wheels"</span> <span class="string">car.txt</span></span><br></pre></td></tr></table></figure><ul><li>How to <code>choose</code> image?<ul><li>It can <code>meet your requirements</code></li><li>Keep the docker file as <strong>small</strong> as possible, for example user <code>alpine</code></li></ul></li></ul><hr><h4 id="global-image"><a class="markdownIt-Anchor" href="#global-image"></a> Global Image</h4><ul><li>But I have to specify the <code>image</code> for <strong>each</strong> job!</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">image:</span> <span class="attr">node:latest</span></span><br><span class="line"><span class="attr">stages:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">test</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mkdir</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">touch</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"chassis"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"engine"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"wheels"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="attr">  artifacts:</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">build/</span></span><br><span class="line"><span class="attr">test:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test</span> <span class="bullet">-f</span> <span class="string">build/car.txt</span> <span class="comment"># to test if the car.txt exist</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"chassis"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"engine"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"wheels"</span> <span class="string">car.txt</span></span><br></pre></td></tr></table></figure><h4 id="job-status"><a class="markdownIt-Anchor" href="#job-status"></a> Job Status</h4><ul><li>success: if the exit status is <code>0</code></li><li>failed: if the exit status is <code>1-255</code></li><li><code>Debugger skill</code>:</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># to check if xxx exist in index.html</span></span><br><span class="line">grep -q <span class="string">"xxx"</span> index.html</span><br><span class="line"><span class="comment"># to check thee exit status</span></span><br><span class="line"><span class="built_in">echo</span> $?</span><br></pre></td></tr></table></figure><blockquote><p>The last <strong>green</strong> line showed in the gitlab runner is where the test <code>failed</code>.</p></blockquote><h4 id="blocking"><a class="markdownIt-Anchor" href="#blocking"></a> Blocking</h4><ul><li>Some jobs like start the api server will by default stop the scripts below it from running.</li><li>Solution: Run in backgroud</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">test:</span></span><br><span class="line"><span class="attr">  image:</span><span class="string">node</span></span><br><span class="line"><span class="attr">  stage:</span><span class="string">test</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">npm</span> <span class="string">start</span> <span class="string">&amp;</span> <span class="comment"># core</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">sleep</span> <span class="number">3</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">&#123;some</span> <span class="string">thing</span> <span class="string">else&#125;</span></span><br></pre></td></tr></table></figure><h4 id="environment-variable"><a class="markdownIt-Anchor" href="#environment-variable"></a> Environment Variable</h4><ul><li>You can define <code>env var</code> in Gitlab <code>Project</code></li><li><code>Env var</code>is accessible by gitlab <code>runner</code></li><li>Store the secrets in <code>env var</code></li></ul><h4 id="cache"><a class="markdownIt-Anchor" href="#cache"></a> Cache</h4><ul><li><strong>When</strong>: used for <strong>temporary</strong> <code>storage</code> for project <strong>dependencies</strong>.</li><li>cache between <code>runnings of pipeline</code>, the <code>bigger</code> the cached files, the more obvious the speed is increasing</li><li>cache between <code>stages</code>, the <code>more cache shared between stages</code>, the more obvious the speed is increasing</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">image:</span> <span class="attr">node:latest</span></span><br><span class="line"></span><br><span class="line"><span class="attr">stages:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">test</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="attr">node:latest</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  cache:</span></span><br><span class="line"><span class="attr">    key:</span> <span class="string">$&#123;CI_COMMIT_REF_SLUG&#125;</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">node_modules/</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mkdir</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">touch</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"chassis"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"engine"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"wheels"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="attr">  artifacts:</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">build/</span></span><br><span class="line"><span class="attr">test:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="attr">node:latest</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test</span> <span class="bullet">-f</span> <span class="string">build/car.txt</span> <span class="comment"># to test if the car.txt exist</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"chassis"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"engine"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"wheels"</span> <span class="string">car.txt</span></span><br></pre></td></tr></table></figure><ul><li>When we should use <code>CI_COMMIT_REF_SLUG</code>?<ul><li>In the example, the key of cache is specific to one branch.</li><li>The <code>CI_COMMIT_REF_SLUG</code> is the key of current branch.</li></ul></li><li>Global Cache</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">image:</span> <span class="attr">node:latest</span></span><br><span class="line"><span class="attr">stages:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">test</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line"><span class="attr">  key:</span> <span class="string">$&#123;CI_COMMIT_REF_SLUG&#125;</span></span><br><span class="line"><span class="attr">  paths:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">node_modules/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="attr">node:latest</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mkdir</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">touch</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"chassis"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"engine"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"wheels"</span> <span class="string">&gt;&gt;</span> <span class="string">car.txt</span></span><br><span class="line"><span class="attr">  artifacts:</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">build/</span></span><br><span class="line"><span class="attr">test:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="attr">node:latest</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test</span> <span class="bullet">-f</span> <span class="string">build/car.txt</span> <span class="comment"># to test if the car.txt exist</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"chassis"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"engine"</span> <span class="string">car.txt</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">grep</span> <span class="string">"wheels"</span> <span class="string">car.txt</span></span><br></pre></td></tr></table></figure><blockquote><p>Warning: sometimes the cache will cause the job to fail, simply use <code>clear runner caches</code> in gitlab to fix this.</p></blockquote><h4 id="staging"><a class="markdownIt-Anchor" href="#staging"></a> Staging</h4><ul><li><code>Staging</code> is simply the deployment to a environment for <code>UAT</code>.</li></ul><h4 id="environment"><a class="markdownIt-Anchor" href="#environment"></a> Environment</h4><ul><li>Easily to track</li><li>You could open the environment directly in <code>Gitlab &gt; Operations &gt; Environemnts</code></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">deploy</span> <span class="attr">staging:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">deploy</span> <span class="string">staging</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">staging</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">https://instance.surge.sh</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line">    <span class="string">...</span></span><br></pre></td></tr></table></figure><ul><li>You can also set as <code>dynamic</code> <code>environment</code></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">deploy</span> <span class="attr">staging:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">deploy</span> <span class="string">staging</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">staging/$CI_COMMIT_REF_NAME</span> <span class="comment"># core</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">https://instance-staging/$CI_COMMIT_REF_NAME.surge.sh</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line">    <span class="string">...</span></span><br></pre></td></tr></table></figure><h4 id="variables"><a class="markdownIt-Anchor" href="#variables"></a> Variables</h4><ul><li>To store <code>common</code> things that will be used in gitlab <code>runner</code></li><li>You can store <code>domain name</code>, for example</li><li>You could define in gitlab</li><li>Or you could define in <code>.gitlab-ci.yml</code></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">variables:</span></span><br><span class="line"><span class="attr">  STAGING_DOMAIN:</span> <span class="string">instazone-staging.surge.sh</span></span><br><span class="line"><span class="attr">  PRODUCTION_DOMAIN:</span> <span class="string">instazone.surge.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># in some place for use</span></span><br><span class="line"><span class="string">$STAGING_DOMAIN</span></span><br></pre></td></tr></table></figure><h4 id="auto-trigger"><a class="markdownIt-Anchor" href="#auto-trigger"></a> Auto Trigger</h4><ul><li>Anytime you make changes to branches of the gitlab project, it will trigger the CI <code>rule</code> that has been defined in the <code>.gitlab-ci.yml</code></li><li><code>.gitlab-ci.yml</code> can also define the rule for <strong>different</strong> <code>branches</code> of the project.</li></ul><h4 id="manual-trigger"><a class="markdownIt-Anchor" href="#manual-trigger"></a> Manual Trigger</h4><ul><li>Happens between <code>staging</code> and <code>production</code></li><li><code>Opiton 1</code>: <strong>Fully Manually</strong></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">deploy</span> <span class="attr">production:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">deploy</span> <span class="string">production</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">production</span></span><br><span class="line"><span class="attr">    url:</span> <span class="string">$PRODUCTION_DOMAIN</span></span><br><span class="line"><span class="attr">  when:</span> <span class="string">manual</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">npm</span> <span class="string">install</span> <span class="bullet">--global</span> <span class="string">surge</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">surge</span> <span class="bullet">--project</span> <span class="string">./public</span> <span class="bullet">--domain</span> <span class="string">$PRODUCTION_DOMAIN</span></span><br></pre></td></tr></table></figure><blockquote><p>The job behind the manual job will be automatically failed.</p></blockquote><ul><li>If you don’t want the job behind to fail</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">deploy</span> <span class="attr">production:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">deploy</span> <span class="string">production</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">production</span></span><br><span class="line"><span class="attr">    url:</span> <span class="string">$PRODUCTION_DOMAIN</span></span><br><span class="line"><span class="attr">  when:</span> <span class="string">manual</span></span><br><span class="line"><span class="attr">  allow_failure:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">npm</span> <span class="string">install</span> <span class="bullet">--global</span> <span class="string">surge</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">surge</span> <span class="bullet">--project</span> <span class="string">./public</span> <span class="bullet">--domain</span> <span class="string">$PRODUCTION_DOMAIN</span></span><br></pre></td></tr></table></figure><ul><li><code>Opiton 1</code>: <strong>Branching and Merging</strong><ul><li>For branch <code>develop</code>, we only need <code>build</code> and <code>test</code>, without <code>staging</code> and <code>deploy</code></li><li>For branch <code>master</code>, we all jobs to run</li></ul></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">deploy</span> <span class="attr">staging:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">deploy</span> <span class="string">staging</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">staging</span></span><br><span class="line"><span class="attr">    url:</span> <span class="string">&lt;url&gt;</span></span><br><span class="line"><span class="attr">  only:</span> <span class="comment"># core</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">master</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line"></span><br><span class="line"><span class="string">deploy</span> <span class="attr">production:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">deploy</span> <span class="string">production</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">production</span></span><br><span class="line"><span class="attr">    url:</span> <span class="string">&lt;url&gt;</span></span><br><span class="line"><span class="attr">  only:</span> <span class="comment"># core</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">master</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line">    <span class="string">...</span></span><br></pre></td></tr></table></figure><h4 id="on_stop"><a class="markdownIt-Anchor" href="#on_stop"></a> <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGxhYi5jb20vZWUvY2kveWFtbC8jZW52aXJvbm1lbnRvbl9zdG9w" title="https://docs.gitlab.com/ee/ci/yaml/#environmenton_stop">On_stop<i class="fa fa-external-link"></i></span></h4><ul><li>You want to start a runner after one environment stops</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">review_app:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">deploy</span></span><br><span class="line"><span class="attr">  script:</span> <span class="string">make</span> <span class="string">deploy-app</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">review</span></span><br><span class="line"><span class="attr">    on_stop:</span> <span class="string">stop_review_app</span> <span class="comment"># when the environment stop, trigger stop_review_app job</span></span><br><span class="line"></span><br><span class="line"><span class="attr">stop_review_app:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">deploy</span></span><br><span class="line"><span class="attr">  variables:</span></span><br><span class="line"><span class="attr">    GIT_STRATEGY:</span> <span class="string">none</span> <span class="comment"># won't clone git repo</span></span><br><span class="line"><span class="attr">  script:</span> <span class="string">make</span> <span class="string">delete-app</span></span><br><span class="line"><span class="attr">  when:</span> <span class="string">manual</span> <span class="comment"># won't be executed automatically</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">review</span></span><br><span class="line"><span class="attr">    action:</span> <span class="string">stop</span></span><br></pre></td></tr></table></figure><h4 id="disable-job"><a class="markdownIt-Anchor" href="#disable-job"></a> Disable job</h4><ul><li>Enable</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">job:</span></span><br><span class="line">  <span class="string">...</span></span><br></pre></td></tr></table></figure><ul><li>Disable</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">.job:</span></span><br><span class="line">  <span class="string">...</span></span><br></pre></td></tr></table></figure><h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGxhYi5jb20vY2UvY2kveWFtbC8jc3RhZ2Vz" title="https://docs.gitlab.com/ce/ci/yaml/#stages">Gitlab CI/CD Pipeline Configuration Reference<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGxhYi5jb20vZWUvY2kvdmFyaWFibGVzL3ByZWRlZmluZWRfdmFyaWFibGVzLmh0bWw=" title="https://docs.gitlab.com/ee/ci/variables/predefined_variables.html">Gitlab Predefined Environment Variables<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cudWRlbXkuY29tL2NvdXJzZS9naXRsYWItY2ktcGlwZWxpbmVzLWNpLWNkLWFuZC1kZXZvcHMtZm9yLWJlZ2lubmVycy9sZWFybi9sZWN0dXJlLzE0MzA1MTkyI292ZXJ2aWV3" title="https://www.udemy.com/course/gitlab-ci-pipelines-ci-cd-and-devops-for-beginners/learn/lecture/14305192#overview">Free Personal Static Website Tutorial<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9zdXJnZS5zaC9wcmljaW5n" title="https://surge.sh/pricing">Static Website Easy Deploy<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cudWRlbXkuY29tL2NvdXJzZS9naXRsYWItY2ktcGlwZWxpbmVzLWNpLWNkLWFuZC1kZXZvcHMtZm9yLWJlZ2lubmVycy9sZWFybi9sZWN0dXJlLzE1NTcxMDY2I292ZXJ2aWV3" title="https://www.udemy.com/course/gitlab-ci-pipelines-ci-cd-and-devops-for-beginners/learn/lecture/15571066#overview">Job Templates and Anchor<i class="fa fa-external-link"></i></span></p><h3 id="boilerplate"><a class="markdownIt-Anchor" href="#boilerplate"></a> <span class="exturl" data-url="aHR0cHM6Ly9naXRsYWIuY29tL3N4ODgwNzY1NC9naXRsYWItY2ljZC1ib2xpZXJwbGF0ZQ==" title="https://gitlab.com/sx8807654/gitlab-cicd-bolierplate">Boilerplate<i class="fa fa-external-link"></i></span></h3><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;gitlab-cicd&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#gitlab-cicd&quot;&gt;&lt;/a&gt; Gitlab CI/CD&lt;/h2&gt;
&lt;h3 id=&quot;concept&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#concept&quot;&gt;&lt;/a&gt; Concept&lt;/h3&gt;
&lt;h4 id=&quot;job&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#job&quot;&gt;&lt;/a&gt; Job&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;job&lt;/code&gt;:  a &lt;strong&gt;task&lt;/strong&gt; that gitlab should do for us&lt;/li&gt;
&lt;li&gt;For example, we can define &lt;code&gt;build&lt;/code&gt; as a &lt;code&gt;job&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The runner will &lt;code&gt;git clone&lt;/code&gt; your repository&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;default&lt;/code&gt; directory is &lt;code&gt;/builds/{username}/{project_name}/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;build:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  script:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;build&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;build&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;touch&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;car.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;chassis&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;gt; car.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    - echo &quot;engine&quot; &amp;gt; car.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    - echo &quot;wheels&quot; &amp;gt; car.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;By default, Gitlab will run jobs &lt;strong&gt;in parallel&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;After &lt;code&gt;git commit&lt;/code&gt;, you will see two jobs running &lt;strong&gt;concurrently&lt;/strong&gt; in Gitlab&lt;/li&gt;
&lt;li&gt;When &lt;strong&gt;a&lt;/strong&gt; specific job fails, you will received the &lt;code&gt;notification&lt;/code&gt; in your &lt;code&gt;email&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="CI/CD" scheme="https://geekeast.github.io/categories/CI-CD/"/>
    
    
      <category term="CI/CD" scheme="https://geekeast.github.io/tags/CI-CD/"/>
    
      <category term="Gitlab" scheme="https://geekeast.github.io/tags/Gitlab/"/>
    
  </entry>
  
  <entry>
    <title>Config SSH with Github and GitLab</title>
    <link href="https://geekeast.github.io/configgitssh.html"/>
    <id>https://geekeast.github.io/configgitssh.html</id>
    <published>2019-09-10T00:35:28.000Z</published>
    <updated>2019-09-10T00:39:39.764Z</updated>
    
    <content type="html"><![CDATA[<h3 id="create-config-file"><a class="markdownIt-Anchor" href="#create-config-file"></a> Create Config File</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ~/.ssh/config</span></span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line">Host gitlab.com</span><br><span class="line">    HostName gitlab.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/gitlab_rsa</span><br></pre></td></tr></table></figure><h3 id="generate-key"><a class="markdownIt-Anchor" href="#generate-key"></a> Generate Key</h3><ul><li>id_rsa for github private key filename</li><li>gitlab_rsa for gitlab private key filename</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">"example@email.com"</span> &amp;&amp; cat ~/.ssh/[private_key_file_name].pub</span><br></pre></td></tr></table></figure><h2 id="-more-"><a class="markdownIt-Anchor" href="#-more-"></a> <a id="more"></a></h2>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;create-config-file&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#create-config-file&quot;&gt;&lt;/a&gt; Create Config File&lt;/h3&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ~/.ssh/config&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    HostName github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PreferredAuthentications publickey&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IdentityFile ~/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host gitlab.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    HostName gitlab.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PreferredAuthentications publickey&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IdentityFile ~/.ssh/gitlab_rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;generate-key&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#generate-key&quot;&gt;&lt;/a&gt; Generate Key&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;id_rsa for github private key filename&lt;/li&gt;
&lt;li&gt;gitlab_rsa for gitlab private key filename&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa -b 4096 -C &lt;span class=&quot;string&quot;&gt;&quot;example@email.com&quot;&lt;/span&gt; &amp;amp;&amp;amp; cat ~/.ssh/[private_key_file_name].pub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;-more-&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#-more-&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="CI/CD" scheme="https://geekeast.github.io/categories/CI-CD/"/>
    
    
      <category term="SSH" scheme="https://geekeast.github.io/tags/SSH/"/>
    
      <category term="CI/CD" scheme="https://geekeast.github.io/tags/CI-CD/"/>
    
      <category term="Github" scheme="https://geekeast.github.io/tags/Github/"/>
    
      <category term="GitLab" scheme="https://geekeast.github.io/tags/GitLab/"/>
    
  </entry>
  
  <entry>
    <title>SQL Formatter and Minifier</title>
    <link href="https://geekeast.github.io/sqlformaterminifier.html"/>
    <id>https://geekeast.github.io/sqlformaterminifier.html</id>
    <published>2019-08-28T04:06:48.000Z</published>
    <updated>2019-08-28T04:08:45.663Z</updated>
    
    <content type="html"><![CDATA[<h3 id="sql-formatter"><a class="markdownIt-Anchor" href="#sql-formatter"></a> <span class="exturl" data-url="aHR0cDovL3d3dy5kcHJpdmVyLmNvbS9wcC9zcWxmb3JtYXQuaHRt" title="http://www.dpriver.com/pp/sqlformat.htm">SQL Formatter<i class="fa fa-external-link"></i></span></h3><ul><li>from</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, <span class="keyword">sum</span>(income) <span class="keyword">from</span> info <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">rollup</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><ul><li>to</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span>, </span><br><span class="line">       <span class="keyword">SUM</span>(income) </span><br><span class="line"><span class="keyword">FROM</span>   info </span><br><span class="line"><span class="keyword">GROUP</span>  <span class="keyword">BY</span> <span class="keyword">rollup</span>( <span class="number">1</span> );</span><br></pre></td></tr></table></figure><h3 id="sql-minifier"><a class="markdownIt-Anchor" href="#sql-minifier"></a> <span class="exturl" data-url="aHR0cHM6Ly93d3cud2VidG9vbGtpdG9ubGluZS5jb20vc3FsLW1pbmlmaWVyLmh0bWw=" title="https://www.webtoolkitonline.com/sql-minifier.html">SQL Minifier<i class="fa fa-external-link"></i></span></h3><ul><li>from</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span>, </span><br><span class="line">       <span class="keyword">SUM</span>(income) </span><br><span class="line"><span class="keyword">FROM</span>   info </span><br><span class="line"><span class="keyword">GROUP</span>  <span class="keyword">BY</span> <span class="keyword">rollup</span>( <span class="number">1</span> );</span><br></pre></td></tr></table></figure><ul><li>to</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, <span class="keyword">sum</span>(income) <span class="keyword">from</span> info <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">rollup</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h2 id="-more-"><a class="markdownIt-Anchor" href="#-more-"></a> <a id="more"></a></h2>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;sql-formatter&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sql-formatter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.dpriver.com/pp/sqlformat.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SQL Formatter&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;from&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sum&lt;/span&gt;(income) &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; info &lt;span class=&quot;keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;rollup&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;to&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;SUM&lt;/span&gt;(income) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt;   info &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GROUP&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;rollup&lt;/span&gt;( &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;sql-minifier&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sql-minifier&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.webtoolkitonline.com/sql-minifier.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SQL Minifier&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;from&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;SUM&lt;/span&gt;(income) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt;   info &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GROUP&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;rollup&lt;/span&gt;( &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;to&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sum&lt;/span&gt;(income) &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; info &lt;span class=&quot;keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;rollup&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;-more-&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#-more-&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="Database" scheme="https://geekeast.github.io/categories/Database/"/>
    
    
      <category term="Postgres" scheme="https://geekeast.github.io/tags/Postgres/"/>
    
      <category term="Database" scheme="https://geekeast.github.io/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>Append Total in Postgres</title>
    <link href="https://geekeast.github.io/pgaddonerowsum.html"/>
    <id>https://geekeast.github.io/pgaddonerowsum.html</id>
    <published>2019-08-28T03:58:17.000Z</published>
    <updated>2019-08-28T04:05:51.745Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><ul><li>原表</li></ul><table><thead><tr><th>Name</th><th>Income</th></tr></thead><tbody><tr><td>A</td><td>100</td></tr><tr><td>B</td><td>200</td></tr><tr><td>C</td><td>300</td></tr></tbody></table><ul><li>需求</li></ul><table><thead><tr><th>Name</th><th>Income</th></tr></thead><tbody><tr><td>A</td><td>100</td></tr><tr><td>B</td><td>200</td></tr><tr><td>C</td><td>300</td></tr><tr><td></td><td>600</td></tr></tbody></table><a id="more"></a><ul><li>思路<ul><li><code>ROOLUP</code> function</li></ul></li><li>解决</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span>, </span><br><span class="line">       <span class="keyword">SUM</span>(income) </span><br><span class="line"><span class="keyword">FROM</span>   info </span><br><span class="line"><span class="keyword">GROUP</span>  <span class="keyword">BY</span> <span class="keyword">rollup</span>( <span class="number">1</span> );</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#问题&quot;&gt;&lt;/a&gt; 问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;原表&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Income&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;需求&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Income&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;600&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="Database" scheme="https://geekeast.github.io/categories/Database/"/>
    
    
      <category term="Postgres" scheme="https://geekeast.github.io/tags/Postgres/"/>
    
      <category term="Database" scheme="https://geekeast.github.io/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>Web Performnace Optimization</title>
    <link href="https://geekeast.github.io/fullstackperformanceoptimal.html"/>
    <id>https://geekeast.github.io/fullstackperformanceoptimal.html</id>
    <published>2019-08-19T06:19:44.000Z</published>
    <updated>2019-08-19T07:03:09.223Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数据重载"><a class="markdownIt-Anchor" href="#数据重载"></a> 数据重载</h3><ul><li>cache: 缓数据避免同样数据重复获取</li><li>centralized management： 集中化数据管理，减少数据重复出现</li></ul><h3 id="数据过载"><a class="markdownIt-Anchor" href="#数据过载"></a> 数据过载</h3><ul><li>code spliting： 代码分块，是lazy loading的基础</li><li>lazy loading： 按需加载，而不提前加载</li><li>tree shaking： 减少无用代码，无用依赖</li></ul><h3 id="网络速率"><a class="markdownIt-Anchor" href="#网络速率"></a> 网络速率</h3><ul><li>cdn：自动选择最近节点，提高传输速率</li><li>gzip：压缩数据，提高传输速率</li><li>async：不卡顿其他数据传输，最大化传输能力</li><li>graphql：不传输无用的数据，节省传输时间</li></ul><h3 id="数据处理"><a class="markdownIt-Anchor" href="#数据处理"></a> 数据处理</h3><ul><li>data structure &amp; algorithm：以性能优化的方式对数据进行存储和运算</li><li>memorize: 基于argument对function进行缓存，避免重复计算</li></ul><a id="more"></a><h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2><h2 id="2019年前端性能优化清单-上篇"><a class="markdownIt-Anchor" href="#2019年前端性能优化清单-上篇"></a> <span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC81YzQ2Y2JhZWU1MWQ0NTNmNDU2MTJhMmM=" title="https://juejin.im/post/5c46cbaee51d453f45612a2c">2019年前端性能优化清单 — 上篇<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC81YzQ3MWVhZmYyNjVkYTYxNmQ1NDdjOGM=" title="https://juejin.im/post/5c471eaff265da616d547c8c">2019年前端性能优化清单 — 中篇<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC81YzQ3M2NkYWU1MWQ0NTUxOGQ0NzAxZmY=" title="https://juejin.im/post/5c473cdae51d45518d4701ff">2019年前端性能优化清单 — 下篇<i class="fa fa-external-link"></i></span></h2>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;数据重载&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据重载&quot;&gt;&lt;/a&gt; 数据重载&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;cache: 缓数据避免同样数据重复获取&lt;/li&gt;
&lt;li&gt;centralized management： 集中化数据管理，减少数据重复出现&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;数据过载&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据过载&quot;&gt;&lt;/a&gt; 数据过载&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;code spliting： 代码分块，是lazy loading的基础&lt;/li&gt;
&lt;li&gt;lazy loading： 按需加载，而不提前加载&lt;/li&gt;
&lt;li&gt;tree shaking： 减少无用代码，无用依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;网络速率&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#网络速率&quot;&gt;&lt;/a&gt; 网络速率&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;cdn：自动选择最近节点，提高传输速率&lt;/li&gt;
&lt;li&gt;gzip：压缩数据，提高传输速率&lt;/li&gt;
&lt;li&gt;async：不卡顿其他数据传输，最大化传输能力&lt;/li&gt;
&lt;li&gt;graphql：不传输无用的数据，节省传输时间&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;数据处理&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据处理&quot;&gt;&lt;/a&gt; 数据处理&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;data structure &amp;amp; algorithm：以性能优化的方式对数据进行存储和运算&lt;/li&gt;
&lt;li&gt;memorize: 基于argument对function进行缓存，避免重复计算&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="Frontend" scheme="https://geekeast.github.io/tags/Frontend/"/>
    
      <category term="Optimization" scheme="https://geekeast.github.io/tags/Optimization/"/>
    
  </entry>
  
  <entry>
    <title>Testing Types in Web</title>
    <link href="https://geekeast.github.io/typesoftestingweb.html"/>
    <id>https://geekeast.github.io/typesoftestingweb.html</id>
    <published>2019-08-19T00:31:19.000Z</published>
    <updated>2019-08-28T03:51:55.632Z</updated>
    
    <content type="html"><![CDATA[<h3 id="types"><a class="markdownIt-Anchor" href="#types"></a> Types</h3><ul><li><strong>Static Testing</strong>: Typescript</li><li><strong>Unit Testing</strong>: Jest &amp; Enzyme</li><li><strong>Integration Testing</strong>: Cypress, Selenium</li><li><strong>User Acceptance Testing</strong>: Tested by real users</li></ul><h2 id="-more-"><a class="markdownIt-Anchor" href="#-more-"></a> <a id="more"></a></h2>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;types&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#types&quot;&gt;&lt;/a&gt; Types&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Static Testing&lt;/strong&gt;: Typescript&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unit Testing&lt;/strong&gt;: Jest &amp;amp; Enzyme&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integration Testing&lt;/strong&gt;: Cypress, Selenium&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User Acceptance Testing&lt;/strong&gt;: Tested by real users&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;-more-&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#-more-&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="Testing" scheme="https://geekeast.github.io/tags/Testing/"/>
    
      <category term="UAT" scheme="https://geekeast.github.io/tags/UAT/"/>
    
  </entry>
  
  <entry>
    <title>NPM vs Yarn</title>
    <link href="https://geekeast.github.io/npmandyarn.html"/>
    <id>https://geekeast.github.io/npmandyarn.html</id>
    <published>2019-08-19T00:12:44.000Z</published>
    <updated>2019-08-19T00:31:04.626Z</updated>
    
    <content type="html"><![CDATA[<h2 id="run-package-from-dev-dependencies"><a class="markdownIt-Anchor" href="#run-package-from-dev-dependencies"></a> Run Package from Dev Dependencies</h2><ul><li>npx was added to npm after version 5.2</li><li>npx was used to run package installed in dev dependencies</li></ul><h3 id="commands"><a class="markdownIt-Anchor" href="#commands"></a> Commands</h3><ul><li>native</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./node_modules/.bin/jest</span><br></pre></td></tr></table></figure><ul><li>npx</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx jext</span><br></pre></td></tr></table></figure><ul><li>yarn</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn jest</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="npm-vs-yarn"><a class="markdownIt-Anchor" href="#npm-vs-yarn"></a> Npm vs Yarn</h2><div class="row">    <embed src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/pdf/yarn.pdf" width="100%" height="550" type="application/pdf"></div><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;run-package-from-dev-dependencies&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#run-package-from-dev-dependencies&quot;&gt;&lt;/a&gt; Run Package from Dev Dependencies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;npx was added to npm after version 5.2&lt;/li&gt;
&lt;li&gt;npx was used to run package installed in dev dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;commands&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#commands&quot;&gt;&lt;/a&gt; Commands&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;native&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./node_modules/.bin/jest&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;npx&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npx jext&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;yarn&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yarn jest&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="Node.js" scheme="https://geekeast.github.io/tags/Node-js/"/>
    
      <category term="NPM" scheme="https://geekeast.github.io/tags/NPM/"/>
    
      <category term="Yarn" scheme="https://geekeast.github.io/tags/Yarn/"/>
    
  </entry>
  
  <entry>
    <title>Descriptive Analysis</title>
    <link href="https://geekeast.github.io/descriptiveanalysis.html"/>
    <id>https://geekeast.github.io/descriptiveanalysis.html</id>
    <published>2019-08-17T14:27:43.000Z</published>
    <updated>2019-08-24T00:21:19.023Z</updated>
    
    <content type="html"><![CDATA[<h2 id="案例引入"><a class="markdownIt-Anchor" href="#案例引入"></a> 案例引入</h2><p>你是某公司的数据分析师，有一天，你的上司给了你加州程序员收入的一张表格，需要你对加州程序员的收入情况进行汇报。请问你应该如何准备此次汇报？</p><ul><li>把<code>原表</code>甩给上司 -&gt; 去吃鱿鱼</li><li>计算描述性统计量，<code>数值</code>丢给上司 -&gt; 去吃鱿鱼</li><li>搞懂<code>为什么</code>要做描述性统计，<code>计算</code>描述性统计量，对数值结果进行<code>解释</code> -&gt; 还在公司有口饭吃</li></ul><blockquote><p>分析报告是基于数据<strong>整体情况</strong>给出的，所以需要用到统计分析</p></blockquote><h2 id="分析目标"><a class="markdownIt-Anchor" href="#分析目标"></a> 分析目标</h2><ul><li>样本<code>分布形态</code>判别: 获取样本数据的<code>整体分布形态</code>，这决定了描述性分析之后数据模型的选择</li><li><code>异常点</code>检测：检测异常点，发现异常情况, 降低异常情况对后续分析过程的影响</li></ul><a id="more"></a><h2 id="分析角度"><a class="markdownIt-Anchor" href="#分析角度"></a> 分析角度</h2><h3 id="1-集中趋势central-tendency"><a class="markdownIt-Anchor" href="#1-集中趋势central-tendency"></a> 1. 集中趋势(Central Tendency)</h3><blockquote><p>集中趋势用来作为数据的集中代表，有三个值可以选择，对比分析时只选取最合适的一个</p></blockquote><ul><li>均值(Mean):<ul><li>容易受到极端值的影响</li><li>计算相对容易</li><li><strong>在正态分布或者近似正态分布情况下，采用均值代表数据的整体情况</strong></li></ul></li><li>中位数(Median)：<ul><li>不容易受到极端值得影响</li><li>在数据量很大的情况下，计算复杂</li><li><strong>在右偏分布下，采用中位数代表数据的整体情况</strong></li></ul></li><li>众数(Mode)：<ul><li>不容易受到极端值的影响</li><li>但是会受到数据脏点的影响</li><li><code>在实际中，基本用不到</code></li></ul></li></ul><h3 id="2-离散程度dispersion"><a class="markdownIt-Anchor" href="#2-离散程度dispersion"></a> 2. 离散程度(Dispersion)</h3><ul><li>范围(Range)<ul><li>计算通过最大值和最小值得出</li><li><code>包含的信息量很小，因此对于整体分析的价值不大</code></li></ul></li><li>方差<ul><li>衡量“均值”的代表性</li><li><strong>在需要求导的情况下使用</strong></li><li>可以解释为 数据的分化水平，是比较平均，还是差异比较大</li></ul></li><li>标准差<ul><li>方差开方即可</li><li><strong>有单位，因此经常使用</strong></li><li>可以解释为 <code>数据的分化水平，是比较平均，还是差异比较大</code></li></ul></li></ul><h3 id="3-分布形态distribution-shape"><a class="markdownIt-Anchor" href="#3-分布形态distribution-shape"></a> 3. 分布形态(Distribution Shape)</h3><ul><li>峰度(Kurtosis)<ul><li>正态(=3): 基准</li><li>尖峰厚尾(&gt; 3)：数据出现在中心的概率增加，出现在近离群点的概率也增加</li><li>低峰瘦尾(&lt; 3)：数据出现在中心的概率减小，出现在近离群点的概率也减小</li></ul></li><li>偏度(Skewness)<ul><li>正态(0): 基准</li><li>受到离群点的影响而形成</li><li>偏度大于<code>0.5</code>意味着高偏度</li><li>左偏(&lt;0)：<strong>均值&lt;中位数&lt;众数</strong> (左偏数据很少遇到)</li><li>右偏(&gt;0)：<strong>众数&gt;中位数&gt;均值</strong></li></ul></li></ul><h2 id="分析流程"><a class="markdownIt-Anchor" href="#分析流程"></a> 分析流程</h2><ul><li>Step 1: 看样本量即<strong>观测数</strong>的大小，是<code>小</code>样本数据还是<code>大</code>样本数据</li><li>Step 2: 看数据的<strong>偏度</strong>：数值为正则为<code>右偏</code>，数值为负则为<code>左偏</code>，数值为0则为正态偏度</li><li>Step 3: 看数据的<strong>集中趋势</strong>: 如果数据<code>有偏</code>，则选取<code>中位数</code>；<code>无偏</code>则选取<code>均值</code>作为数据的代表; 选取后根据<code>均值</code>、<code>中位数</code>的大小来验证对数据<code>有偏</code>和<code>无偏</code>的判断</li><li>Step 4: 看数据的<strong>离散趋势</strong>：在需要对比的情况下，能够得出数据<code>基于均值</code>的<code>分化</code>情况，是比较<code>集中</code>还是<code>分化严重</code></li><li>Step 5: 可选地增加对<code>众数</code>、<code>峰度</code>的描述</li></ul><h2 id="相关知识"><a class="markdownIt-Anchor" href="#相关知识"></a> 相关知识</h2><h3 id="观测数"><a class="markdownIt-Anchor" href="#观测数"></a> 观测数</h3><ul><li>样本量的大小</li><li><code>&lt;30</code> 意味着小样本</li></ul><h3 id="分布形态"><a class="markdownIt-Anchor" href="#分布形态"></a> 分布形态</h3><ul><li>正态分布：多出现于自然界</li><li>泊松分布：网页点击量, 排队长度</li><li>伽玛分布：灾难损失</li><li>对数正态分布：(取对数后为正态分布): 收入情况</li></ul><h3 id="标准误差与标准差"><a class="markdownIt-Anchor" href="#标准误差与标准差"></a> 标准误差与标准差</h3><ul><li>标准差:<code>一次</code>抽样中<code>个体分数</code>间的离散程度，反映了<code>个体分数对样本均值</code>的代表性，用于<code>描述统计</code></li><li>标准误差：<code>多次</code>抽样中<code>样本均值</code>间的离散程度，反映了<code>样本均值对总体均值</code>的代表性，用于<code>推论统计</code></li></ul><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj11a2VKTHVvZF96dw==" title="https://www.youtube.com/watch?v=ukeJLuod_zw">Interpret Descriptive Statistics<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1CZTY3WHdHOHBpWQ==" title="https://www.youtube.com/watch?v=Be67XwG8piY">描述性统计与探索型数据分析（上）<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1GV05CUTEzSnZrMA==" title="https://www.youtube.com/watch?v=FWNBQ13Jvk0">描述性统计与探索型数据分析（下）<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cubGl6ZW5naGFpLmNvbS9hcmNoaXZlcy8yNTM4Ni5odG1s" title="https://www.lizenghai.com/archives/25386.html">数据分析之描述性统计<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cDovL3dlbWVkaWEuaWZlbmcuY29tLzg0NDU2ODgzL3dlbWVkaWEuc2h0bWw=" title="http://wemedia.ifeng.com/84456883/wemedia.shtml">CFA一级重难点：分布的偏度和峰度<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0Lm1pbml0YWIuY29tL3poLWNuL21pbml0YWIvMTgvaGVscC1hbmQtaG93LXRvL3N0YXRpc3RpY3MvYmFzaWMtc3RhdGlzdGljcy9ob3ctdG8vZGlzcGxheS1kZXNjcmlwdGl2ZS1zdGF0aXN0aWNzL21ldGhvZHMtYW5kLWZvcm11bGFzL21ldGhvZHMtYW5kLWZvcm11bGFzLw==" title="https://support.minitab.com/zh-cn/minitab/18/help-and-how-to/statistics/basic-statistics/how-to/display-descriptive-statistics/methods-and-formulas/methods-and-formulas/">Minitab 18 描述型统计<i class="fa fa-external-link"></i></span></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;案例引入&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#案例引入&quot;&gt;&lt;/a&gt; 案例引入&lt;/h2&gt;
&lt;p&gt;你是某公司的数据分析师，有一天，你的上司给了你加州程序员收入的一张表格，需要你对加州程序员的收入情况进行汇报。请问你应该如何准备此次汇报？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把&lt;code&gt;原表&lt;/code&gt;甩给上司 -&amp;gt; 去吃鱿鱼&lt;/li&gt;
&lt;li&gt;计算描述性统计量，&lt;code&gt;数值&lt;/code&gt;丢给上司 -&amp;gt; 去吃鱿鱼&lt;/li&gt;
&lt;li&gt;搞懂&lt;code&gt;为什么&lt;/code&gt;要做描述性统计，&lt;code&gt;计算&lt;/code&gt;描述性统计量，对数值结果进行&lt;code&gt;解释&lt;/code&gt; -&amp;gt; 还在公司有口饭吃&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;分析报告是基于数据&lt;strong&gt;整体情况&lt;/strong&gt;给出的，所以需要用到统计分析&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;分析目标&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#分析目标&quot;&gt;&lt;/a&gt; 分析目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;样本&lt;code&gt;分布形态&lt;/code&gt;判别: 获取样本数据的&lt;code&gt;整体分布形态&lt;/code&gt;，这决定了描述性分析之后数据模型的选择&lt;/li&gt;
&lt;li&gt;&lt;code&gt;异常点&lt;/code&gt;检测：检测异常点，发现异常情况, 降低异常情况对后续分析过程的影响&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Analytics" scheme="https://geekeast.github.io/categories/Analytics/"/>
    
    
      <category term="Descriptive Analysis" scheme="https://geekeast.github.io/tags/Descriptive-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Create React App From Scratch</title>
    <link href="https://geekeast.github.io/createreactfromscatch.html"/>
    <id>https://geekeast.github.io/createreactfromscatch.html</id>
    <published>2019-08-14T01:18:00.000Z</published>
    <updated>2019-08-15T03:29:39.342Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>Tool</th><th>Description</th><th>Branch</th></tr></thead><tbody><tr><td>Git</td><td>Version Control</td><td><a href="#1">Repo</a>; <a href="#21">Husky</a>; <a href="#25">Boilerplate</a></td></tr><tr><td>Webpack</td><td>Bundler</td><td><a href="#5">Mode</a>; <a href="#6">Server</a>; <a href="#7">Debugger</a>; <a href="#12">Analyzer</a>; <a href="#13">Externalize</a></td></tr><tr><td>Babel</td><td>Transpiler</td><td><a href="#8">React Class</a>; <a href="#9">Loader</a>; <a href="#14">Polyfill</a></td></tr><tr><td>React</td><td>Component Web</td><td><a href="#10">Hot Loading</a>; <a href="#15">Lazy Loading</a>; <a href="#22">Strict Mode</a>; <a href="#23">Error Boundary</a>; <a href="#24">propTypes</a></td></tr><tr><td>NPM</td><td>Node</td><td><a href="#1">Git Repo Info</a>; <a href="#11">Scripts</a></td></tr><tr><td>Test</td><td>Test code</td><td><a href="#16">Jest &amp; Enzyme</a></td></tr><tr><td>Code Formatter</td><td>Format code</td><td><a href="#17">Prettier</a></td></tr><tr><td>Code Error Detector</td><td>Detect potential error of code</td><td><a href="#18">ESLint</a>; <a href="#20">react-axe</a></td></tr></tbody></table><a id="more"></a><h3 id="1">Intialize Project</h3><ul><li>Create <code>react-webpack</code> folder</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir react-webpack &amp;&amp; <span class="built_in">cd</span> react-webpack</span><br></pre></td></tr></table></figure><ul><li>Initialize <code>package.json</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><ul><li>Initialize <code>.git</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">"init"</span></span><br></pre></td></tr></table></figure><ul><li>Create <code>react-from-scratch</code> in <code>Github</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:GeekEast/react-from-scratch.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><ul><li>Append <code>git</code> info to <code>package.json</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure><ul><li>Add <code>.gitignore</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node_modules</span><br><span class="line">dist</span><br></pre></td></tr></table></figure><h3 id="2">Webpack</h3><ul><li>Install <code>yarn add --dev webpack webpack-cli</code></li><li>Modify <code>package.json</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">"build": "webpack"</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>Webpack two modes：<ul><li><code>production</code> (default) -&gt; minimized and optimize bundle.js <code>yarn build</code></li><li><code>development</code> mode -&gt; more code but kind of readable if you want to debug (seldomly) <code>yarn build -- --mode development</code></li></ul></li><li>config <code>webpack.config.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  mode: <span class="string">'production'</span>, <span class="comment">// production or development</span></span><br><span class="line">  entry: <span class="string">'./src/index.js'</span>, <span class="comment">// the entry point of the project</span></span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.join(__dirname, <span class="string">'dist'</span>), <span class="comment">// built file path</span></span><br><span class="line">    filename: <span class="string">'app.bundle.js'</span> <span class="comment">// built file name</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3">Babel</h3>- Install `yarn add --dev @babel/core @babel/cli @babel/preset-env`- Install `yarn add --dev babel-loader`- Config  `webpack.config.js`<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  mode: <span class="string">'production'</span>,</span><br><span class="line">  entry: <span class="string">'./src/index.js'</span>, </span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.join(__dirname, <span class="string">'dist'</span>), </span><br><span class="line">    filename: <span class="string">'app.bundle.js'</span> </span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// here</span></span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          presets: [<span class="string">'@babel/preset-env'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4">React</h3><ul><li>Install <code>yarn add react react-dom prop-types</code></li><li>Babel Support <code>yarn add @babel/preset-react</code></li><li>Config <code>webpack.config.js</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  mode: <span class="string">'production'</span>,</span><br><span class="line">  entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.join(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">    filename: <span class="string">'app.bundle.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          presets: [</span><br><span class="line">            <span class="string">'@babel/preset-env'</span>,</span><br><span class="line">            <span class="string">'@babel/preset-react'</span> <span class="comment">// here</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Install <code>yarn add --dev html-webpack-plugin</code><ul><li>It will generate the an entry html file in the dist folder.</li><li>The entry html file will automatically include the bundled js file.</li><li><code>For react app, we need an entry html to plugin all the components.</code></li><li><code>One html entry point and one javascript, That's all for a React App, right?</code></li></ul></li><li>create boilerplate of entry html</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- src/index.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>React App<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Modify <code>webpack.config.js</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  mode: <span class="string">'production'</span>,</span><br><span class="line">  entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.join(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">    filename: <span class="string">'app.bundle.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          presets: [<span class="string">'@babel/preset-env'</span>, <span class="string">'@babel/preset-react'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// here</span></span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: <span class="string">'./src/index.html'</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Webpack <code>Watch</code> Mode<ul><li>watch mode: every time a file changes, the webpack will <code>rebuild</code></li><li>very suitable for development mode</li></ul></li><li>Modify <code>package.json</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// package.json</span><br><span class="line">"scripts": &#123;</span><br><span class="line">"build": "webpack",</span><br><span class="line">"dev":"webpack --watch --mode development",</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5">Webpack Config Branching</h3><ul><li>Install <code>yarn add --dev webpack-merge</code></li><li>Rename <code>webpack.config.js</code> to <code>webpack.config.base.js</code></li><li>Create <code>webpack.config.prod.js</code> and <code>webpack.config.dev.js</code></li><li>Config <code>webpack.config.prod.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> merge = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>)</span><br><span class="line"><span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">'./webpack.config.base'</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = merge(baseConfig, &#123;</span><br><span class="line">  mode: <span class="string">'development'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>Config <code>webpack.config.dev.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.dev.js</span></span><br><span class="line"><span class="keyword">const</span> merge = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>)</span><br><span class="line"><span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">'./webpack.config.base'</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = merge(baseConfig, &#123;</span><br><span class="line">  mode: <span class="string">'development'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>Modify <code>package.json</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">"build": "webpack --config webpack.config.prod.js",</span><br><span class="line">"dev": "webpack --watch --config webpack.config.dev.js",</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="6">Run React App in Local Server</h3><ul><li>Eveytime you modify files, webpack will rebuild and the brower will be automatically refreshed</li><li>Install <code>yarn add --dev webpack-dev-server</code></li><li>Modify <code>package.json</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">  "build": "webpack --config webpack.config.prod.js",</span><br><span class="line">   // here: --open</span><br><span class="line">   "dev": "webpack-dev-server --open --configwebpack.config.dev.js"</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>Modify <code>webpack.config.dev.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = merge(baseConfig, &#123;</span><br><span class="line">  mode: <span class="string">'development'</span>,</span><br><span class="line">  <span class="comment">// here</span></span><br><span class="line">  devServer: &#123;</span><br><span class="line">    port: <span class="number">9000</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="7">Debugger</h3><ul><li>Debugger is a <code>break point</code></li><li>Add <code>debugger</code> in App.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// App.js</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">debugger</span> <span class="comment">// here</span></span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello world!!!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Modify <code>webpack.config.dev.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = merge(baseConfig, &#123;</span><br><span class="line">  mode: <span class="string">'development'</span>,</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    port: <span class="number">9000</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// here</span></span><br><span class="line">  devtool: <span class="string">'source-map'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>open browser -&gt; inspect -&gt; refesh App page -&gt; check source code</li></ul><h3 id="8">Syntax Support for React Class</h3><ul><li>Install <code>yarn add --dev @babel/plugin-proposal-class-properties</code></li><li>Modify <code>webpack.config.base.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">  rules: [</span><br><span class="line">    &#123;</span><br><span class="line">      test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">      loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">      exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">      options: &#123;</span><br><span class="line">        presets: [<span class="string">'@babel/preset-env'</span>, <span class="string">'@babel/preset-react'</span>],</span><br><span class="line">        plugins: [</span><br><span class="line">          <span class="string">'@babel/plugin-proposal-class-properties'</span>, <span class="comment">// here</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h3 id="9">Loader for CSS</h3><ul><li>Install <code>yarn add --dev style-loader css-loader</code></li><li>Modify <code>webpack.confg.base.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">rules: [</span><br><span class="line">&#123;</span><br><span class="line">test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">options: &#123;</span><br><span class="line">presets: [ <span class="string">'@babel/preset-env'</span>, <span class="string">'@babel/preset-react'</span> ],</span><br><span class="line">plugins: [ <span class="string">'@babel/plugin-proposal-class-properties'</span> ] <span class="comment">// here</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">use: [ <span class="string">'style-loader'</span>, <span class="string">'css-loader'</span> ],</span><br><span class="line">exclude: <span class="regexp">/node-modules/</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="10">React Hot Loading</h3><ul><li>Keep <code>state</code> when you modify code</li><li>Install <code>yarn add react-hot-loader</code></li><li>Modify <code>webpack.config.dev.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">options: &#123;</span><br><span class="line">presets: [ <span class="string">'@babel/preset-env'</span>, <span class="string">'@babel/preset-react'</span> ],</span><br><span class="line">plugins: [ <span class="string">'@babel/plugin-proposal-class-properties'</span>, <span class="string">'react-hot-loader/babel'</span> ] <span class="comment">// here</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>Modify the <code>component</code> you want to use <code>react-hot-loader</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// App.js</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">import</span> &#123; hot &#125; <span class="keyword">from</span> <span class="string">'react-hot-loader'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line"> ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> hot(<span class="built_in">module</span>)(App);</span><br></pre></td></tr></table></figure><ul><li>Modify <code>package.json</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">"build": "webpack --config webpack.config.prod.js",</span><br><span class="line">"dev": "webpack-dev-server --open --config webpack.config.dev.js",</span><br><span class="line">"dev:hot": "webpack-dev-server --open --hot --config webpack.config.dev.js" // here</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="11">Remove Duplicates in package.json</h3><ul><li>Before</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">"build": "webpack --config webpack.config.prod.js",</span><br><span class="line">"dev": "webpack-dev-server --open --config webpack.config.dev.js",</span><br><span class="line">"dev:hot": "webpack-dev-server --open --hot --config webpack.config.dev.js",</span><br><span class="line">"test": "echo \"Error: no test specified\" &amp;&amp; exit 1"</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>After</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">"build": "webpack --config webpack.config.prod.js",</span><br><span class="line">"dev": "webpack-dev-server --open --config webpack.config.dev.js",</span><br><span class="line">"dev:hot": "npm run dev -- --hot", // npm is better than yarn here</span><br><span class="line">"test": "echo \"Error: no test specified\" &amp;&amp; exit 1"</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="12">Webpack Bundle Analyzer</h3><ul><li>Install <code>yarn add --dev webpack-bundle-analyzer</code></li><li>Modify the <code>webpack.config.prod.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> merge = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>)</span><br><span class="line"><span class="comment">// here</span></span><br><span class="line"><span class="keyword">const</span> &#123; BundleAnalyzerPlugin &#125; = <span class="built_in">require</span>(<span class="string">'webpack-bundle-analyzer'</span>)</span><br><span class="line"><span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">'./webpack.config.base'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = merge(baseConfig, &#123;</span><br><span class="line">  mode: <span class="string">'production'</span>,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="comment">// here</span></span><br><span class="line">    <span class="keyword">new</span> BundleAnalyzerPlugin(&#123;</span><br><span class="line">      analyzerMode: <span class="string">'static'</span>, <span class="comment">// optional: generate a report html rather than starting a server</span></span><br><span class="line">      openAnalyzer: <span class="literal">false</span> <span class="comment">// optional: to generate report html wihtout opening it</span></span><br><span class="line">      reportFilename: <span class="string">'bundle_size.html'</span> <span class="comment">//optiona: the report name</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>yarn build</code> -&gt; will generate a report in <code>dist</code></li></ul><h3 id="13">Externalize in Webpack</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly96aC1oYW5zLnJlYWN0anMub3JnL2RvY3MvY2RuLWxpbmtzLmh0bWw=" title="https://zh-hans.reactjs.org/docs/cdn-links.html">React and ReactDOM CDN<i class="fa fa-external-link"></i></span></li><li>Modify <code>webpack.config.prod.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment">// external means exclude sth out of the bundle.sj</span></span><br><span class="line"><span class="comment">// in the following case, the app is blank because we eject the react and react-dom</span></span><br><span class="line">externals: &#123;</span><br><span class="line">react: <span class="string">'React'</span>,</span><br><span class="line"><span class="string">'react-dom'</span>: <span class="string">'ReactDOM'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>Modify src/index.html (<span class="exturl" data-url="aHR0cHM6Ly9lanMuYm9vdGNzcy5jb20v" title="https://ejs.bootcss.com/">EJS<i class="fa fa-external-link"></i></span>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">process.env.NODE_ENV</span> === <span class="string">'production'</span>) &#123; %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">    <span class="attr">crossorigin</span></span></span><br><span class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">"https://unpkg.com/react@16/umd/react.production.min.js"</span></span></span><br><span class="line"><span class="tag">  &gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">    <span class="attr">crossorigin</span></span></span><br><span class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"</span></span></span><br><span class="line"><span class="tag">  &gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="14">Polyfill for Browsers</h3><ul><li>Polyfill: provide something that browser cannot do</li><li>Install <code>yarn add @babel/polyfill</code></li><li>Modify <code>index.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'@babel/polyfill'</span></span><br></pre></td></tr></table></figure><ul><li>Polyfill will make the bundle file large significantly, need <code>selection</code> to slim bunlde file.<br><code>npx browserslist &quot;last 2 versons, not dead, not &lt; 2%&quot;</code> (<strong>market share</strong>)</li><li>Modify <code>webpack.config.base.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">rules: [</span><br><span class="line">&#123;</span><br><span class="line">test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">options: &#123;</span><br><span class="line">presets: [</span><br><span class="line">            <span class="comment">// here</span></span><br><span class="line">[</span><br><span class="line"><span class="string">'@babel/preset-env'</span>,</span><br><span class="line">&#123;</span><br><span class="line">targets: [ <span class="string">'last 2 versions'</span>, <span class="string">'not dead'</span>, <span class="string">'not &lt; 2%'</span>, <span class="string">'not ie 11'</span> ],</span><br><span class="line">userBuiltIns: <span class="string">'entry'</span></span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line">            <span class="string">'@babel/preset-react'</span></span><br><span class="line">            ...</span><br></pre></td></tr></table></figure><h3 id="15">React Lazy Loading</h3><ul><li>Import on use -&gt; this will improve performance.</li><li>Install <code>yarn add @babel/plugin-syntax-dynamic-import</code></li><li>Modify <code>webpack.config.base.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">options: &#123;</span><br><span class="line">presets: [ <span class="string">'@babel/preset-env'</span>, <span class="string">'@babel/preset-react'</span> ],</span><br><span class="line">plugins: [</span><br><span class="line"><span class="string">'@babel/plugin-proposal-class-properties'</span>,</span><br><span class="line"><span class="string">'react-hot-loader/babel'</span>,</span><br><span class="line"><span class="string">'@babel/plugin-syntax-dynamic-import'</span> <span class="comment">// here</span></span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>Before</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// App.js</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">import</span> Warning <span class="keyword">from</span> <span class="string">'./warning'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">state = &#123;</span><br><span class="line">count: <span class="number">0</span></span><br><span class="line">&#125;;</span><br><span class="line">render() &#123;</span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line">&lt;div&gt;</span><br><span class="line">...</span><br><span class="line">&#123;<span class="keyword">this</span>.state.count &gt; <span class="number">10</span> ? <span class="xml"><span class="tag">&lt;<span class="name">Warning</span> /&gt;</span> : null&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><ul><li>After</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// App.js</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">const</span> Warning = React.lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'./warning'</span>));</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">state = &#123;</span><br><span class="line">count: <span class="number">0</span></span><br><span class="line">&#125;;</span><br><span class="line">render() &#123;</span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line">&lt;div&gt;</span><br><span class="line">...</span><br><span class="line">&#123;<span class="keyword">this</span>.state.count &gt; <span class="number">10</span> ? (</span><br><span class="line">&lt;React.Suspense fallback=&#123;<span class="literal">null</span>&#125;&gt;</span><br><span class="line">&lt;Warning /&gt;</span><br><span class="line">&lt;<span class="regexp">/React.Suspense&gt;</span></span><br><span class="line"><span class="regexp">) : null&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="16">Jest Testing Library - Jest & Enzyme</h3><ul><li>Install <code>yarn add --dev jest ts-jest jest-static-stubs identity-obj-proxy enzyme @types/enzyme enzyme-adapter-react-16 enzyme-to-json</code></li><li>Modify <code>package.json</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">  ...</span><br><span class="line">  "test": "jest --passWithNoTests",</span><br><span class="line">  ...</span><br><span class="line">&#125;,</span><br><span class="line">...</span><br><span class="line">"jest": &#123;</span><br><span class="line">  "preset": "ts-jest",</span><br><span class="line">  "roots": [</span><br><span class="line">    <span class="string">"&lt;rootDir&gt;/src"</span></span><br><span class="line">  ],</span><br><span class="line">  "setupFiles": [</span><br><span class="line">    <span class="string">"&lt;rootDir&gt;/enzyme.setup.ts"</span></span><br><span class="line">  ],</span><br><span class="line">  "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.tsx?$",</span><br><span class="line">  "moduleFileExtensions": [</span><br><span class="line">    "ts",</span><br><span class="line">    "tsx",</span><br><span class="line">    "js",</span><br><span class="line">    "jsx",</span><br><span class="line">    "json",</span><br><span class="line">    <span class="string">"node"</span></span><br><span class="line">  ],</span><br><span class="line">  "snapshotSerializers": [</span><br><span class="line">    <span class="string">"enzyme-to-json/serializer"</span></span><br><span class="line">  ],</span><br><span class="line">  "moduleNameMapper": &#123;</span><br><span class="line">    "^.+\\.(jpg|jpeg|gif|png|mp4|mkv|avi|webm|swf|wav|mid)$": "jest-static-stubs/$1",</span><br><span class="line">    "\\.(css|less|scss|sass)$": "identity-obj-proxy"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Config <code>enzyme.setup.ts</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; configure &#125; <span class="keyword">from</span> <span class="string">'enzyme'</span></span><br><span class="line"><span class="keyword">import</span> Adapter <span class="keyword">from</span> <span class="string">'enzyme-adapter-react-16'</span></span><br><span class="line"></span><br><span class="line">configure(&#123; <span class="attr">adapter</span>: <span class="keyword">new</span> Adapter() &#125;)</span><br></pre></td></tr></table></figure><h3 id="17">Code Formatter: Prettier</h3><ul><li>Install <code>yarn add --dev prettier pretty-quick</code></li><li>Modify <code>package.json</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">"build": "webpack --config webpack.config.prod.js",</span><br><span class="line">"dev": "webpack-dev-server --open --config webpack.config.dev.js",</span><br><span class="line">"dev:hot": "npm run dev -- --hot",</span><br><span class="line">"test": "jest",</span><br><span class="line">"format": "pretty-quick"</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>Config <code>.prettierrc</code></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"tabWidth"</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">"semi"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"singleQuote"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Config <code>.prettierignore</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// .prettierrcignore</span><br><span class="line">dist</span><br><span class="line">package-lock.json</span><br></pre></td></tr></table></figure><ul><li>Or you could use vs-code <code>prettier</code> (Easy)</li></ul><h3 id="18">Code Industry Normalization: ESLint</h3><ul><li>ESLint: hint <code>potential</code> error of code before actually running it.</li><li>Install <code>yarn add --dev eslint eslint-plugin-react@latest</code></li><li>Modify <code>package.json</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">"build": "webpack --config webpack.config.prod.js",</span><br><span class="line">"dev": "webpack-dev-server --open --config webpack.config.dev.js",</span><br><span class="line">"dev:hot": "npm run dev -- --hot",</span><br><span class="line">"test": "jest",</span><br><span class="line">"format": "pretty-quick",</span><br><span class="line">"lint": "eslint ./" // here</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>Initialize ESLint <code>./node_modules/.bin/eslint --init</code></li><li>Config <code>.eslintignore</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dist</span><br></pre></td></tr></table></figure><ul><li>Install <code>yarn add --dev babel-eslint</code></li><li>Modify <code>.eslintrc.json</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "parser": "babel-eslint", // point 1</span><br><span class="line">    "env": &#123;</span><br><span class="line">        "browser": true,</span><br><span class="line">        "es6": true,</span><br><span class="line">        "node": true,</span><br><span class="line">        "jest": true // point 3</span><br><span class="line">    &#125;,</span><br><span class="line">    "settings": &#123; // point 4</span><br><span class="line">        "react": &#123;</span><br><span class="line">            "version": "16.9.0"</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    "extends": ["eslint:recommended","plugin:react/recommended"], // point 2</span><br><span class="line">    "globals": &#123;</span><br><span class="line">        "Atomics": "readonly",</span><br><span class="line">        "SharedArrayBuffer": "readonly"</span><br><span class="line">    &#125;,</span><br><span class="line">   // don't add rules if you use prettier</span><br><span class="line">...</span><br></pre></td></tr></table></figure><ul><li>Then <code>yarn lint</code> will tell you some common errors -&gt; trace the errors and fix them.</li></ul><h3 id="19">Detect Accessibility Issues with ESLint</h3><ul><li>Accessibility: for example, if you don’t set alt key for <code>&lt;img&gt;</code>, it’s not accessible</li><li>Install <code>yarn add --dev eslint-plugin-jsx-a11y</code></li><li>Modify <code>.eslintrc.json</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">"extends": ["eslint:recommended","plugin:react/recommended",</span><br><span class="line">"plugin:jsx-a11y/recommended"], // point 1</span><br><span class="line">    "plugins": [</span><br><span class="line">    "react",</span><br><span class="line">    "jsx-a11y" // point 2</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="20">Detect Accessibility Issues that ESLint can't detect</h3><ul><li>Install <code>yarn add --dev react-axe</code></li><li>The detector will be shown in <code>chrome</code> console</li><li>Modify <code>index.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> DefaultsErrorBoundary <span class="keyword">from</span> <span class="string">'./DefaultsErrorBoundary'</span>;</span><br><span class="line"><span class="keyword">if</span> (process.env.NODE_ENV === <span class="string">'development'</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> axe = <span class="built_in">require</span>(<span class="string">'react-axe'</span>);</span><br><span class="line"><span class="comment">// 1000 is 1s to check accessibility issue</span></span><br><span class="line">axe(React, ReactDOM, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="21">Husky: make commit good</h3><ul><li>Install <code>yarn add --dev husky</code></li><li>Modify <code>package.json</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"husky": &#123;</span><br><span class="line">"hooks": &#123;</span><br><span class="line">"pre-commit": "pretty-quick --staged &amp;&amp; npm run lint &amp;&amp; npm run test" // only apply to git staged files</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>When you run <code>git commit ...</code><ul><li>it will format the staged file</li><li>it will lint files</li><li>it will test files<ul><li>if it fails, commit never happens</li><li>if it succeeds, commit succeeds.</li></ul></li></ul></li></ul><h3 id="22">React Strict Mode</h3><ul><li>Only useful in <code>development</code> mode rather than in <code>production</code> mode</li><li>You want to check <code>method version</code> (deprecated) problems deep in the code tree -&gt; use <code>&lt;React.StrictMode/&gt;</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line">...</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  <span class="comment">// or anywhere else</span></span><br><span class="line">  &lt;React.StrictMode&gt;</span><br><span class="line">    &lt;App/&gt;</span><br><span class="line">  &lt;<span class="regexp">/React.StrictMode&gt;,</span></span><br><span class="line"><span class="regexp">  document.getElementById('app')</span></span><br><span class="line"><span class="regexp">)</span></span><br></pre></td></tr></table></figure><h3 id="23">Error Boundary</h3><ul><li>Case: Error not handled.</li><li>Normally, nothing will be shown.</li><li>But you want to show sth when there is a error</li><li>Create <code>src/DefaultErrorBoundary</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultErrorBoundary</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    isError: <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> getDerivedStateFromError() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">isError</span>: <span class="literal">true</span> &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; isError &#125; = <span class="keyword">this</span>.state</span><br><span class="line">    <span class="keyword">const</span> &#123; children &#125; = <span class="keyword">this</span>.props</span><br><span class="line">    <span class="keyword">return</span> isError ? <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Something wrong<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span> : children</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Modify <code>index.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;React.StrictMode&gt;</span><br><span class="line">    &lt;DefaultsErrorBoundary&gt;</span><br><span class="line">      &lt;App /&gt;</span><br><span class="line">    &lt;<span class="regexp">/DefaultsErrorBoundary&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>React.StrictMode&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'app'</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="24">Define propTypes for React</h3><ul><li>lint: <code>'children' is missing in props validation</code></li><li>solution: define propTypes</li><li>Install <code>yarn add prop-types</code></li><li>Modify <code>DefaultsErrorBoundary.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> propTypes <span class="keyword">from</span> <span class="string">'prop-types'</span>;</span><br><span class="line">  ...</span><br><span class="line"><span class="keyword">static</span> propTypes = &#123;</span><br><span class="line">children: propTypes.node.isRequired</span><br><span class="line">  &#125;;</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><h3 id="25">Boilerplate to create React app</h3><ul><li><strong>Step 1</strong>: slim your configured React App to a boilerplate</li><li><strong>Step 2</strong>: git add &amp;&amp; commit &amp;&amp; push to the remote repo</li><li><strong>Step 3</strong>: <code>git clone --depth=1 git@... project_name</code> to clone the last commit of the remote repo</li><li><strong>Step 4</strong>: cd the project and <code>rm -rf .git</code></li><li><strong>Step 5</strong>: intialize as your own project <code>git init</code></li><li><strong>Step 6</strong>: go back to the <code>start</code> of this tutorial, you will know what to do next.</li></ul><h3 id="questions"><a class="markdownIt-Anchor" href="#questions"></a> Questions</h3><h4 id="what-is-preset-env"><a class="markdownIt-Anchor" href="#what-is-preset-env"></a> What is <code>preset-env</code></h4><ul><li>preset-env includes a lot of latest javascript version, for example, es2015; es2016; es2107</li><li>preset-react is especially for react code</li></ul><h4 id="how-to-run-webpack-manually"><a class="markdownIt-Anchor" href="#how-to-run-webpack-manually"></a> How to run webpack manually?</h4><p><code>node_modules/.bin/webpack</code></p><h4 id="how-to-run-babel-manually"><a class="markdownIt-Anchor" href="#how-to-run-babel-manually"></a> How to run babel manually</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node_modules/.bin/babel ./src/greet.js --presets=@babel/preset-env</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">$(npm bin)/babel ./src/greet.js --presets=@babel/preset-env</span><br></pre></td></tr></table></figure><h4 id="how-to-format-code-using-prettier-manually"><a class="markdownIt-Anchor" href="#how-to-format-code-using-prettier-manually"></a> How to format code using prettier manually?</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx prettier --write <span class="string">"**/*.js"</span></span><br></pre></td></tr></table></figure><h4 id="what-is-loader-in-webpack"><a class="markdownIt-Anchor" href="#what-is-loader-in-webpack"></a> What is loader in webpack?</h4><ul><li>loader is sth that helps webpack to translate some kind of files.</li></ul><h4 id="question-why-we-need-cdn-of-react-and-reactdom"><a class="markdownIt-Anchor" href="#question-why-we-need-cdn-of-react-and-reactdom"></a> Question: Why we need CDN of React and ReactDOM?</h4><ul><li>need answer</li></ul><h3 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h3><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC84NjI1MTUyM2U4OTg=" title="https://www.jianshu.com/p/86251523e898">License说明<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93ZWJwYWNrLmpzLm9yZy9sb2FkZXJzLw==" title="https://webpack.js.org/loaders/">Webpack Loaders<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC81YjlkMzMwYzM3NDA=" title="https://www.jianshu.com/p/5b9d330c3740"><strong>Typescript+React</strong><i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82MjQwMTYyNg==" title="https://zhuanlan.zhihu.com/p/62401626"><strong>ESLint for Typescript</strong><i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly90eXBlc2NyaXB0LmJvb3Rjc3MuY29tL2dlbmVyaWNzLmh0bWw=" title="https://typescript.bootcss.com/generics.html">Typescript中文手册<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tool&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Branch&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Git&lt;/td&gt;
&lt;td&gt;Version Control&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;#1&quot;&gt;Repo&lt;/a&gt;; &lt;a href=&quot;#21&quot;&gt;Husky&lt;/a&gt;; &lt;a href=&quot;#25&quot;&gt;Boilerplate&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Webpack&lt;/td&gt;
&lt;td&gt;Bundler&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;#5&quot;&gt;Mode&lt;/a&gt;; &lt;a href=&quot;#6&quot;&gt;Server&lt;/a&gt;; &lt;a href=&quot;#7&quot;&gt;Debugger&lt;/a&gt;; &lt;a href=&quot;#12&quot;&gt;Analyzer&lt;/a&gt;; &lt;a href=&quot;#13&quot;&gt;Externalize&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Babel&lt;/td&gt;
&lt;td&gt;Transpiler&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;#8&quot;&gt;React Class&lt;/a&gt;; &lt;a href=&quot;#9&quot;&gt;Loader&lt;/a&gt;; &lt;a href=&quot;#14&quot;&gt;Polyfill&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;React&lt;/td&gt;
&lt;td&gt;Component Web&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;#10&quot;&gt;Hot Loading&lt;/a&gt;; &lt;a href=&quot;#15&quot;&gt;Lazy Loading&lt;/a&gt;; &lt;a href=&quot;#22&quot;&gt;Strict Mode&lt;/a&gt;; &lt;a href=&quot;#23&quot;&gt;Error Boundary&lt;/a&gt;; &lt;a href=&quot;#24&quot;&gt;propTypes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NPM&lt;/td&gt;
&lt;td&gt;Node&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;#1&quot;&gt;Git Repo Info&lt;/a&gt;; &lt;a href=&quot;#11&quot;&gt;Scripts&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Test&lt;/td&gt;
&lt;td&gt;Test code&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;#16&quot;&gt;Jest &amp;amp; Enzyme&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Code Formatter&lt;/td&gt;
&lt;td&gt;Format code&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;#17&quot;&gt;Prettier&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Code Error Detector&lt;/td&gt;
&lt;td&gt;Detect potential error of code&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;#18&quot;&gt;ESLint&lt;/a&gt;; &lt;a href=&quot;#20&quot;&gt;react-axe&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="React" scheme="https://geekeast.github.io/tags/React/"/>
    
      <category term="Webpack" scheme="https://geekeast.github.io/tags/Webpack/"/>
    
      <category term="Babel" scheme="https://geekeast.github.io/tags/Babel/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap Tutorial</title>
    <link href="https://geekeast.github.io/bootstraptutorial.html"/>
    <id>https://geekeast.github.io/bootstraptutorial.html</id>
    <published>2019-08-04T23:14:11.000Z</published>
    <updated>2019-08-05T02:54:57.026Z</updated>
    
    <content type="html"><![CDATA[<h2 id="layout"><a class="markdownIt-Anchor" href="#layout"></a> Layout</h2><h3 id="container"><a class="markdownIt-Anchor" href="#container"></a> Container</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 居中内容，占满父级宽度 */</span></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: auto;</span><br><span class="line">  <span class="attribute">margin-left</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果想居中内容，将其放置在container内部即可</li></ul><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;layout&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#layout&quot;&gt;&lt;/a&gt; Layout&lt;/h2&gt;
&lt;h3 id=&quot;container&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#container&quot;&gt;&lt;/a&gt; Container&lt;/h3&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 居中内容，占满父级宽度 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;padding-right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;15px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;15px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;margin-right&lt;/span&gt;: auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;: auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;如果想居中内容，将其放置在container内部即可&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Frontend" scheme="https://geekeast.github.io/categories/Frontend/"/>
    
    
      <category term="Bootstrap" scheme="https://geekeast.github.io/tags/Bootstrap/"/>
    
      <category term="CSS" scheme="https://geekeast.github.io/tags/CSS/"/>
    
      <category term="Frontend" scheme="https://geekeast.github.io/tags/Frontend/"/>
    
  </entry>
  
  <entry>
    <title>Video Streaming in React</title>
    <link href="https://geekeast.github.io/reactrouterreduxstream.html"/>
    <id>https://geekeast.github.io/reactrouterreduxstream.html</id>
    <published>2019-07-30T03:51:56.000Z</published>
    <updated>2019-07-30T03:55:43.900Z</updated>
    
    <content type="html"><![CDATA[<h2 id="react-router"><a class="markdownIt-Anchor" href="#react-router"></a> React Router</h2><h3 id="dependency"><a class="markdownIt-Anchor" href="#dependency"></a> Dependency</h3><ul><li><p>react-router-dom</p></li><li><p>Router doesn’t care about <code>localhost:3000</code>, it cares about sth behind <code>localhost:3000</code> like <code>/</code></p></li></ul><h3 id="question"><a class="markdownIt-Anchor" href="#question"></a> Question</h3><ul><li><p><strong>Please see the following code and answer what will happen after enter <code>localhost:3000</code></strong></p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;BrowserRouter&gt;</span><br><span class="line">    &lt;Route path=<span class="string">"/"</span> exact component=&#123;PageOne&#125; /&gt;</span><br><span class="line">    &lt;Route path=<span class="string">"/"</span> exact component=&#123;PageTwo&#125; /&gt;</span><br><span class="line">&lt;<span class="regexp">/BrowserRouter&gt;</span></span><br></pre></td></tr></table></figure><ol><li>The PageOne and PageTwo Component will be both displayed.</li><li>Browser Router will check <code>all</code> the path and matched route will be displayed one by one.</li></ol></li><li><p><strong>Please see the following code and answer what will happen after enter <code>localhost:3000</code></strong></p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;BrowserRouter&gt;</span><br><span class="line">    &lt;Route path=<span class="string">"/"</span>  component=&#123;Home&#125; /&gt;</span><br><span class="line">    &lt;Route path=<span class="string">"/pageone"</span>  component=&#123;PageOne&#125; /&gt;</span><br><span class="line">&lt;<span class="regexp">/BrowserRouter&gt;</span></span><br></pre></td></tr></table></figure><ul><li>The PageOne will be displayed.</li></ul></li></ul><a id="more"></a><ul><li><strong>How React Router match path?</strong><ol><li>For example. for address <code>localhost:3000/page/5</code>, and we have path <code>/</code>, <code>/page</code>, <code>/page/5</code>.</li><li>The History Obejct will extract path from address as <code>/page/5</code></li><li>Then will run this function <code>'/page/5'.contains('/')</code>,<code>'/page/5'.contains('/page')</code>,<code>'/page/5'.contains('/page/5')</code></li><li>And will return <code>all</code> true, so all the path will be matched and the respective components will be returned.</li></ol></li><li><strong>Tell us the difference between using <code>exact</code> and not using <code>exact</code></strong><ol><li>using <code>exact</code> will call something like <code>===</code></li><li>not using <code>exact</code> will call something like <code>contains</code></li></ol></li><li><strong>Why is it a bad practice to use anchor tag in React to redirect to other page within the website?</strong><ol><li>This will cause a new request to the server, which is Network expensive and unnecessary.</li><li>It’s a good practice to use <code>&lt;Link&gt;</code> component from <code>react-router-dom</code>. <code>It's just about showing and hiding different components.</code></li><li>Both way will cause the re-render of component, the difference is the <code>networking</code>.</li></ol></li><li><strong>What will happen if no path is matched in traditional server vs React Router?</strong><ol><li>In traditional server, the default behaviour is to return a 404 page.</li><li>In React Router, the default to to return <code>index.html</code>.</li></ol></li><li><strong>Components like <code>Navigation</code> bar, should you put it inside <code>BrowserRouter</code>, why?</strong><br>1.These are common things you want to display to every page.<br>2.There are <strong>two</strong> ways to solve this problem:<br>3.Outside the router: this works but you <code>cannot</code> use <code>&lt;Link&gt;</code> within the common components.<br>4.Inside the router: this works and you can also use <code>&lt;Link&gt;</code></li><li><strong>Why we use History Object? And How?</strong></li><li>Because we want to manipulate the browser programatically</li><li>Create our own <code>history</code> object as params and use with <code>Router</code> from ‘react-router-dom’ rather than <code>BrowserRouter</code></li><li><strong>Why we need to isolate component when using React-router?</strong><ul><li>For example, <code>edit</code> Streams depends on the state of <code>all</code> streams.</li><li>We need to isolate the streamEdit router component and the streamList router component</li><li>Otherwise, it will cause some error <code>sometimes</code>.</li></ul></li></ul><h3 id="3-routers"><a class="markdownIt-Anchor" href="#3-routers"></a> 3 Routers</h3><table><thead><tr><th>Name</th><th>Column B</th><th>Column C</th></tr></thead><tbody><tr><td>BrowserRouter</td><td><code>localhost:3000/page</code></td><td>add path after Top Level Domain</td></tr><tr><td>HashRouter</td><td><code>localhost:3000/#/page</code></td><td>add a # between TLD and path</td></tr><tr><td>MemoryRouter</td><td><code>localhost:3000</code></td><td>add nothing after TLD</td></tr></tbody></table><h3 id="google-oauth"><a class="markdownIt-Anchor" href="#google-oauth"></a> Google OAuth</h3><p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vaWRlbnRpdHkvcHJvdG9jb2xzL2dvb2dsZXNjb3Blcw==" title="https://developers.google.com/identity/protocols/googlescopes">OAuth 2.0 Scopes for Google APIs<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9jb25zb2xlLmRldmVsb3BlcnMuZ29vZ2xlLmNvbQ==" title="https://console.developers.google.com">Google Console<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vaWRlbnRpdHkvc2lnbi1pbi93ZWIvcmVmZXJlbmNlI2dhcGlhdXRoMmluaXRwYXJhbXM=" title="https://developers.google.com/identity/sign-in/web/reference#gapiauth2initparams">gapi docs<i class="fa fa-external-link"></i></span></p><h3 id="configure-redux-dev-tool"><a class="markdownIt-Anchor" href="#configure-redux-dev-tool"></a> Configure Redux Dev Tool</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createStore, applyMiddleware, compose &#125; <span class="keyword">from</span> <span class="string">'redux'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> composeEnhancers = <span class="built_in">window</span>.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;</span><br><span class="line">ReactDOM.render(</span><br><span class="line">&lt;Provider store=&#123;createStore(reducers, composeEnhancers(applyMiddleware(thunk)))&#125;&gt;</span><br><span class="line">&lt;App /&gt;</span><br><span class="line">&lt;<span class="regexp">/Provider&gt;,</span></span><br><span class="line"><span class="regexp">document.getElementById('root')</span></span><br></pre></td></tr></table></figure><h3 id="redux-form"><a class="markdownIt-Anchor" href="#redux-form"></a> <span class="exturl" data-url="aHR0cHM6Ly9yZWR1eC1mb3JtLmNvbS84LjIuMi8=" title="https://redux-form.com/8.2.2/">Redux Form<i class="fa fa-external-link"></i></span></h3><ul><li>a convenient reducer for form component</li><li>A convenient solution for communication between views and redux state.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Field, reduxForm &#125; <span class="keyword">from</span> <span class="string">'redux-form'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StreamForm</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">renderError = <span class="function">(<span class="params">&#123; error, touched &#125;</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (error &amp;&amp; touched) &#123;</span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line">&lt;div className=<span class="string">"ui error message"</span>&gt;</span><br><span class="line">&lt;div className=<span class="string">"header"</span>&gt; &#123;error&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// meta is connected with validate function</span></span><br><span class="line">renderInput = <span class="function">(<span class="params">&#123; input, label, meta &#125;</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> className = <span class="string">`field <span class="subst">$&#123;meta.error &amp;&amp; meta.touched ? <span class="string">'error'</span> : <span class="string">''</span>&#125;</span>`</span>;</span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line">&lt;div className=&#123;className&#125;&gt;</span><br><span class="line">&lt;label&gt;&#123;label&#125;&lt;<span class="regexp">/label&gt;</span></span><br><span class="line"><span class="regexp">&lt;input &#123;...input&#125; autoComplete="off" /</span>&gt;</span><br><span class="line">&#123;<span class="keyword">this</span>.renderError(meta)&#125;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">);</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">onSubmit = (formValues) =&gt; &#123;</span></span><br><span class="line"><span class="regexp">this.props.onSubmit(formValues);</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp">render() &#123;</span></span><br><span class="line"><span class="regexp">return (</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ magic props with handleSubmit method</span></span><br><span class="line"><span class="regexp">&lt;form onSubmit=&#123;this.props.handleSubmit(this.onSubmit)&#125; className="ui form error"&gt;</span></span><br><span class="line"><span class="regexp">&#123;/</span>* user input field *<span class="regexp">/&#125;</span></span><br><span class="line"><span class="regexp">&lt;Field name="title" component=&#123;this.renderInput&#125; label="Enter Title" /</span>&gt;</span><br><span class="line">&lt;Field name=<span class="string">"description"</span> component=&#123;<span class="keyword">this</span>.renderInput&#125; label=<span class="string">"Enter Description"</span> /&gt;</span><br><span class="line">&lt;button className=<span class="string">"ui button primary"</span>&gt;Submit&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>form&gt;</span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// every time you input will run this function</span></span><br><span class="line"><span class="keyword">const</span> validate = <span class="function">(<span class="params">formValues</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> errors = &#123;&#125;;</span><br><span class="line"><span class="keyword">if</span> (!formValues.title) &#123;</span><br><span class="line">errors.title = <span class="string">'You must enter a title'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!formValues.description) &#123;</span><br><span class="line">errors.description = <span class="string">'You must enter a description'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> errors;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> reduxForm(&#123; <span class="attr">form</span>: <span class="string">'streamForm'</span>, validate &#125;)(StreamForm);</span><br></pre></td></tr></table></figure><h3 id="convert-object-to-array"><a class="markdownIt-Anchor" href="#convert-object-to-array"></a> Convert Object to Array</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> streams = <span class="built_in">Object</span>.values(object);</span><br></pre></td></tr></table></figure><h3 id="convert-array-to-object"><a class="markdownIt-Anchor" href="#convert-array-to-object"></a> Convert Array to Object</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> streams = _.mapKeys(array,<span class="string">'id'</span>);</span><br></pre></td></tr></table></figure><h3 id="loadsh-mapkeys"><a class="markdownIt-Anchor" href="#loadsh-mapkeys"></a> Loadsh <code>mapKeys()</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// this will take '' as the new key and return as an object</span></span><br><span class="line">mapKeys(iterable,(v,k)=&gt;&#123;<span class="keyword">return</span> <span class="string">''</span>&#125;)</span><br><span class="line"><span class="comment">// this will take v[attr_name] as the new key and retur as an object</span></span><br><span class="line">mapKeys(iterable, <span class="string">'attr_name'</span>)</span><br><span class="line"><span class="comment">// equals to </span></span><br><span class="line">mapKeys(iterable, (v,k) =&gt; v[<span class="string">'attr_name'</span>])</span><br></pre></td></tr></table></figure><h3 id="view-update-flow-chart"><a class="markdownIt-Anchor" href="#view-update-flow-chart"></a> View Update Flow Chart</h3><img style="width: 80%; margin: auto" src="https://geekeaskblogpics.s3-ap-southeast-2.amazonaws.com/posts/WX20190729-160600%402x.png"><h3 id="history-object"><a class="markdownIt-Anchor" href="#history-object"></a> History Object</h3><ul><li>It’s more flexible to manage your own history object rather than useing the BrowserRouter’s</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// history.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createBrowserHistory &#125; <span class="keyword">from</span> <span class="string">'history'</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> createBrowserHistory();</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="comment">// code code</span></span><br><span class="line"><span class="keyword">import</span> &#123; Router, Route &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> history <span class="keyword">from</span> <span class="string">'../history'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> App = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line">      &lt;div className=<span class="string">"ui container"</span>&gt;</span><br><span class="line">         <span class="comment">// core code</span></span><br><span class="line">&lt;Router history=&#123;history&#125;&gt;</span><br><span class="line">&lt;Header /&gt;</span><br><span class="line">&lt;Route path=<span class="string">"/"</span> exact component=&#123;StreamList&#125; /&gt;</span><br><span class="line">&lt;<span class="regexp">/Router&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><h3 id="react-portal"><a class="markdownIt-Anchor" href="#react-portal"></a> React Portal</h3><ul><li>Why we need to use react portal?<ul><li>If we want to use modal, we’d better take it as a child of <code>body</code> element with a <code>z-index</code> value</li><li>Portal is a convenient way to <code>modify</code> the <code>parent</code> component of an existing component.</li></ul></li></ul><h3 id="fragment"><a class="markdownIt-Anchor" href="#fragment"></a> Fragment</h3><ul><li>Why we need to use React Fragment?<ul><li>Some <code>div</code> wrapper will break the styling rules</li><li><code>Fragment</code> is like <code>div</code>, but doesn’t produce any <code>html</code> tags</li></ul></li></ul><h3 id="switch"><a class="markdownIt-Anchor" href="#switch"></a> Switch</h3><ul><li><p>What is switch? What is it used for?</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// this will show StreamCreate and StreamShow together</span></span><br><span class="line"><span class="comment">// 同级变量和定量重合问题</span></span><br><span class="line">&lt;Router history=&#123;history&#125;&gt;</span><br><span class="line">&lt;Header /&gt;</span><br><span class="line">&lt;Route path=<span class="string">"/streams/new"</span> exact component=&#123;StreamCreate&#125; /&gt;</span><br><span class="line">&lt;Route path=<span class="string">"/streams/:id"</span> exact component=&#123;StreamShow&#125; /&gt;</span><br><span class="line">&lt;<span class="regexp">/Router&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Solution</li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只会渲染第一个匹配到的路径</span></span><br><span class="line">&lt;Router history=&#123;history&#125;&gt;</span><br><span class="line">&lt;Header /&gt;</span><br><span class="line">&lt;Switch&gt;</span><br><span class="line">&lt;Route path=<span class="string">"/streams/new"</span> exact component=&#123;StreamCreate&#125; /&gt;</span><br><span class="line">&lt;Route path=<span class="string">"/streams/:id"</span> exact component=&#123;StreamShow&#125; /&gt;</span><br><span class="line">&lt;<span class="regexp">/Switch&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>Router&gt;</span><br></pre></td></tr></table></figure></li><li><p>Conclusion:</p><ul><li><p>Different Lengths: always with <strong><code>exact</code></strong>: order doesn’t matter but for good format - from <strong><code>Long</code></strong> to <strong><code>Short</code></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Route path=<span class="string">"/streams/"</span> exact component=&#123;StreamShow&#125; /&gt;</span><br><span class="line">&lt;Route path=<span class="string">"/"</span> exact component=&#123;StreamList&#125; /&gt;</span><br></pre></td></tr></table></figure></li><li><p>Same Length: always wrapped with <strong><code>Switch</code></strong>: from <strong><code>Fixed</code></strong> to <strong><code>Variable</code></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Switch&gt;</span><br><span class="line">&lt;Route path=<span class="string">"/streams/new"</span> exact component=&#123;StreamShow&#125; /&gt;</span><br><span class="line">&lt;Route path=<span class="string">"/streams/:id"</span> exact component=&#123;StreamList&#125; /&gt;</span><br><span class="line">&lt;<span class="regexp">/Switch&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="project-link"><a class="markdownIt-Anchor" href="#project-link"></a> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0dlZWtFYXN0L3JlZHV4LXN0cmVhbS1yb3V0ZXI=" title="https://github.com/GeekEast/redux-stream-router">Project Link<i class="fa fa-external-link"></i></span></h3><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;react-router&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#react-router&quot;&gt;&lt;/a&gt; React Router&lt;/h2&gt;
&lt;h3 id=&quot;dependency&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#dependency&quot;&gt;&lt;/a&gt; Dependency&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;react-router-dom&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Router doesn’t care about &lt;code&gt;localhost:3000&lt;/code&gt;, it cares about sth behind &lt;code&gt;localhost:3000&lt;/code&gt; like &lt;code&gt;/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;question&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#question&quot;&gt;&lt;/a&gt; Question&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Please see the following code and answer what will happen after enter &lt;code&gt;localhost:3000&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Route path=&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; exact component=&amp;#123;PageOne&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Route path=&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; exact component=&amp;#123;PageTwo&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/BrowserRouter&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;The PageOne and PageTwo Component will be both displayed.&lt;/li&gt;
&lt;li&gt;Browser Router will check &lt;code&gt;all&lt;/code&gt; the path and matched route will be displayed one by one.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Please see the following code and answer what will happen after enter &lt;code&gt;localhost:3000&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Route path=&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;  component=&amp;#123;Home&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Route path=&lt;span class=&quot;string&quot;&gt;&quot;/pageone&quot;&lt;/span&gt;  component=&amp;#123;PageOne&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/BrowserRouter&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;The PageOne will be displayed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://geekeast.github.io/categories/Fullstack/"/>
    
    
      <category term="React" scheme="https://geekeast.github.io/tags/React/"/>
    
      <category term="Redux" scheme="https://geekeast.github.io/tags/Redux/"/>
    
      <category term="Router" scheme="https://geekeast.github.io/tags/Router/"/>
    
      <category term="Streaming Video" scheme="https://geekeast.github.io/tags/Streaming-Video/"/>
    
  </entry>
  
</feed>
